{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>:: Please help translate Openbox! ::</p>"},{"location":"#openbox","title":"Openbox","text":"<p> Openbox is a highly configurable, next generation window manager with extensive standards support.</p> <p>The box visual style is well known for its minimalistic appearance. Openbox uses the box visual style, while providing a greater number of options for theme developers than previous box implementations. The theme documentation describes the full range of options found in Openbox themes.</p> <p>Openbox lets you bring the latest applications outside of a full desktop environment. Most modern applications have been written with GNOME and KDE in mind. With support for the latest freedesktop.org standards, as well as careful adherence to previous standards, Openbox provides an environment where applications work the way they were designed to.</p> <p>Openbox is a highly configurable window manager. It allows you to change almost every aspect of how you interact with your desktop and invent completely new ways to use and control it. It can be like a video game for controlling windows. But Openbox can also be kept extremely simple, as it is in the default setup, meaning that it can suit just about anybody. Openbox gives you control without making you do everything.</p> <p>Openbox makes desktop environments better. By running Openbox inside the GNOME or K desktop environments, you can combine their ease and functionality with the power of Openbox. Your desktop becomes cleaner and faster, and is in your control, when you use Openbox.</p> <p>Take a look at the getting started guide and change how you manage your desktop.</p> <p> GNOME/Openbox Openbox inside the GNOME desktop environment.</p> <p> KDE/Openbox Openbox inside the K Desktop Environment.</p> <p>KDE, K Desktop Environment and the KDE Logo are trademarks of KDE e.V. GNOME and the GNOME logo are trademarks of the GNOME foundation.</p>"},{"location":"Contribute/","title":"Contribute","text":""},{"location":"Contribute/#translations","title":"Translations","text":"<p>Help translate Openbox! Any improvements to existing translations, or translations to new languages would be greatly appreciated by your fellow users.</p> <p>Translations are done through \"po\" files. The easiest way to edit these files is to use KBabel, which is a part of KDE (in the kdesdk package).</p> <p>If you want to update an existing translation, browse through our latest translations. You can download and modify the translation from there (right click on the \"raw\" link and select \"save as\" or the equivalent).</p> <p>If you want to create a new translation from scratch, download the current translation template for Openbox or the translation template for ObConf and add your translations to it. Download the file and run the command <code>msginit --locale LL_CC</code> where LL_CC is the appropriate code for your language. For example ru for Russian, sv for swedish or en_CA for the Canadian variant of English. If you don't have the msginit command, you can save the file directly as <code>LL_CC.po</code> and fill in the header yourself, using an existing translation as a template.</p> <p>When you've completed a new translation, you can submit it to the bugzilla to have it included in the next release. To submit a translation, follow the link below and fill out the template to create a bug report. After the bug report has been created, attach your new \"po\" file to the bug. If you for some reason don't want to use bugzilla, you can also try to send the translation to the mailing list or contact us directly on IRC but these methods are less reliable and the translation might get lost.</p> <p> Please make sure to specify the character encoding properly or Openbox won't be able to read the strings, UTF-8 is preferable.</p> <p>If you have any questions about what the english text means, or anything else is unclear, please don't hesitate to contact us via the mailing list or on IRC.</p> <p>Thank you for your help!</p> <p>Browse existing translations for Openbox See how many strings are translated for a language in Openbox Browse existing translations for ObConf Submit a new or updated translation</p> <p>(Note: use the \"attach a file\" button, don't paste the whole file in the comment box)</p>"},{"location":"Contribute/#bug-reports","title":"Bug reports","text":"<p>  When submitting a bug report, please make sure to explain to the developers how to reproduce your problem. If we can't reproduce it, we probably can't fix it. Browse existing bug reports Submit a new bug report</p>"},{"location":"Contribute/#feature-requests","title":"Feature requests","text":"<p> Browse existing feature requests Submit a new feature request</p>"},{"location":"Contribute/#writing-code","title":"Writing code","text":"<p> Openbox development is done using git. See the Help/UsingGit page for details on how to check out the latest code and send your changes back upstream. Browse the Openbox git repo on GitHub.com</p>"},{"location":"Download/","title":"Download","text":"<p> Getting started guide.</p> <p>This is a short introduction that is recommended reading material for people new to Openbox or upgrading from a previous version.</p> <p>3.6.1:</p> <p>Changelog Source code (.tar.xz) - GPG Signature Source code (.tar.gz) - GPG Signature Build instructions</p> <p>To download from the current git repository:</p> <pre><code>git clone git://git.openbox.org/mikachu/openbox.git\n</code></pre> <p>See the README.GIT file for instructions on building from git.</p> <p>Browse the git repository: dana mikachu</p>"},{"location":"Download/#obconf-openbox-configuration-tool","title":"ObConf - Openbox configuration tool","text":"<p>2.0.4:</p> <p>Changelog Source code Installing instructions</p> <p>2.0.3:</p> <p>Ubuntu/Debian package for ia86 (.deb) Arch Linux package (.tar.gz) Source code Installing instructions</p> <p>To download from the current git repository:</p> <pre><code>`git clone git://git.openbox.org/dana/obconf.git\n</code></pre> <p>Browse the git repository</p>"},{"location":"LXDE/","title":"LXDE","text":"<p>Desktop Environment, developed by \"PCMan\" in Taiwan, aimed at lean elegant code and usable design.</p> <p>Uses Openbox as the Window Manager, with lightweight modular components in addition.</p>"},{"location":"LXDE/#links","title":"Links","text":"<ul> <li>Main website</li> <li>Wiki</li> <li>Forum</li> <li>On Wikipedia</li> </ul>"},{"location":"PowerManagement/","title":"Power Management","text":"<p>Openbox does not load power management by default - you must load it, or configure it to load in autostart.</p> <p>There are various options you may have available, depending on your distribution.</p>"},{"location":"PowerManagement/#pm-utils","title":"pm-utils","text":"<p>pm-utils gives shell commands such as <code>pm-hibernate</code> and <code>pm-suspend</code>. pm-utils on the Arch wiki has configuration details.</p>"},{"location":"PowerManagement/#acpid","title":"acpid","text":"<p>acpid is a flexible and extensible daemon for delivering ACPI events, including events triggered by:</p> <ul> <li>Pressing the power button</li> <li>Pressing a sleep/suspend button</li> <li>Closing a laptop/notebook lid</li> <li>Plugging or unplugging an AC power adapter from a laptop</li> </ul> <p>See also acpid on the Arch Wiki.</p>"},{"location":"PowerManagement/#gnome-power-manager","title":"gnome-power-manager","text":"<p>If you have GNOME installed on the same installation of Linux that you are using with Openbox (or if you don't mind installing a few GNOME dependencies) you can run gnome-power-manager - simply type or paste at the command prompt:</p> <pre><code>gnome-power-manager\n</code></pre> <p>Gnome power preferences provides a notify area icon, and lets you adjust the power managment settings used my gnome-power-manager. run:</p> <pre><code>gnome-power-preferences\n</code></pre>"},{"location":"PowerManagement/#xfce4-power-manager","title":"xfce4-power-manager","text":"<p><code>xfce4-power-manager</code> appears to require fewer dependencies than <code>gnome-power-manager</code>.</p>"},{"location":"PowerManagement/#notify-area-icons","title":"Notify area icons","text":"<p>Both the <code>Gnome</code> and the <code>Xfce4</code> place icons in the notify area - this will hopefully work in most or all panels, including <code>tint2</code> and <code>LXPanel</code>.</p>"},{"location":"PowerManagement/#see-also","title":"See also","text":"<p>Suspend and hibernate</p>"},{"location":"SuspendAndHibernate/","title":"Suspend and hibernate","text":"<p>Although suspend is not given as an option on the logout menu, it can be done. At the command line, enter:</p> <pre><code>pm-suspend\n</code></pre> <p>(This works in systems including Mandriva, Arch Linux and Debian-based systems - is it a universal Linux command?)</p>"},{"location":"SuspendAndHibernate/#adding-suspend-and-hibernate-buttons-at-logout","title":"Adding suspend and hibernate buttons at logout","text":"<p>A new package has been created as an alternative to the current openbox-logout script. It is a script which adds additional buttons for \"Hibernate\" and \"Suspend\" at logout. It may give mixed results with actually using these features. See New Logout Script with Hibernate &amp; Suspend Options (Help &amp; Support, CrunchBang Linux Forums, thread started 2008-12-03)</p>"},{"location":"SuspendAndHibernate/#see-also","title":"See also","text":"<p>Power management</p>"},{"location":"Wallpaper/","title":"Wallpaper","text":"<p>Openbox does not natively support wallpapers, but wallpapers can be displayed with Nitrogen.</p>"},{"location":"Wallpaper/#different-wallpaper-on-every-workspace","title":"Different wallpaper on every workspace","text":"<p>A different background for each workspace might be desired to provide orientation, to easily know which desktop you are on. A script is given here: A way to have per desktop or random wallpapers in Openbox. Add to <code>autostart.sh</code>. There may be an issue with resource usage, depending how often you switch desktops.</p> <p>Some older, sometimes incomplete solutions, in case the above isn't what is needed:</p> <ul> <li>Set different background images per virtual desktop.   \"have a desktop type window on each desktop that simply displayed   whatever you wanted, and it would have that effect\"</li> <li>Using feh.</li> <li>Using conky   (same thread as the feh idea). This will only change the wallpaper when   conky updates, and it will update every time conky updates, adding   to CPU usage. (There is a [suggestion] to use the $execi or   $texeci command to check whether the desktop is the same as when   last checked, hopefully using less resources, but no code is given.</li> <li>Different wallpaper on every workspace - solved -   works for keyboard combinations, not for changing desktop by mouse.</li> </ul>"},{"location":"Wallpaper/#rotating-desktop-wallpapers","title":"Rotating desktop wallpapers","text":"<p>See: Rotating desktop wallpapers</p>"},{"location":"Design/DocumentsActions/","title":"DocumentsActions","text":"<p>This is a chronological brain dump from top to bottom, so should really be read from bottom up maybe.</p> <ul> <li>singleword = action</li> <li>key:value = set option for last seen action</li> <li>{ } = for placing an action (or list of) in an action</li> <li>\" \" = is a string, not an action</li> <li>can use \\ \\ and inside any string</li> </ul>"},{"location":"Design/DocumentsActions/#filters","title":"Filters","text":"<ul> <li>[ ] = setting target(s) for an action, tries them left to right     until it finds one that matches at least 1 window. separate target     options by \",\". all options inside one set of [] must apply to     choose a window.<ul> <li>some targets are:<ul> <li>target - is the focused window, or the window targetted by     an interractive action</li> <li>focus - is the focused window (ignores the fact you're     targetting something else in alt-tab for instance</li> <li>title=\"foo\" - pattern match foo against all titles</li> <li>type=\"foo\" - pattern match foo against all types</li> <li>(basically anything we test in the app-specific rules..)</li> <li>desktop=1 - match against the window's current desktop (a     number or \"all\")</li> <li>ifviewing=3 - match against current desktop (filters all or     none)</li> <li>visible - a flag that the window is on the currently visible     desktop</li> <li>not - inverts the other test (maybe not ) <p>for bind action, chroot means when a breakchroot is hit, any bindings inside are removed</p> <p><code>bind\u00a0key:C-A-a\u00a0chroot:yes\u00a0actions:{\u00a0bind\u00a0key:Escape\u00a0actions:breakchroot</code> <code>bind\u00a0key:Left\u00a0actions:{moverelative\u00a0x:-5}</code> <code>bind\u00a0key:Right\u00a0actions:{moverelative\u00a0x:5}</code> <code>bind\u00a0key:Up\u00a0actions:{moverelative\u00a0y:-5}</code> <code>bind\u00a0key:Down\u00a0actions:{moverelative\u00a0y:5}</code> <code>}</code></p> <p>we decided not to do chroots this way. WE DIDN'T DECIDE HOW TO REPRESENT THEM YET. or how to do keybindings in general. the action approach seems decent though.</p> <p>Possible -unixcommand syntax</p> <p><code>bind\u00a0-key=A-Tab\u00a0-actions={nextwindow\u00a0-finalactions={focus\u00a0unshade\u00a0raise\u00a0-app=yes}}</code></p> <p>Examples..</p> <p><code>bind\u00a0key:W-a\u00a0actions:togglemaximizefull</code> <code>bind\u00a0key:A-Escape\u00a0actions:{lower\u00a0app:yes\u00a0focustobottom\u00a0unfocus}</code> <code>bind\u00a0key:A-Tab\u00a0actions:{nextwindow\u00a0finalactions:{focus\u00a0unshade\u00a0raise\u00a0app:yes}}</code> <code>bind\u00a0key:A-S-Tab\u00a0actions:{previouswindow\u00a0finalactions:{focus\u00a0unshade\u00a0raise\u00a0app:yes}}</code> <code>bind\u00a0key:W-Tab\u00a0actions:{showmenu\u00a0menu:client-list-combined-menu}</code> <code>bind\u00a0key:W-F10\u00a0actions:{execute\u00a0command:\"gnome-screensaver-command\u00a0-l\"}</code> <code>bind\u00a0key:W-F11\u00a0actions:reconfigure</code> <code>bind\u00a0key:W-F12\u00a0actions:restart</code> <code>bind\u00a0key:C-A-Left\u00a0actions:{desktopleft\u00a0dialog:no\u00a0wrap:no}</code> <code>bind\u00a0key:C-A-Up\u00a0actions:{desktopup\u00a0dialog:no\u00a0wrap:no}</code> <code>bind\u00a0key:S-A-Up\u00a0actions:{sendtodesktopup\u00a0dialog:no\u00a0wrap:no\u00a0follow:yes}</code> <code>bind\u00a0key:A-F4\u00a0actions:{close}</code> <code>bind\u00a0key:A-F4\u00a0actions:{close\u00a0[target]}\u00a0\u00a0\u00a0#\u00a0target\u00a0=\u00a0default</code> <code>bind\u00a0key:A-S-F4\u00a0actions:{close\u00a0[title=\"*Google\u00a0Chrome\",\u00a0desktop=2]}\u00a0\u00a0#\u00a0chrome\u00a0windows\u00a0on\u00a0desktop\u00a02</code> <code>bind\u00a0key:A-S-F4\u00a0actions:{close\u00a0[desktop=1]\u00a0[desktop=2]}\u00a0\u00a0#\u00a0all\u00a0windows\u00a0on\u00a0desktop\u00a01.\u00a0if\u00a0none\u00a0match,\u00a0then\u00a0all\u00a0windows\u00a0on\u00a0desktop\u00a02</code> <code>bind\u00a0key:Print\u00a0actions:{execute\u00a0command:\"gnome-screenshot\"}</code> <code>bind\u00a0key:W-d\u00a0actions:{toggleshowdesktop}</code> <code>bind\u00a0key:W-S-Right\u00a0actions:{directionalcyclewindows\u00a0direction:right}</code> <code>bind\u00a0key:W-S-Left\u00a0\u00a0actions:{directionalcyclewindows\u00a0direction:left}</code> <code>bind\u00a0key:W-S-Up\u00a0\u00a0\u00a0\u00a0actions:{directionalcyclewindows\u00a0direction:up}</code> <code>bind\u00a0key:W-S-Down\u00a0\u00a0actions:{directionalcyclewindows\u00a0direction:down}</code></p> <p><code>reconfigure\u00a0\u00a0#\u00a0an\u00a0action\u00a0with\u00a0no\u00a0options</code> <code>restart\u00a0command:\"metacitylol\"\u00a0\u00a0#\u00a0an\u00a0action\u00a0with\u00a0one\u00a0option</code> <code>nextwindow\u00a0finalactions:{focus\u00a0unshade\u00a0raise\u00a0app:yes}\u00a0\u00a0#\u00a0nested\u00a0actions</code> <code>#\u00a0execute\u00a0action\u00a0outside\u00a0of\u00a0a\u00a0bind\u00a0action</code> <code>execute\u00a0startupnotify:true\u00a0startupname:Konqueror\u00a0command:\"kfmclient\u00a0openProfile\u00a0filemanagement\"\u00a0\u00a0#\u00a0multiple\u00a0options</code></p> <p><code>close\u00a0[target]\u00a0\u00a0\u00a0#\u00a0target\u00a0=\u00a0default</code> <code>close\u00a0[title=\"*Google\u00a0Chrome\",\u00a0desktop=2]\u00a0\u00a0#\u00a0chrome\u00a0windows\u00a0on\u00a0desktop\u00a02</code> <code>close\u00a0[desktop=1]\u00a0[desktop=2]\u00a0\u00a0#\u00a0all\u00a0windows\u00a0on\u00a0desktop\u00a01.\u00a0if\u00a0none\u00a0match,\u00a0then\u00a0all\u00a0windows\u00a0on\u00a0desktop\u00a02</code></p> <p><code>togglemaximizefull</code> <code>moverelative\u00a0x:-5</code> <code>moverelative\u00a0y:-5</code> <code>moverelative\u00a0y:-5</code> <code>moverelative\u00a0y:-5</code></p> <p>Have alias action to build composite actions (macros)</p> <p><code>alias\u00a0name:_foo\u00a0actions:{foo\u00a0bar\u00a0baz}</code></p> <p><code>if\u00a0[title=\"*\u00a0GIMP\",\u00a0desktop=8,\u00a0viewing=8]\u00a0actions:{foo\u00a0bar}</code></p> <p><code>alias\u00a0name:_myif\u00a0actions:</code> <code>[viewing=8,\u00a0desktop=8]\u00a0{</code> <code>[title=\"*\u00a0GIMP\"]\u00a0{</code> <code>moveresizeto\u00a0x:69\u00a0y:0\u00a0width:1373\u00a0height:1005</code> <code>sendkeyevent\u00a0usetarget:no\u00a0key:C-j</code> <code>}</code> <code>[locked=no,\u00a0notitle=\"*\u00a0GIMP\"\u00a0title=\"Toolbox\u00a0-\u00a0*\"]</code> <code>lock</code> <code>}</code></p> <p>Attempt at an Else:</p> <p><code>[viewing=8,\u00a0desktop=8]\u00a0{</code> <code>[title=\"*\u00a0GIMP\"]\u00a0nextwindow</code> <code>}</code> <code>|\u00a0[visible]\u00a0nextwindow</code></p> <p><code>alias\u00a0name:_myif\u00a0actions:{</code> <code>moveresizeto\u00a0[viewing=8,\u00a0desktop=8,\u00a0title=\"*\u00a0GIMP\"]\u00a0x:69\u00a0y:0\u00a0width:1373\u00a0height:1005</code> <code>sendkeyevent\u00a0[viewing=8,\u00a0desktop=8,\u00a0title=\"*\u00a0GIMP\"]\u00a0usetarget:no\u00a0key:C-j</code> <code>lock\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0[locked=no\u00a0notitle=\"*\u00a0GIMP\"\u00a0title=\"Toolbox\u00a0-\u00a0*\"]}</code> <code>}</code></p> <p>Attempt to group filters on actions by use of a chain action:</p> <p><code>chain\u00a0[viewing=8,desktop=8]</code> <code>a:{chain\u00a0[title=\"*\u00a0GIMP\"]</code> <code>a:{moveresizeto\u00a0x:69\u00a0y:0\u00a0width:1373\u00a0height:1005</code> <code>sendkeyevent\u00a0usetarget:no\u00a0key:C-j}</code> <code>|\u00a0lock\u00a0[locked=no,\u00a0title=\"Toolbox\u00a0-\u00a0*]}</code></p> <p><code>[target]\u00a0{moveresizeto\u00a0a:foo}\u00a0|\u00a0stuff</code> <code>[desktop=2]\u00a0movetodesktop\u00a0desktop:4\u00a0|\u00a0[desktop=1]\u00a0{stuff\u00a0otherstuff}</code> <code>[foo]\u00a0bar\u00a0|\u00a0baz</code></p> <p>Do filters stack as parsing continues on a line? We decided no.</p> <p>What about OR in filters?</p> <p><code>[foo]\u00a0bar\u00a0|\u00a0[lal]\u00a0bar\u00a0|\u00a0baz\u00a0=&gt;\u00a0[foo\u00a0|\u00a0lal]\u00a0bar\u00a0|\u00a0baz</code></p> <p><code>[a,b\u00a0|\u00a0c,d]\u00a0foo\u00a0|\u00a0bar</code> <code>[a,\u00a0(b|c),\u00a0d]\u00a0foo\u00a0|\u00a0bar</code></p>"},{"location":"Design/DocumentsActions/#proposed-action-language","title":"PROPOSED ACTION LANGUAGE","text":"<p>In BNF like thing:</p> <p><code>TEST\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0:=\u00a0KEY=VALUE\u00a0|\u00a0KEY\u00a0\u00a0\u00a0#\u00a0eg.\u00a0locked\u00a0or\u00a0desktop=1.\u00a0See</code><code>Filters</code><code>.</code> <code>ACTION\u00a0\u00a0\u00a0\u00a0\u00a0:=\u00a0[FILTER]\u00a0ACTION\u00a0ACTIONELSE\u00a0|\u00a0ACTIONNAME\u00a0ACTIONOPTS\u00a0|\u00a0{ACTIONLIST}</code> <code>ACTIONLIST\u00a0:=\u00a0ACTION\u00a0ACTIONLIST\u00a0|\u00a0ACTION</code> <code>ACTIONELSE\u00a0:=\u00a0nil\u00a0|\u00a0\\|\u00a0ACTION</code> <code>FILTER\u00a0\u00a0\u00a0\u00a0\u00a0:=\u00a0FILTERORS</code> <code>FILTERORS\u00a0\u00a0:=\u00a0FILTERANDS\u00a0\\|\u00a0FILTERORS\u00a0|\u00a0FILTERANDS</code> <code>FILTERANDS\u00a0:=\u00a0TEST,\u00a0FILTERANDS\u00a0|\u00a0TEST</code> <code>ACTIONOPTS\u00a0:=\u00a0ACTIONOPT\u00a0ACTIONOPTS\u00a0|\u00a0ACTIONOPT</code> <code>ACTIONOPT\u00a0\u00a0:=\u00a0ATTRIBUTE:WORD\u00a0|\u00a0ATTRIBUTE:STRING\u00a0|\u00a0ATTRIBUTE:{ACTIONLIST}</code> <code>WORD\u00a0\u00a0\u00a0:=\u00a0string\u00a0of\u00a0text\u00a0without\u00a0any\u00a0spaces</code> <code>STRING\u00a0:=\u00a0\"TEXT\"\u00a0|\u00a0(TEXT)</code> <code>where\u00a0TEXT\u00a0is\u00a0a\u00a0string,\u00a0any\u00a0occurance\u00a0of\u00a0the\u00a0closing\u00a0quote\u00a0character\u00a0must</code> <code>be\u00a0escaped\u00a0by\u00a0an\u00a0backslash.</code> <code>\\\\\u00a0``\u00a0and\u00a0\\\"\u00a0are\u00a0all\u00a0valid\u00a0escaped\u00a0characters.</code></p> <p>In English like thing:</p> <p><code>an\u00a0ACTIONSPOT\u00a0can\u00a0hold\u00a0an\u00a0ACTION,\u00a0an\u00a0ACTIONLIST,\u00a0or\u00a0a\u00a0FILTER\u00a0followed\u00a0by\u00a0another\u00a0ACTIONSPOT.</code> <code>it\u00a0may\u00a0be\u00a0followed\u00a0by\u00a0a\u00a0|\u00a0ELSE,\u00a0where\u00a0ELSE\u00a0is\u00a0an\u00a0ACTIONSPOT\u00a0which\u00a0is\u00a0only\u00a0run\u00a0if\u00a0the\u00a0prior\u00a0action\u00a0spot's\u00a0filter</code> <code>returned\u00a0an\u00a0empty\u00a0list\u00a0of\u00a0windows.</code> <code>an\u00a0ACTIONLIST\u00a0is\u00a0a\u00a0list\u00a0of\u00a01\u00a0or\u00a0more\u00a0space-separated\u00a0ACTIONSPOTS\u00a0inside\u00a0{}.</code> <code>a\u00a0FILTER\u00a0is\u00a0a\u00a0[]\u00a0with\u00a0tests\u00a0(eg\u00a0foo=bar)\u00a0inside\u00a0delimited\u00a0by\u00a0,\u00a0for\u00a0AND\u00a0and\u00a0|\u00a0for\u00a0OR.\u00a0AND\u00a0has\u00a0higher</code> <code>precedence.</code> <code>an\u00a0ACTION\u00a0is\u00a0a\u00a0name\u00a0(no\u00a0spaces)\u00a0and\u00a0a\u00a0space-separated\u00a0list\u00a0of\u00a0key:value\u00a0pairs\u00a0to\u00a0assign\u00a0to\u00a0the\u00a0ACTION.</code> <code>the\u00a0value\u00a0is\u00a0a\u00a0WORD,\u00a0a\u00a0STRING\u00a0or\u00a0an\u00a0ACTIONLIST.</code> <code>a\u00a0WORD\u00a0is\u00a0a\u00a0string\u00a0of\u00a0text\u00a0with\u00a0no\u00a0space\u00a0and\u00a0does\u00a0not\u00a0start\u00a0with\u00a0a\u00a0'('\u00a0'\"'\u00a0or\u00a0'{'\u00a0character.</code> <code>a\u00a0STRING\u00a0is\u00a0a\u00a0string\u00a0of\u00a0text\u00a0quoted\u00a0with\u00a0\"\"\u00a0or\u00a0().\u00a0\u00a0the\u00a0ending\u00a0quoting\u00a0character\u00a0and\u00a0'\\'\u00a0must\u00a0be\u00a0escaped</code> <code>inside\u00a0the\u00a0STRING,\u00a0and\u00a0``\u00a0\\\"\u00a0or\u00a0\\\\\u00a0are\u00a0all\u00a0valid\u00a0escaped\u00a0characters.</code> <code>Unrecognized\u00a0escape\u00a0sequences\u00a0are\u00a0simply\u00a0dropped\u00a0from\u00a0the\u00a0string\u00a0with\u00a0a\u00a0warning\u00a0to\u00a0the\u00a0user.</code></p> <p>Example using bind to also be an action:</p> <p><code>bind\u00a0key:M-r\u00a0actions:{[la]\u00a0foo\u00a0|\u00a0{bar\u00a0etc:(yay)}</code> <code>morethings</code> <code>}</code></p> <p>Bind actions should not persist though! Need to be recreated at startup, tho they can be injected at runtime.</p> <p>note: OR precedence can be achived by splitting into nested filters:</p> <p><code>[a,b]\u00a0[c|d]\u00a0foo\u00a0\u00a0\u00a0=&gt;\u00a0if\u00a0(a&amp;b)&amp;(c|d)\u00a0then\u00a0foo</code></p> <p>Examples:</p> <p><code>execute\u00a0startupnotify:true\u00a0startupname:Konqueror\u00a0command:(kfmclient\u00a0openProfile\u00a0filemanagement)</code> <code>execute\u00a0startupnotify:true\u00a0startupname:Konqueror\u00a0command:\"kfmclient\u00a0openProfile\u00a0filemanagement\"</code></p> <p><code>[ifviewing=8,\u00a0desktop=8]\u00a0{</code> <code>[title=\"*\u00a0GIMP\"]\u00a0{moveresize\u00a0sendkey}</code> <code>[title=\"Toolbox\u00a0-\u00a0*\",\u00a0nottitle=\"*\u00a0GIMP\",\u00a0locked=no]\u00a0lock</code> <code>}</code></p>"},{"location":"Design/DocumentsActions/#functionality","title":"Functionality","text":"<p>Filters are used to create a list of windows. The default filter is [target] meaning only the targetted window is matched. Each action is run and passed a list of windows matched by the filters applied to it.</p>"},{"location":"Design/DocumentsActions/#keybindings-mousebindings-and-lions-oh-my","title":"Keybindings, Mousebindings and Lions, Oh my.","text":"<p>We need to decide 1) how to do keybinds, esp chroots. 2) how to do mousebinds, esp contexts (no xml tree anymore)</p>"},{"location":"Design/DocumentsActions/#filters-as-functions","title":"Filters as functions","text":"<ul> <li>Mikachu thinks he might want filters to be able to act on other     filters. For instance, to get all windows matching title, then get     all windows in group with each of them.</li> <li>That doesn't work with the standard union/intersection between     filters.</li> <li>We would need a filter to be able to take a set of clients as its     parameter such as</li> </ul> <p><code>[group=[title=\"foo\"]]\u00a0dostuff</code> <code>OR</code> <code>[group=[focused]]\u00a0dostuff</code></p> <ul> <li>It is possible that some special cases for group would be enough     though, without this passing sets around, such as</li> </ul> <p><code>[group=focus]\u00a0dostuff</code> <code>[group=target]\u00a0dostuff;\u00a0[group]\u00a0dostuff\u00a0\u00a0#\u00a0synonymous</code></p>"},{"location":"Design/DocumentsActions/#boolean-filters","title":"Boolean filters","text":"<p>Some filters return a boolean value, such as \"on desktop 3\". These filters return either ALL or EMPTY.</p> <ul> <li>ALL is a special client set that is considered non-empty for truth     testing, regardless of if there are windows in it.</li> <li>EMPTY is the empty set, which would test false for truth testing.</li> <li>Anything union with ALL will give back ALL.</li> </ul> <p><code>[ondesktop=3|any\u00a0set\u00a0here]\u00a0-&gt;\u00a0will\u00a0give\u00a0back\u00a0ALL\u00a0when\u00a0on\u00a0desktop\u00a03.</code></p> <ul> <li>ALL can be implemented with a flag in the ObClientSet, which saves     copying all the ObClients also.</li> </ul> <p><code>[ondesktop=3,windowdesktop=2]\u00a0stuff\u00a0|\u00a0other</code></p> <p>The above should always run stuff (even with an empty set if windowdesktop=2 returns EMPTY) when on desktop 3. And always run other when not.</p>"},{"location":"Design/DocumentsConfig/","title":"DocumentsConfig","text":"<p>Key points:</p> <ul> <li>bindings in separate human editable file<ul> <li>~/.config/openbox/keys ?</li> <li>~/.config/openbox/mouse ?</li> </ul> </li> <li>menus in separate human editable file<ul> <li>~/.config/openbox/menu ?</li> </ul> </li> <li>per app settings in separate human editable file<ul> <li>~/.config/openbox/windows ?</li> </ul> </li> <li>these files can remain XML since we have a nice parser for that</li> <li>config options stored in machine file<ul> <li>~/.cache/openbox/settings</li> <li>plaintext so mika can edit it (and for when debugging)</li> <li>unrecognized stuff in the file is not deleted when saving<ul> <li>lets multiple versions of openbox share the same file</li> </ul> </li> </ul> </li> <li>--config-file will be weird now<ul> <li>maybe a --config-name instead and it uses one of<ul> <li>~/.config/openbox-{name}/* and ~/.cache/openbox-{name}/*</li> <li>~/.config/openbox/name/* and ~/.cache/openbox/name/*</li> <li>~/.config/openbox/*-name and ~/.cache/openbox/*-name</li> </ul> </li> </ul> </li> <li>options are saved when they are changed (power failure shouldnt lose     settings)</li> <li>rc script on startup is possible.. not sure it is useful<ul> <li>things like current desktop can be saved on shutdown</li> </ul> </li> <li>easiest to use current config format for machine writable file (code     exists)<ul> <li>*could* use it for human editable files too (even tho xml not     nice..)</li> </ul> </li> </ul> <p>From August 2, 2011:</p> <p><code>04:37\u00a0(xor)\u00a0menus\u00a0and\u00a0perapp\u00a0settings\u00a0probably\u00a0both\u00a0stay\u00a0xml</code> <code>04:37\u00a0(xor)\u00a0i\u00a0dont\u00a0think\u00a0ppl\u00a0want\u00a0to\u00a0set\u00a0up\u00a0perapp\u00a0settings\u00a0with\u00a0action\u00a0commands</code> <code>04:37\u00a0(Mikachu)\u00a0what\u00a0about\u00a0other\u00a0options?</code> <code>04:37\u00a0(xor)\u00a0theyll\u00a0be\u00a0set\u00a0thru\u00a0actions</code> <code>04:37\u00a0(xor)\u00a0so\u00a0your\u00a0rc\u00a0will\u00a0be\u00a0a\u00a0script</code> <code>04:38\u00a0(Mikachu)\u00a0i\u00a0see</code> <code>04:38\u00a0(xor)\u00a0oh</code> <code>04:38\u00a0(xor)\u00a0actually\u00a0i\u00a0take\u00a0that\u00a0back</code> <code>04:38\u00a0(xor)\u00a0i\u00a0think\u00a0your\u00a0rc\u00a0wont\u00a0exist</code> <code>04:38\u00a0(xor)\u00a0and\u00a0you\u00a0just\u00a0change\u00a0settings\u00a0and\u00a0ob\u00a0saves\u00a0thems</code> <code>04:38\u00a0(xor)\u00a0well</code> <code>04:38\u00a0(xor)\u00a0except\u00a0bindings</code> <code>04:39\u00a0(xor)\u00a0bindings/perapp/menus\u00a0won't\u00a0be\u00a0saved</code> <code>04:39\u00a0(Mikachu)\u00a0where\u00a0would\u00a0it\u00a0save\u00a0them?</code> <code>04:39\u00a0(xor)\u00a0but\u00a0other\u00a0options\u00a0we\u00a0can\u00a0just\u00a0cache\u00a0them</code> <code>04:39\u00a0(xor)\u00a0in\u00a0~/.cache/openbox\u00a0i\u00a0figure</code> <code>04:39\u00a0(Mikachu)\u00a0that\u00a0sounds\u00a0yucky\u00a0to\u00a0me</code> <code>04:39\u00a0(xor)\u00a0whyfor</code> <code>04:39\u00a0(xor)\u00a0that\u00a0way\u00a0you\u00a0change\u00a0something\u00a0and\u00a0it\u00a0just\u00a0stays</code> <code>04:39\u00a0(Mikachu)\u00a0just\u00a0does</code> <code>04:39\u00a0(xor)\u00a0which\u00a0is\u00a0my\u00a0ultimate\u00a0goal</code> <code>04:40\u00a0(Mikachu)\u00a0it\u00a0feels\u00a0a\u00a0bit\u00a0gnome-y\u00a0to\u00a0hide\u00a0the\u00a0settings\u00a0in\u00a0some\u00a0weird\u00a0dir</code> <code>making\u00a0it\u00a0hard\u00a0to\u00a0figure\u00a0out\u00a0what's\u00a0going\u00a0on</code> <code>04:40\u00a0(xor)\u00a0but\u00a0if\u00a0you\u00a0expose\u00a0them\u00a0all\u00a0thru\u00a0some\u00a0UI\u00a0then\u00a0its\u00a0not\u00a0really\u00a0hidden</code> <code>04:40\u00a0(xor)\u00a0gnome\u00a0hides\u00a0them\u00a0all\u00a0and\u00a0doesnt\u00a0give\u00a0a\u00a0way\u00a0to\u00a0change\u00a0them\u00a0without</code> <code>going\u00a0in\u00a0the\u00a0hidden\u00a0shit\u00a0and\u00a0editing</code> <code>04:41\u00a0(Mikachu)\u00a0also\u00a0it\u00a0makes\u00a0--config-file\u00a0weird</code> <code>04:41\u00a0(xor)\u00a0yeh\u00a0probably\u00a0change\u00a0it</code> <code>04:41\u00a0(xor)\u00a0config-name\u00a0or\u00a0something</code> <code>04:42\u00a0(xor)\u00a0and\u00a0~/.config/openbox-{config-name}\u00a0~/.cache/openbox-{config-name}</code> <code>get\u00a0used</code> <code>04:42\u00a0(xor)\u00a0or\u00a0something</code> <code>04:42\u00a0(xor)\u00a0or\u00a0a\u00a0subdir</code> <code>04:42\u00a0(xor)\u00a0i\u00a0want\u00a0a\u00a0program\u00a0like\u00a0obconf\u00a0to\u00a0be\u00a0able\u00a0to\u00a0change\u00a0settings\u00a0without</code> <code>editing\u00a0files</code> <code>04:43\u00a0(xor)\u00a0cuz\u00a0that\u00a0shit\u00a0is\u00a0hacky</code> <code>04:43\u00a0(xor)\u00a0mixing\u00a0human\u00a0and\u00a0machine\u00a0generated\u00a0stuff\u00a0in\u00a01\u00a0file</code> <code>04:43\u00a0(Mikachu)\u00a0if\u00a0the\u00a0rc\u00a0is\u00a0a\u00a0bunch\u00a0of\u00a0actions\u00a0that\u00a0set\u00a0options,\u00a0won't\u00a0that</code> <code>overwrite\u00a0whatever\u00a0obconf\u00a0sets?</code> <code>04:43\u00a0(xor)\u00a0yeh\u00a0it\u00a0would</code> <code>04:43\u00a0(Mikachu)\u00a0so..</code> <code>04:44\u00a0(xor)\u00a0so\u00a0dont\u00a0set\u00a0stuff\u00a0like\u00a0that\u00a0in\u00a0your\u00a0rc</code> <code>04:44\u00a0(xor)\u00a0or</code> <code>04:44\u00a0(xor)\u00a0we\u00a0dont\u00a0make\u00a0an\u00a0rc\u00a0at\u00a0all</code> <code>04:44\u00a0(xor)\u00a0and\u00a0make\u00a0a\u00a0bindings\u00a0file</code> <code>04:44\u00a0(xor)\u00a0and\u00a0an\u00a0windowsettings\u00a0file</code> <code>04:44\u00a0(xor)\u00a0and\u00a0done</code> <code>04:44\u00a0(xor)\u00a0but\u00a0i\u00a0liked\u00a0the\u00a0idea\u00a0of\u00a0being\u00a0able\u00a0to\u00a0set\u00a0your\u00a0current\u00a0desktop\u00a0to\u00a03</code> <code>or\u00a0something\u00a0in\u00a0your\u00a0rc</code> <code>04:45\u00a0(xor)\u00a0then\u00a0again\u00a0that\u00a0can\u00a0get\u00a0saved\u00a0easily\u00a0too</code> <code>04:45\u00a0(xor)\u00a0right\u00a0now\u00a0it\u00a0needs\u00a0a\u00a0session\u00a0manager\u00a0to\u00a0save\u00a0anything</code> <code>04:45\u00a0(xor)\u00a0and\u00a0most\u00a0people\u00a0dont\u00a0use\u00a0one\u00a0and\u00a0its\u00a0so\u00a0deprecated\u00a0now\u00a0anyway</code> <code>04:45\u00a0(xor)\u00a0id\u00a0like\u00a0ob\u00a0to\u00a0save\u00a0things\u00a0more\u00a0intelligently\u00a0on\u00a0its\u00a0own</code> <code>04:45\u00a0(Mikachu)\u00a0can\u00a0we\u00a0make\u00a0this\u00a0magic\u00a0file\u00a0human\u00a0readable\u00a0at\u00a0least?</code> <code>04:45\u00a0(Mikachu)\u00a0so\u00a0people\u00a0who\u00a0don't\u00a0want\u00a0gtk\u00a0can\u00a0still\u00a0edit\u00a0the\u00a0config</code> <code>04:45\u00a0(xor)\u00a0and\u00a0just\u00a0add\u00a0in\u00a0what\u00a0it\u00a0can\u00a0with\u00a0a\u00a0session\u00a0manager</code> <code>04:46\u00a0(xor)\u00a0yeh\u00a0it\u00a0can\u00a0be\u00a0xml\u00a0maybe\u00a0:)</code> <code>04:46\u00a0(xor)\u00a0you\u00a0can\u00a0edit\u00a0the\u00a0config\u00a0by\u00a0running\u00a0an\u00a0action</code> <code>04:46\u00a0(xor)\u00a0anyway</code> <code>04:46\u00a0(xor)\u00a0setopt\u00a0focusnew:true</code> <code>04:46\u00a0(xor)\u00a0done</code> <code>04:46\u00a0(Mikachu)\u00a0so\u00a0to\u00a0edit\u00a0your\u00a0config\u00a0you\u00a0have\u00a0to\u00a0edit\u00a0your\u00a0rc\u00a0to\u00a0set\u00a0the</code> <code>config,\u00a0restart\u00a0openbox,\u00a0then\u00a0remove\u00a0it\u00a0again</code> <code>04:46\u00a0(Mikachu)\u00a0sounds\u00a0convoluted</code> <code>04:47\u00a0(xor)\u00a0and\u00a0you\u00a0can\u00a0do\u00a0that\u00a0from\u00a0a\u00a0shell\u00a0(or\u00a0from\u00a0within\u00a0openbox\u00a0maybe)</code> <code>04:47\u00a0(xor)\u00a0no</code> <code>04:47\u00a0(xor)\u00a0you\u00a0just\u00a0run\u00a0that\u00a0and\u00a0youre\u00a0done</code> <code>04:47\u00a0(xor)\u00a0and\u00a0its\u00a0saved</code> <code>04:47\u00a0(xor)\u00a0no\u00a0reconfigure\u00a0no\u00a0restart\u00a0no\u00a0anything</code> <code>04:48\u00a0(xor)\u00a0also\u00a0could\u00a0make\u00a0a\u00a0menu\u00a0with\u00a0all\u00a0the\u00a0options\u00a0-\u00a0back\u00a0to\u00a0blackbox</code> <code>style\u00a0-\u00a0probably\u00a0a\u00a0pipe\u00a0menu..</code> <code>04:48\u00a0(Mikachu)\u00a0only\u00a0boolean\u00a0options</code> <code>04:48\u00a0(xor)\u00a0submenus</code> <code>04:49\u00a0(xor)\u00a0or\u00a0make\u00a0text\u00a0entry\u00a0menu\u00a0widget\u00a0:p</code> <code>04:49\u00a0(Mikachu)\u00a0how\u00a0would\u00a0you\u00a0let\u00a0me\u00a0change\u00a0the\u00a0activewindow\u00a0font\u00a0from\u00a0a\u00a0menu?</code> <code>04:49\u00a0(Mikachu)\u00a0heh</code> <code>04:49\u00a0(xor)\u00a0show\u00a0a\u00a0menu\u00a0of\u00a0fonts</code> <code>04:49\u00a0(Mikachu)\u00a0i\u00a0like\u00a0being\u00a0able\u00a0to\u00a0vcs\u00a0my\u00a0config</code> <code>04:50\u00a0(xor)\u00a0because\u00a0of\u00a0your\u00a0bindings</code> <code>04:50\u00a0(xor)\u00a0which\u00a0you\u00a0could\u00a0still</code> <code>04:50\u00a0(Mikachu)\u00a0and\u00a0if\u00a0changing\u00a0an\u00a0option\u00a0causes\u00a0a\u00a0problem\u00a0that\u00a0makes\u00a0it\u00a0hard</code> <code>to\u00a0change\u00a0it\u00a0back\u00a0via\u00a0the\u00a0ui,\u00a0it\u00a0needs\u00a0to\u00a0be\u00a0easy\u00a0to\u00a0restore</code> <code>the\u00a0config\u00a0from\u00a0outside\u00a0openbox</code> <code>04:50\u00a0(xor)\u00a0you\u00a0can</code> <code>04:50\u00a0(xor)\u00a0obrun\u00a0setopt\u00a0focusnew:false</code> <code>04:50\u00a0(xor)\u00a0from\u00a0a\u00a0shell</code> <code>04:50\u00a0(xor)\u00a0or\u00a0whatever\u00a0it\u00a0would\u00a0be\u00a0called</code> <code>04:50\u00a0(xor)\u00a0you\u00a0can\u00a0run\u00a0any\u00a0action\u00a0from\u00a0shell\u00a0scripts</code> <code>04:50\u00a0(xor)\u00a0(in\u00a0future)</code> <code>04:51\u00a0(Mikachu)\u00a0without\u00a0a\u00a0running\u00a0openbox\u00a0instance?</code> <code>04:51\u00a0(xor)\u00a0hm</code> <code>04:51\u00a0(xor)\u00a0no</code> <code>04:51\u00a0(xor)\u00a0are\u00a0you\u00a0concerned\u00a0about\u00a0crashes\u00a0?</code> <code>04:51\u00a0(Mikachu)\u00a0i\u00a0just\u00a0really\u00a0like\u00a0editing\u00a0text\u00a0file\u00a0configs\u00a0i\u00a0suppose</code> <code>04:52\u00a0(xor)\u00a0cuz\u00a0i\u00a0think\u00a0it\u00a0should\u00a0save\u00a0the\u00a0config\u00a0on\u00a0log\u00a0out\u00a0so\u00a0a\u00a0crash\u00a0wouldnt</code> <code>save\u00a0the\u00a0bad\u00a0option</code> <code>04:52\u00a0(Mikachu)\u00a0as\u00a0long\u00a0as\u00a0there\u00a0is\u00a0one\u00a0of\u00a0those\u00a0i\u00a0will\u00a0survive</code> <code>04:52\u00a0(xor)\u00a0hehe\u00a0okay</code> <code>04:52\u00a0(xor)\u00a0for\u00a0apps\u00a0that\u00a0you\u00a0run\u00a0and\u00a0close\u00a0i\u00a0think\u00a0they\u00a0can\u00a0make\u00a0sense</code> <code>04:52\u00a0(xor)\u00a0but\u00a0openbox\u00a0is\u00a0a\u00a0long-running\u00a0process,\u00a0it\u00a0never\u00a0closes\u00a0unless\u00a0you</code> <code>reboot\u00a0basically</code> <code>04:52\u00a0(Mikachu)\u00a0there\u00a0are\u00a0probably\u00a0many\u00a0people\u00a0who\u00a0never\u00a0log\u00a0out,\u00a0just\u00a0start</code> <code>openbox\u00a0after\u00a0reboot\u00a0due\u00a0to\u00a0power\u00a0failure\u00a0:P</code> <code>04:52\u00a0(Mikachu)\u00a0it\u00a0would\u00a0be\u00a0a\u00a0pain\u00a0if\u00a0that\u00a0never\u00a0saved\u00a0options</code> <code>04:52\u00a0(xor)\u00a0i\u00a0spose\u00a0so</code> <code>04:53\u00a0(xor)\u00a0thats\u00a0fine\u00a0then</code> <code>04:53\u00a0(xor)\u00a0since\u00a0we\u00a0can\u00a0always\u00a0change\u00a0them\u00a0by\u00a0hand\u00a0when\u00a0debugging</code> <code>04:53\u00a0(Mikachu)\u00a0it\u00a0would\u00a0make\u00a0the\u00a0most\u00a0sense\u00a0to\u00a0keep\u00a0the\u00a0current\u00a0format\u00a0then</code> <code>04:54\u00a0(xor)\u00a0yeh\u00a0probably\u00a0so</code> <code>04:54\u00a0(Mikachu)\u00a0and\u00a0just\u00a0excise\u00a0bindings\u00a0to\u00a0the\u00a0new\u00a0file</code> <code>04:54\u00a0(xor)\u00a0then\u00a0the\u00a0code\u00a0is\u00a0already\u00a0there</code> <code>04:54\u00a0(xor)\u00a0good\u00a0point</code> <code>04:54\u00a0(Mikachu)\u00a0plus\u00a0i\u00a0can\u00a0drop\u00a0my\u00a0rc\u00a0in\u00a0the\u00a0cache\u00a0dir\u00a0and\u00a0it\u00a0will\u00a0work\u00a0:P</code> <code>04:54\u00a0(xor)\u00a0:)</code> <code>04:54\u00a0(xor)\u00a0with\u00a0some\u00a0cutting</code> <code>04:54\u00a0(Mikachu)\u00a0yeah\u00a0make\u00a0sure\u00a0to\u00a0not\u00a0drop\u00a0elements\u00a0you\u00a0don't\u00a0recognize\u00a0when</code> <code>saving</code> <code>04:54\u00a0(Mikachu)\u00a0because\u00a0then\u00a0running\u00a0an\u00a0old\u00a0version\u00a0would\u00a0kill\u00a0any\u00a0new\u00a0options</code> <code>04:55\u00a0(xor)\u00a0hm,\u00a0yeh</code> <code>04:55\u00a0(xor)\u00a0but\u00a0then\u00a0removing/renaming\u00a0options\u00a0would\u00a0grow\u00a0the\u00a0file\u00a0until\u00a0it</code> <code>took\u00a0over\u00a0your\u00a0harddrive</code> <code>04:55\u00a0(Mikachu)\u00a0haha</code> <code>04:56\u00a0(Mikachu)\u00a0but\u00a0then\u00a0old\u00a0and\u00a0new\u00a0versions\u00a0will\u00a0work\u00a0on\u00a0the\u00a0same\u00a0file,\u00a0and</code> <code>share\u00a0the\u00a0options\u00a0they\u00a0both\u00a0know\u00a0about</code> <code>04:56\u00a0(Mikachu)\u00a0i\u00a0don't\u00a0think\u00a0there's\u00a0ever\u00a0any\u00a0reason\u00a0to\u00a0rename\u00a0an\u00a0option\u00a0though</code> <code>04:56\u00a0(Mikachu)\u00a0since\u00a0it's\u00a0only\u00a0visible\u00a0in\u00a0the\u00a0cache\u00a0file</code> <code>04:56\u00a0(xor)\u00a0yeh\u00a0true</code> <code>04:56\u00a0(xor)\u00a0should\u00a0write\u00a0this\u00a0stuff</code> <code>04:56\u00a0(Mikachu)\u00a0plus\u00a0it\u00a0would\u00a0lose\u00a0the\u00a0value\u00a0on\u00a0update\u00a0then</code></p>"},{"location":"Design/DocumentsPlacement/","title":"DocumentsPlacement","text":"<ul> <li>This depends on FVWM's MinOverlap placement as a black box.</li> <li>Algorithm is in red in the bottom left.</li> </ul>"},{"location":"Design/DocumentsTasks/","title":"DocumentsTasks","text":"<ul> <li>The idea is a menu of presets in the top left, and a list of     currently visible window tags (tasks) beside it.</li> <li>Right-click a window tag name to remove it (hide it).</li> <li>The * refers to the set of windows that are not tagged.</li> <li>The right-most tag is always \"add\" which is a menu of tags when     clicked, to add a tag to the list/show the tagged set of windows.<ul> <li>Under add is \"new tag...\" to create a new tag (should probably     exist in window tag menu also)</li> </ul> </li> <li>You get 10 numbered presets by default and can add named ones.</li> <li>Presets hold a set of tags. The menu shows all tags and lets you     check/uncheck them.</li> <li>Windows have a tag menu which lets you associate a tag with it     quickly.</li> <li>The top bar can be shown:<ul> <li>Always</li> <li>On mouseover</li> <li>While key held down</li> <li>When key pressed (toggled)</li> </ul> </li> <li>KDE has something like this system now.</li> </ul> Obtasks.jpg"},{"location":"Help/Configuration/","title":"Configuration","text":"<p>Openbox configuration is made essentially by modifying just one file called rc.xml.</p> <p>Default configuration file can by default be found in <code>/etc/xdg/openbox/</code> and a user specific file can be placed in <code>~/.config/openbox/</code>.</p> <p>By default there is also <code>menu.xml</code> which is for menu configuration. Menu configuration is separated from rest of the configs.</p> <p><code>rc.xml</code> is separated into different sections. All the options are discussed below with examples.</p>"},{"location":"Help/Configuration/#resistance","title":"Resistance","text":"<pre><code>&lt;resistance&gt;\n&lt;strength&gt;10&lt;/strength&gt;\n&lt;screen_edge_strength&gt;20&lt;/screen_edge_strength&gt;\n&lt;/resistance&gt;\n</code></pre> <p>strength Tells Openbox how much resistance (in pixels) there is between two windows before it lets them overlap.</p> <p>screen_edge_strength Basically the same as strength but between window and the screen edge.</p>"},{"location":"Help/Configuration/#focus","title":"Focus","text":"<pre><code>&lt;focus&gt;\n&lt;focusNew&gt;yes&lt;/focusNew&gt;\n&lt;focusLast&gt;yes&lt;/focusLast&gt;\n&lt;followMouse&gt;no&lt;/followMouse&gt;\n&lt;focusDelay&gt;200&lt;/focusDelay&gt;\n&lt;underMouse&gt;no&lt;/underMouse&gt;\n&lt;raiseOnFocus&gt;no&lt;/raiseOnFocus&gt;\n&lt;/focus&gt;\n</code></pre> <p>focusNew Openbox will automatically give focus to new windows when they are created, otherwise the focus will stay as it is.</p> <p>followMouse Makes focus follow mouse. e.g. when the mouse is being moved the focus will be given to window under the mouse cursor.</p> <p>focusLast When switching desktops, focus the last focused window on that desktop again, regardless of where the mouse is. Only applies followMouse is set.</p> <p>focusDelay The time (in milliseconds) Openbox will wait before giving focus to the window under mouse cursor. Only applies if followMouse is set.</p> <p>underMouse Focus windows under the mouse not only when the mouse moves, but also when it enters another window due to other reasons (e.g. the window the mouse was in moved/closed/iconified etc). Only applies if followMouse is set.</p> <p>raiseOnFocus Also raises windows to top when they are focused. Only applies if followMouse is set.</p>"},{"location":"Help/Configuration/#placement","title":"Placement","text":"<pre><code>&lt;placement&gt;\n&lt;policy&gt;Smart&lt;/policy&gt;\n&lt;center&gt;no&lt;/center&gt;\n&lt;/placement&gt;\n</code></pre> <p>policy can be either Smart or UnderMouse.</p> <ul> <li>Smart will cause new windows to be placed automatically by Openbox.</li> <li>UnderMouse makes new windows to be placed under the mouse cursor.</li> </ul> <p>center can be either yes or no. If it is enabled, windows will open centered in the free area found.</p>"},{"location":"Help/Configuration/#theme","title":"Theme","text":"<pre><code>&lt;theme&gt;\n&lt;name&gt;Clearlooks&lt;/name&gt;\n&lt;titleLayout&gt;NLIMC&lt;/titleLayout&gt;\n&lt;keepBorder&gt;yes&lt;/keepBorder&gt;\n&lt;animateIconify&gt;yes&lt;/animateIconify&gt;\n&lt;font place=\"ActiveWindow\"&gt;\n&lt;name&gt;sans&lt;/name&gt;\n&lt;size&gt;8&lt;/size&gt;\n&lt;weight&gt;bold&lt;/weight&gt;\n&lt;slant&gt;normal&lt;/slant&gt;\n&lt;/font&gt;\n&lt;font place=\"InactiveWindow\"&gt;\n&lt;name&gt;sans&lt;/name&gt;\n&lt;size&gt;8&lt;/size&gt;\n&lt;weight&gt;bold&lt;/weight&gt;\n&lt;slant&gt;normal&lt;/slant&gt;\n&lt;/font&gt;\n&lt;font place=\"MenuHeader\"&gt;\n&lt;name&gt;sans&lt;/name&gt;\n&lt;size&gt;9&lt;/size&gt;\n&lt;weight&gt;normal&lt;/weight&gt;\n&lt;slant&gt;normal&lt;/slant&gt;\n&lt;/font&gt;\n&lt;font place=\"MenuItem\"&gt;\n&lt;name&gt;sans&lt;/name&gt;\n&lt;size&gt;9&lt;/size&gt;\n&lt;weight&gt;normal&lt;/weight&gt;\n&lt;slant&gt;normal&lt;/slant&gt;\n&lt;/font&gt;\n&lt;font place=\"OnScreenDisplay\"&gt;\n&lt;name&gt;sans&lt;/name&gt;\n&lt;size&gt;9&lt;/size&gt;\n&lt;weight&gt;bold&lt;/weight&gt;\n&lt;slant&gt;normal&lt;/slant&gt;\n&lt;/font&gt;\n&lt;/theme&gt;\n</code></pre> <p>name The name of the Openbox theme to use.</p> <p>titleLayout tells in which order and what buttons should be in a window's titlebar. The following letters can be used, each only once.</p> <ul> <li>N :window icon</li> <li>L :window label (aka. title)</li> <li>I: iconify</li> <li>M: maximize</li> <li>C: close</li> <li>S: shade (roll up/down)</li> <li>D: omnipresent (on all desktops).</li> </ul> <p></p> <p></p> <p>keepBorder tells if windows should keep the border drawn by Openbox when window decorations are turned off.</p> <p>animateIconify adds a little iconification animation if enabled. font Specifies the font to use for a specific element of the window. Place can be either of:</p> <ul> <li>ActiveWindow: Title bar of the active window</li> <li>InactiveWindow: Title bar of the inactive window</li> <li>MenuHeader: Titles in the menu</li> <li>MenuItem: Items in the menu</li> <li>OnScreenDisplay: Text in popups such as window cycling or desktop switching popups</li> </ul> <p>Childnodes for each place are name, specifying the font to use (defaults to sans, an alias for all sans serif fonts), size in px, weight, either normal or bold and slant, either italic or normal.</p> <p>Themes themselves are described on the theme specification page.</p>"},{"location":"Help/Configuration/#desktops","title":"Desktops","text":"<pre><code>&lt;desktops&gt;\n&lt;number&gt;4&lt;/number&gt;\n&lt;firstdesk&gt;1&lt;/firstdesk&gt;\n&lt;popupTime&gt;1000&lt;/popupTime&gt;\n&lt;names&gt;\n&lt;name&gt;work&lt;/name&gt;\n&lt;name&gt;play&lt;/name&gt;\n&lt;name&gt;dull&lt;/name&gt;\n&lt;name&gt;boy&lt;/name&gt;\n&lt;/names&gt;\n&lt;/desktops&gt;\n</code></pre> <p>number The number of virtual desktops to use.</p> <p>firstdesk The number of the desktop to use when first started.</p> <p>popupTime Time (in milliseconds) to show the popup when switching desktops. Can be set to 0 to disable the popup completely.</p> <p>names Each name tag names your desktops, in ascending order. Unnamed desktops will be named automatically depending on the locale. You can name more desktops than specified in number if you want.</p>"},{"location":"Help/Configuration/#resize-and-move","title":"Resize (and move)","text":"<pre><code>&lt;resize&gt;\n&lt;drawContents&gt;no&lt;/drawContents&gt;\n&lt;popupShow&gt;Always&lt;/popupShow&gt;\n&lt;popupPosition&gt;Fixed&lt;/popupPosition&gt;\n&lt;popupFixedposition&gt;\n&lt;x&gt;400&lt;/x&gt;\n&lt;y&gt;center&lt;/y&gt;\n&lt;/popupFixedPosition&gt;\n&lt;/resize&gt;\n</code></pre> <p>drawContents Resize the program inside the window while resizing. When disabled the unused space will be filled with a uniform color during a resize.</p> <p>popupShow When to show the move/resize popup. Always always shows it, Never never shows it, Nonpixel shows it only when resizing windows that have specified they are resized in increments larger than one pixel, usually terminals.</p> <p>popupPosition Where to show the popup.</p> <ul> <li>Top shows the popup above the titlebar of the window.</li> <li>Center shows it centered on the window.</li> <li>Fixed shows it in a fixed location on the screen specified by popupFixedPosition.</li> </ul> <p>popupFixedPosition Specifies where on the screen to show the position when Fixed. Both x and y take coordinates as described here.</p>"},{"location":"Help/Configuration/#applications","title":"Applications","text":"<p>This section sets specific settings for applications, and is quite complicated, so it has its own page.</p>"},{"location":"Help/Configuration/#keyboard","title":"Keyboard","text":"<pre><code>&lt;keyboard&gt;\n&lt;rebindOnMappingNotify&gt;yes&lt;/rebindOnMappingNotify&gt;\n&lt;chainQuitKey&gt;C-g&lt;/chainQuitKey&gt;\n&lt;keybind&gt; ...\n    ...\n  &lt;/keybind&gt;\n&lt;/keyboard&gt;\n</code></pre> <p>rebindOnMappingNotify If this is enabled, keybinds will be rebound if the keyboard layout changes at runtime. It is enabled by default. The rest of this section contains keyboard shortcuts and is described on the bindings page.</p>"},{"location":"Help/Configuration/#mouse","title":"Mouse","text":"<pre><code>&lt;mouse&gt;\n&lt;dragThreshold&gt;8&lt;/dragThreshold&gt;\n&lt;doubleClickTime&gt;200&lt;/doubleClickTime&gt;\n&lt;screenEdgeWarpTime&gt;400&lt;/screenEdgeWarpTime&gt;\n&lt;context&gt; ...\n    ...\n  &lt;/context&gt;\n&lt;/mouse&gt;\n</code></pre> <p>dragThreshold How many pixels you need to drag for it to be recognized as a drag operation.</p> <p>doubleClickTime Time (in milliseconds) allowed between two separate clicks to register as a <code>DoubleClick</code>.</p> <p>screenEdgeWarpTime Time (in milliseconds) to pause between two consecutive desktop switches done by holding the cursor next to the screen edge. Set to 0 to disable this feature. The rest of this section contains mouse bindings and is described on the bindings page.</p>"},{"location":"Help/Configuration/#margins","title":"Margins","text":"<pre><code>&lt;margins&gt;\n&lt;top&gt;50&lt;/top&gt;\n&lt;left&gt;0&lt;/left&gt;\n&lt;right&gt;20&lt;/right&gt;\n&lt;bottom&gt;0&lt;/bottom&gt;\n&lt;/margins&gt;\n</code></pre> <p>Each tag specifies the amount of pixels to reserve at the respective edge of the screen. New windows will not be placed in those areas, and maximized windows will not cover them.</p>"},{"location":"Help/Configuration/#menu","title":"Menu","text":"<pre><code>&lt;menu&gt;\n&lt;hideDelay&gt;250&lt;/hideDelay&gt;\n&lt;middle&gt;no&lt;/middle&gt;\n&lt;submenuShowDelay&gt;100&lt;/submenuShowDelay&gt;\n&lt;submenuHideDelay&gt;400&lt;/submenuHideDelay&gt;\n&lt;applicationIcons&gt;yes&lt;/applicationIcons&gt;\n&lt;manageDesktops&gt;yes&lt;/manageDesktops&gt;\n&lt;file&gt;menu.xml&lt;/file&gt;\n&lt;/menu&gt;\n</code></pre> <p>hideDelay How long (in milliseconds) you have to hold the mouse button down for it to be hidden automatically when you release it. If you hold shorter, it will stay up when you release.</p> <p>middle Position menus centered vertically instead of aligned to the top.</p> <p>submenuShowDelay and submenuHideDelay affect how submenus pop up when moving across them. When moving away from a submenu it is closed after submenuHideDelay, and when moving into one, it is opened after submenuShowDelay. When moving from one submenu to another, the hide delay is only used if it is lower than the show delay (e.g. by default it is not used). The old submenu is closed after HideDelay milliseconds, and after ShowDelay milliseconds (after moving) the new one is shown (and the old one is hidden even if HideDelay has not expired yet).</p> <p>applicationIcons Whether to show window icons in the Desktop and Windows menus (client-list-menu and client-list-combined-menu).</p> <p>manageDesktops Whether to show the Add new desktop and Remove last desktop entries in the Desktop and Windows menus.</p> <p>file Specify files to load menu specifications from. Can be given more than once, although care should be taken to avoid id clashes. Files are searched for in the user directory first and then in the system directory.</p>"},{"location":"Help/Configuration/#dock","title":"Dock","text":"<pre><code>&lt;dock&gt;\n&lt;position&gt;TopLeft&lt;/position&gt;\n&lt;stacking&gt;Normal&lt;/stacking&gt;\n&lt;direction&gt;Vertical&lt;/direction&gt;\n&lt;floatingX&gt;0&lt;/floatingX&gt;\n&lt;floatingY&gt;0&lt;/floatingY&gt;\n&lt;autoHide&gt;no&lt;/autoHide&gt;\n&lt;hideDelay&gt;300&lt;/hideDelay&gt;\n&lt;showDelay&gt;300&lt;/showDelay&gt;\n&lt;moveButton&gt;Button8&lt;/moveButton&gt;\n&lt;noStrut&gt;yes&lt;/noStrut&gt;\n&lt;/dock&gt;\n</code></pre> <p>The dock is only shown when one or more dockapps are running.</p> <p>position Specify where to show the dock. Can be one of TopLeft, Top, TopRight, Right, BottomRight, Bottom, BottomLeft, Left and Floating.</p> <p>stacking Which window layer to put the dock in. Can be one of above, normal, below. The dock can be raised and lowered by left and middle clicking on it, among windows in the specified layer.</p> <p>direction Specify if dockapps should be laid out in a Vertical or Horizontal direction.</p> <p>floatingX and floatingY When position is set to Floating, these specify the pixel position of the dock. Cannot currently use the slightly extended format described at the bottom of this page.</p> <p>autoHide Whether to hide the dock automatically when the mouse is not over it.</p> <p>hideDelay and showDelay specify (in milleseconds) the delays for hiding and showing the dock when the mouse leaves and enters it, respectively.</p> <p>moveButton Specifies which button to use for moving individual dockapps around in the dock, see the bindings page for details.</p> <p>noStrut Specifies that the dock should not set a strut, which means it won't stop windows from being placed or maximized over it. When position is set to Floating, this is always on, since openbox doesn't guess which edge it should belong to based on just the position. You can use margins to emulate that if you want.</p>"},{"location":"Help/Configuration/#coordinates","title":"Coordinates","text":"<p>Many places in openbox that take a coordinate supports a slightly extended format. Most simply it can be just a number such as 300. Such a coordinate will be left- or top-aligned depending on which coordinate it is. To align to the opposite edge, use -300. To specify a negative offset, a - is also used, so you have to use +-10 to offset 10 pixels negatively to the left/top and --10 for the right/bottom edge. Some things enforce being onscreen though, such as the move/resize popup.</p>"},{"location":"Help/Contents/","title":"Contents","text":"<p>Welcome to the community maintained documentation for Openbox! Please help out and add your own articles or improve the ones that are already here.</p> <p>In order to get full access and contribute in the wiki, all you need to do is prove you are a person. Please see RequestWriteAccess.</p>"},{"location":"Help/Contents/#rcxml","title":"rc.xml","text":""},{"location":"Help/Contents/#configuration","title":"Configuration","text":"<p>The configuration documentation has details on the various options you can set in rc.xml.</p>"},{"location":"Help/Contents/#application-settings","title":"Application settings","text":"<p>Customize properties such as borders, geometry, workspace presence, layering etc. on a per-application basis.</p>"},{"location":"Help/Contents/#mouse-keybindings","title":"Mouse &amp; keybindings","text":""},{"location":"Help/Contents/#binding-documentation","title":"Binding documentation","text":"<p>Improve productivity and customize the function of your desktop by binding actions to key/mouse buttons (commonly called hot keys).</p>"},{"location":"Help/Contents/#actions","title":"Actions","text":"<p>Comprehensive documentation of all actions available for key and mouse bindings and the options which can affect their behavior.</p>"},{"location":"Help/Contents/#menus","title":"Menus","text":""},{"location":"Help/Contents/#menu-documentation","title":"Menu documentation","text":"<p>Describes how to set up your own menus in Openbox.</p>"},{"location":"Help/Contents/#actions_1","title":"Actions","text":"<p>The actions documentation lists all of the actions available for use in Openbox menus.</p>"},{"location":"Help/Contents/#pipe-menus","title":"Pipe menus","text":"<p>The pipe menu documentation explains basic use of pipe menus in Openbox. If you're looking for scripts there are many available on the community page.</p>"},{"location":"Help/Contents/#generating-an-applications-menu","title":"Generating an applications menu","text":"<ul> <li>Scripts may be used to generate an application menu based   on the contents of <code>/usr/share/applications</code> or other directories.   See this section for a complete list.</li> <li>There are also instructions available for getting   a working Debian menu, if yours is not.</li> </ul>"},{"location":"Help/Contents/#themes","title":"Themes","text":""},{"location":"Help/Contents/#theme-specification","title":"Theme specification","text":"<p>Comprehensive detail and documentation all of the elements found in an Openbox theme.</p>"},{"location":"Help/Contents/#openbox-34-theme-file-changes","title":"Openbox 3.4 theme file changes","text":"<ul> <li>Details differences between 3.3-&gt;3.4 theme files</li> <li>A tool to help with converting blackbox/fluxbox themes   to Openbox themes. (For non-xpm-based themes.)</li> </ul>"},{"location":"Help/Contents/#desktop-environments","title":"Desktop Environments","text":""},{"location":"Help/Contents/#openbox-in-gnome","title":"Openbox in GNOME","text":"<p>Instructions for running Openbox in the GNOME desktop environment and getting things to work how you want.</p>"},{"location":"Help/Contents/#openbox-in-kde","title":"Openbox in KDE","text":"<p>Instructions for running Openbox in K Desktop Environment.</p>"},{"location":"Help/Contents/#openbox-in-xfce","title":"Openbox in XFCE","text":"<p>Instructions for running Openbox in the XFCE desktop enviroment.</p>"},{"location":"Help/Contents/#custom-desktop-environments","title":"Custom Desktop Environments","text":""},{"location":"Help/Contents/#openbox-session","title":"openbox-session","text":"<p>Running Openbox as a stand-alone window manager in part of a custom desktop environment.</p>"},{"location":"Help/Contents/#autostart","title":"Autostart","text":"<p>The autostart documentation gives instructions on how to launch programs with Openbox at startup (not applicable unless openbox-session is called from the Desktop Manager/<code>xinit</code>)</p>"},{"location":"Help/Contents/#miscellaneous","title":"Miscellaneous","text":""},{"location":"Help/Contents/#rcxml-configuration-examples","title":"rc.xml Configuration examples","text":"<ul> <li>rc.xml Configuration reference -   Lists all default key bindings and default configuration.</li> <li>Focus-follows-mouse -   This configuration is similar to the default configuration,   but has more suitable mouse bindings for focus-follows-mouse   that won't interfere with your windows' stacking order.</li> <li>Vi-styled bindings -   Two examples of Vi-style keybindings (by Clay Barnes).</li> <li>\"Windows\"/Super key control - Example   of using the \"Windows\" AKA. Super key to control windows (by   Deters).</li> <li>Irssi-style window switching</li> </ul>"},{"location":"Help/Contents/#feature-list","title":"Feature list","text":"<p>A list of features found in the Openbox windowmanager.</p>"},{"location":"Help/Contents/#frequently-asked-questions","title":"Frequently asked questions","text":""},{"location":"Help/Contents/#compiling-from-source","title":"Compiling from source","text":"<p>Details what you need to build the latest version of Openbox, and how to install it correctly.</p>"},{"location":"Help/Contents/#using-git","title":"Using Git","text":"<p>Explains how to get bleeding-edge Openbox code for testing or developing with.</p>"},{"location":"Help/Contents/#obconf","title":"ObConf","text":"<p><code>Obconf</code> provides a simple graphical user interface to ease configuration for new Openbox users.</p>"},{"location":"Help/Contents/#upgrading-to-34","title":"Upgrading to 3.4","text":"<p>Walks through all the changes made since version 3.3, and there is a lot of them. Some of them mean new configuration options and features available to you, that you need to update your configuration to access.</p>"},{"location":"Help/Contents/#other-resources","title":"Other resources","text":"<p>The Arch wiki has a lot of great information on setting up and using Openbox.</p> <p>Many Openbox questions have been answered in forums around the internet. Trying a search may be fruitful.</p> <p>See community portal for other community resources and related projects.</p>"},{"location":"Help/DistrosAndDEsUsingOpenbox/","title":"DistrosAndDEsUsingOpenbox","text":"<p>Any distro can have Openbox added. The following are released with Openbox.</p>"},{"location":"Help/DistrosAndDEsUsingOpenbox/#desktop-environments","title":"Desktop environments","text":"<ul> <li>LXDE</li> </ul>"},{"location":"Help/DistrosAndDEsUsingOpenbox/#lxde-based-distributions","title":"LXDE-based distributions","text":"<ul> <li>Knoppix</li> <li>Lubuntu (in development)</li> <li>Debian Lenny (LXDE version available)</li> <li>Fedora 12 LXDE spin</li> </ul>"},{"location":"Help/DistrosAndDEsUsingOpenbox/#distributions-that-ship-with-openbox","title":"Distributions that ship with Openbox","text":"<ul> <li>Arch linux - highly popular, with     great community support and wiki regarding Openbox</li> <li>PCLinuxOS - well regarded with special     attention paid to Openbox and LXDE.</li> <li>CrunchBang linux - Ubuntu based. Popular     following, EEE PC version (\"CrunchEEE\"). Irregular releases. See     also     crunchbanglinux.org/wiki/adding_crunchbang_features_in_another_distro</li> <li>Slitaz</li> <li>TinyMe linux</li> <li>CRUX</li> <li>Boxpup, Puppy Linux with Openbox (not actively developed?)</li> <li>SimpleLinux mini (sub 90 MB     version) - may also be included as alternative WM in the next EXT     version (which has XFCE as default). SimpleLinux is a Malaysion     distro, derived from Slackware &amp; Slax.</li> <li>Ubuntu - generally has an out of date     version, and with no Ubuntu-specific maintainer to ensure things     work \"out of the box\".</li> <li>Slackware - Openbox exists as a     \"Slackbuild\"1     (SlackBuilds.org is a community supported project... A SlackBuild     build script contains the build instructions and a source download     link for building a particular package for your system.)</li> </ul>"},{"location":"Help/DistrosAndDEsUsingOpenbox/#wikipedia","title":"Wikipedia","text":"<ul> <li>Wikipedia has a comparison of Linux     distributions.     Click right hand column to sort, and find distros with Openbox or     LXDE by default.</li> </ul>"},{"location":"Help/Session/","title":"Session","text":"<p>It is entirely possible to run Openbox as a standalone window manager alongside modular components to completely replicate the functionality of more heavyweight/resource intensive Desktop Environments such as Gnome, KDE or XFCE. There is even a Desktop Environment (LXDE) built around Openbox.</p>"},{"location":"Help/Session/#power-management","title":"Power management","text":"<p>Tips for Power management and Suspend and Hibernate.</p>"},{"location":"Help/Session/#menu-generation","title":"Menu Generation","text":"<p>Pipe menus are applications that dynamically generate your Openbox menu. They can provide a dynamic applications menu, system information, amongst other fun things. See here for more information, and to download them.</p>"},{"location":"Help/Session/#panels-widgets-desktops-pagers-etc","title":"Panels, widgets, desktops, pagers, etc..","text":"<p>Besides the programs included in GNOME and KDE...</p> <ul> <li>Avant Window Navigator \"(AWN/Awn) is     a dock-like navigation bar for the linux desktop that positions     itself at the bottom of the screen. It can be used to keep track of     open windows and behaves like a normal window list.\"</li> </ul> <ul> <li>BBDock \"BBDock is an application     launcher for Blackbox (and others) that allows you to create     application buttons in the slit/dock. It works with PNG files rather     than XPM images. It supports alpha blending at 16, 24 and 32 bits     color-depth. Also, the raise-window function is available to window     managers which implement the EWMH specification.\" (untested. EWMH     capable) Tested by CrossWind, Fully operational!</li> </ul> <ul> <li>bbtools \"BB-tools are a number of     simple X-Window programs to display the status of different     resources. The style and part of the code is copied from Blackbox a     small and extremely fast X11-Windowmanager.\"</li> </ul> <ul> <li>bmpanel2 \"Nice     NETWM-compatible panel for X11.\"</li> </ul> <ul> <li>conky \"Conky is a free,     light-weight system monitor for X, that displays any information on     your desktop. Conky is licensed under the GPL and runs on Linux and     BSD.\"</li> </ul> <ul> <li>fbpanel \"fbpanel is a     lightweight, NETWM compliant desktop panel. It works with any NETWM     compliant window manager (e.g. xfwm4, sawfish, openbox, metacity,     kde wm)\"</li> </ul> <ul> <li>feh An image viewer with many     features.</li> </ul> <ul> <li>flauncher \"The project     is intendent to replace the common panels (top panel and bottom     panel in Gnome). It gives speedup of application management reducing     the distance of mouse movements.\" (An attempt to get the panel     functionality into a separate window.)</li> </ul> <ul> <li>gDesklets \"gDesklets is a system for     bringing mini programs (desklets), such as weather forecasts, news     tickers, system information displays, or music player controls, onto     your desktop, where they are sitting there in a symbiotic     relationship of eye candy and usefulness. The possibilities are     really endless and they are always there to serve you whenever you     need them, just one key-press away. The system is not restricted to     one desktop environment, but currently works on most of the modern     Unix desktops (including GNOME, KDE, Xfce).\"</li> </ul> <ul> <li>iDesk \"iDesk gives users of minimal     wm's (fluxbox, blackbox, openbox, windowmaker...) icons on their     desktop. The icon graphics are either from a png or svg (vector)     file and support some eyecandy effects like transparency. Each icon     can be confgured to run one or more shell commands and the actions     which run those commands are completely configurable. In a nutshell     if you want icons on your desktop and you don't have or dont't want     KDE or gnome doing it, you can use iDesk.\"</li> </ul> <ul> <li>kooldock     \"A kool dock for KDE. It attemps to resemble the Mac OSX dock.\"</li> </ul> <ul> <li>LXPanel</li> </ul> <ul> <li>nitrogen \"Nitrogen is a     background browser and setter for X windows. It is written in C++     using the gtkmm toolkit. It can be used in two modes: browser and     recall. Nitrogen has been in development for over 2 years, due to     real life and laziness. For more info, check out the features     section.\"</li> </ul> <ul> <li>Oboinus \"X11 background     previewer and setter.\"</li> </ul> <ul> <li>ObPager \"OBPager is a lightweight     pager designed to be used with NetWM-compliant window managers like     OpenBox. Unlike many other pagers out there, OBPager has very few     dependencies, requiring only Xlib and glibc++ (no Gnome or KDE     necessary).\"</li> </ul> <ul> <li>perlpanel \"PerlPanel is     an attempt to build a useable, lean panel program (like Gnome's     gnome-panel and KDE's Kicker) in Perl, using GTK 2. It has an     object-oriented design for easy customisation and extension, and an     applet architecture that means that you can create an applet in a     matter of minutes.\"</li> </ul> <ul> <li>pypanel \"PyPanel is a lightweight     panel/taskbar written in Python and C for X11 window managers. It     can be easily customized to match any desktop theme or taste.     PyPanel works with EWMH compliant WMs (Openbox, PekWM, FVWM, etc.)     and is distributed under the GNU General Public License v2.\"</li> </ul> <ul> <li>PyTyle \"PyTyle is a manual tiling manager that     can slide into any EWMH compliant window manager, inspired by     XMonad. It will allow you to enable/disable tiling on a per screen     per workspace basis, and continually tile your windows.\"</li> </ul> <ul> <li>ROX Desktop \"ROX     is a fast, user friendly desktop which makes extensive use of     drag-and-drop. The interface revolves around the file manager, or     filer, following the traditional Unix view that `everything is a     file' rather than trying to hide the filesystem beneath start menus,     wizards, or druids. The aim is to make a system that is well     designed and clearly presented. The ROX style favours using several     small programs together instead of creating all-in-one     mega-applications.\"</li> </ul> <ul> <li>Screenlets \"Screenlets are small     owner-drawn applications (written in Python) that can be described     as \"the virtual representation of things lying/standing around on     your desk\". Sticknotes, clocks, rulers, ... the possibilities are     endless.\"</li> </ul> <ul> <li>Screenpager \"Screenpager is a     screenwise pager for X workstations running Xinerama. It works like     a desktop pager, but acts at the level of screens. Instead of paging     the desktop as a whole, it can page each screen independently, or     move pages from screen to screen.\"</li> </ul> <ul> <li>Set Layout A small     program to set your desktops into a grid if you do not use a pager.</li> </ul> <ul> <li>stalonetray \"Stalonetray is a     stand-alone freedesktop.org and KDE system tray (notification area)     for X Window System/X11 (e.g. X.Org or XFree86). It has full XEMBED     support and minimal dependencies: an X11 lib only. Stalonetray works     with virtually any EWMH-compliant window manager.\"</li> </ul> <ul> <li>Super Karamba     \"SuperKaramba is, in simple terms, a tool that allows you to easily     create interactive eye-candy on your KDE desktop.\"</li> </ul> <ul> <li>SuperSwitcher     \"SuperSwitcher is a (more feature-ful) replacement for the Alt-Tab     window switching behavior and Ctrl-Alt-Left/Right/Up/Down workspace     switching behavior that is currently provided by Metacity.\"</li> </ul> <ul> <li>tint2 panel/taskbar \"tint2 is a     simple panel/taskbar unintrusive and light (memory / cpu /     aestetic).\"</li> </ul> <ul> <li>visibility-python     \"gtk2 x11 pager / window list.\" (click snapshot to download a     .tar.gz)</li> </ul> <ul> <li>wbar \"wbar is a quick launch     bar. It's developed with speed in mind and is highly tweakable.\"</li> </ul> <ul> <li> <p>wmctrl \"wmctrl is a UNIX/Linux     command line tool to interact with an EWMH/NetWM compatible X Window     Manager\". Example of changing number of desktops:<code>         wmctrl -n 4 <p></p> <ul> <li>xfce4-panel \"The Xfce panel supports     multiple panels, with many options for their position, appearance,     transparency and behavior. There are many items available by default     to customize your panels, like application launchers with detachable     menus, a graphical pager, a tasklist, a clock, a system tray, a     show/hide desktop switcher, and even more.\"</li> </ul> <ul> <li>xprop     is utility for displaying and changing X server window and font     properties. To change number of columns and rows of desktops grid     layout run:</li> </ul> <p><code> <pre><code>xprop \\\n  -root \\\n  -format _NET_DESKTOP_LAYOUT 32c \\\n  -set _NET_DESKTOP_LAYOUT &lt;orientation&gt;,&lt;columns&gt;,&lt;rows&gt;,&lt;starting_corner&gt;\n</code></pre> <p></p> <p>where  is \u00ab0\u00bb or \u00ab1\u00bb;  is \u00ab0\u00bb, \u00ab1\u00bb, \u00ab2\u00bb or \u00ab3\u00bb; ,  - number of columns and rows respectively (more). Example: <p><code> <pre><code>xprop \\\n  -root \\\n  -format _NET_DESKTOP_LAYOUT 32c \\\n  -set _NET_DESKTOP_LAYOUT 0,2,2,0\n</code></pre> <p></p> <ul> <li>ksuperkey (daemon) uses     XTEST extension to bind the modifier key (like ctrl, alt (meta),     windows (super)) to any shortcut (like Alt+F1).</li> </ul> <p><code> <pre><code>~/.config/openbox/rc.xml\n\n&lt;keybind key=\"A-F1\"&gt;\n&lt;action name=\"ShowMenu\"&gt;\n&lt;menu&gt;root-menu&lt;/menu&gt;\n&lt;/action&gt;\n&lt;/keybind&gt;\n\n~/.config/openbox/autostart\n\nksuperkey -e 'Super_L=Alt_L|F1' &amp;\n</code></pre> <p></p> <p>This allow you to open Openbox menu using super (windows) key.</p> <ul> <li>xdotool \"lets     you simulate keyboard input and mouse activity, move and resize     windows, etc. It does this using X11's XTEST extension and other     Xlib functions\".</li> </ul> <p><code> <pre><code># focus and raise xterm window\nxdotool \\\n   search \\\n      --maxdepth 2 \\\n      --onlyvisible \\\n      --all \\\n      --name xterm \\\n   windowfocus \\\n   windowraise\n\n# open Openbox menu, when mouse in top-left corner\n# (Alt+F1 must be bind to open root-menu)\nxdotool \\\n   behave_screen_edge \\\n      --delay 300 \\\n      --quiesce 3000 \\\n      top-left \\\n   key \"Alt_L+F1\"\n</code></pre> <p></p> <ul> <li>xkb-switch \"is a C++ program     that allows to query and change the XKB layout state\". Example of     using \"Win+space\" to switch keyboard layout:</li> </ul> <p><code> <pre><code>~/.config/openbox/rc.xml\n\n&lt;keybind key=\"W-space\"&gt;\n&lt;action name=\"Execute\"&gt;\n&lt;command&gt;xkb-switch --next&lt;/command&gt;\n&lt;/action&gt;\n&lt;/keybind&gt;\n</code></pre> <p></p>"},{"location":"Help/Session/#other-links","title":"Other links","text":"<p>You can find lots of dockapps at dockapps.windowmaker.org. Some nice ones are \u00abwmCalClock\u00bb, \u00abwmnd\u00bb, \u00abwmix\u00bb and \u00abwmpinboard\u00bb.</p> <p>There are other programs of interest in the community portal.</p>"},{"location":"Help/UsingGit/","title":"Using Git","text":""},{"location":"Help/UsingGit/#quick-instructions","title":"Quick instructions","text":"<p>The following command will create a directory called \"<code>openbox</code>\" and download the source code into it (i. e., will create the local copy of external repository):</p> <pre><code>git\u00a0clone https://github.com/danakj/openbox.git\n</code></pre> <p>The following command will get the latest changes from external repository and store them to the downloaded local repository:</p> <pre><code>git\u00a0pull\n</code></pre> <p>Note however that this only does what you expect, if you haven't made any changes. If you have, it will attempt to merge your changes, which may or may not be what you want; see \"Local changes\" below.</p>"},{"location":"Help/UsingGit/#branches","title":"Branches","text":"<p>There are two main branches in the Openbox git repositories: \"work\" and \"master\". The difference is that our \"work\" branches can have testing stuff and be rebased (which means, git will get confused, if you try to pull from them). Once we are pretty sure something will at least not blow up, it will be put on the \"master\" branch and we try not to rebase that unless really needed.</p> <p>By default you will get the \"master\" branch, hence the name. If you want the \"work\" branch, the first time you will need to run:</p> <pre><code>git\u00a0checkout\u00a0--track\u00a0-b\u00a0work\u00a0origin/work\n</code></pre> <p>or if you have a recent git (somewhere in 1.6.x), you can just do:</p> <pre><code>git\u00a0checkout\u00a0-t\u00a0origin/work\n</code></pre> <p>You can now switch between branches with <code>git checkout master</code> and <code>git checkout work</code>.</p> <p>If you want the very latest changes, first decide, if you want \"master\" or \"work\". For \"master\" you can usually just run <code>git pull</code>, but if you're on \"work\", you probably want to run something like:</p> <pre><code>git\u00a0fetch\u00a0;\u00a0git\u00a0reset\u00a0--hard\u00a0origin/work\n</code></pre> <p>Note though that this will delete all local changes to checked out files and also any commits you've made on the current branch. If you do have commits, you can try <code>git pull --rebase</code>, but no guarantees. If something goes wrong, anything you've committed is actually still available, read the <code>git-reflog</code> man page for details. Uncommitted changes will be gone after a reset <code>--hard</code> though.</p>"},{"location":"Help/UsingGit/#local-changes","title":"Local changes","text":"<p>Unlike CVS and Subversion, git lets you have local changes while still tracking upstream development. In a nut shell, make your changes and run:</p> <pre><code>git\u00a0commit\u00a0-a\u00a0-m\u00a0\"informative\u00a0message\"\n</code></pre> <p>It's usually a good idea to keep your changes in a separate branch. You can do this in a couple of ways. The easiest way is to run:</p> <pre><code>git\u00a0checkout\u00a0-b\u00a0my-branch\u00a0master\n</code></pre> <p>and then commit all your changes to that branch.</p>"},{"location":"Help/UsingGit/#conflicting-changes","title":"Conflicting changes","text":"<p>If you hang on to your changes for a long time, it's likely that we will make commits, that conflict with yours. There are two ways to deal with this. You can either <code>git-merge</code> our branch and resolve the differences, but the better way is to use <code>git-rebase</code>. Last command will take your commits and apply them to the tip (the latest version) of the specified branch, pausing after each commit that conflicts. This usually makes it easier to resolve the conflicts and also gives a nicer history. Using <code>git-rebase</code> is a bit complicated, so read the man page.</p> <p>If you just want to test that your changes work with the latest version of Openbox, you can merge \"master\" branch and then later use <code>git reset --hard HEAD^</code> to revert the merge. However, I recommend first doing a <code>git checkout -b my-temp</code>, since running <code>git reset</code> twice will continue reverting real commits, so it's easy to mess up. If you're doing all the temp merging on a separate branch you don't have to worry about that.</p>"},{"location":"Help/UsingGit/#contributing-code","title":"Contributing code","text":""},{"location":"Help/UsingGit/#github-workflow","title":"GitHub workflow","text":"<p>If you'd like to use the GitHub workflow, then make a fork of the Openbox git repo above via GitHub, and send pull requests from your branch with your code changes. GitHub has documentation, describing this process.</p>"},{"location":"Help/UsingGit/#bugzilla-workflow","title":"BugZilla workflow","text":"<p>You've coded an exciting feature and want to send a diff? How to do it? <code>git diff</code> you might guess, and while that will produce a diff you can send. <code>git format-patch</code> is a bit nicer as it will automatically give you a patch file per commit that you want to send, with the commit message in each file.</p> <p>In the simple case, where you just want to send off the top commit from your repo, do:</p> <pre><code>git\u00a0format-patch\u00a0-1\n</code></pre> <p>If you have a bunch of patches and you have git 1.7 you can do:</p> <pre><code>git\u00a0format-patch\u00a0@{u}\n</code></pre> <p>and it will figure out the correct branch to consider \"upstream\" and spit out a bunch of patch files. If you don't, you have to give the range manually, but it will almost always be:</p> <pre><code>git\u00a0format-patch\u00a0origin/master\n</code></pre> <p>Once you have your patch(es), open a bug in the bugzilla as instructed here.</p> <p>Another option is to set up your own public repo and simply tell us where to pull your changes from. Look at the <code>git-daemon</code> man page for details. This is not really preferred usually though, and you'll probably need to be patient and hang around in the IRC channel for a while.</p>"},{"location":"Help/UsingGit/#low-bandwidth-option","title":"Low bandwidth option","text":"<p>If your internet connection is very slow (the full git repo is currently around 8.5\u00a0MB) and you just want the very latest version without any history, you can run:</p> <pre><code>git\u00a0clone\u00a0--depth\u00a01\u00a0https://github.com/danakj/openbox.git\n</code></pre> <p>This will give you only the current and preceding commit from each branch, but you can't do much more with your repo than compile the code. Merging as described above will only work, if you use a depth high enough to include the point, where the \"backport\" branch separated from \"master\" branch. See the <code>git-clone</code> and <code>git-fetch</code> man pages for further details.</p> <p>You can also download a tarball of any revision via gitweb. Click \"tree\" next to a branch name at the bottom, then click \"snapshot\" at the top of the new page.</p>"},{"location":"Help/UsingGit/#alternate-repos","title":"Alternate repos","text":"<p>Due to the distributed nature of git, you can choose to pull from various upstream locations (see the <code>git-remote</code> man page for details on how to use several remotes):</p> <p>git://git.openbox.org/dana/openbox git://git.openbox.org/mikachu/openbox git://git.mika.l3ib.org/openbox.git git://repo.or.cz/openbox.git git://github.com/Mikachu/openbox git://github.com/danakj/openbox</p> <p>The astute git user will notice, that there are some variations in branches offered among these, for example dana has a \"libs\" branch that separates out some common wm code in a library, and mikachu has a \"mikabox\" branch which is just some crazy stuff.</p>"},{"location":"Help/UsingGit/#further-reading","title":"Further reading","text":"<p>On the git home page there are many great tutorials and all the man pages are available for browsing as well.</p>"},{"location":"ObConf/About/","title":"About","text":"<p>This page is about the Openbox configuration tool, ObConf 2.0.</p>"},{"location":"ObConf/About/#installing-and-distributing-openbox-themes","title":"Installing and distributing Openbox themes","text":"<p>ObConf now easily installs new themes which use the <code>.obt</code> Openbox theme archive format for distribution. Just open any <code>.obt</code> theme archive in your file browser, or use the interface provided inside ObConf.</p> <p>You can also use ObConf to create <code>.obt</code> Openbox theme archives for distributing your own themes.</p>"},{"location":"ObConf/About/#screenshots","title":"Screenshots","text":""},{"location":"ObConf/About/#download","title":"Download","text":"<p>ObConf is available for download here. The current changelog is found here.</p>"},{"location":"ObConf/About/#installing-obconf","title":"Installing ObConf","text":"<p>ObConf should be installed to the <code>/usr</code> prefix to have file associations function correctly.</p> <p>When ObConf is installed, upgraded or uninstalled, you need to run these commands to update the <code>.obt</code> file associations for GNOME:</p> <pre><code>update-mime-database /usr/share/mime\nupdate-desktop-database /usr/share/applications\n</code></pre> <p>These programs are a part of the <code>shared-mime-info</code> and <code>desktop-file-utils</code> packages. They should be installed if GNOME is installed.</p>"},{"location":"ObConf/About/#dependencies","title":"Dependencies","text":"<p>Compiling ObConf requires the following packages:</p> <ul> <li>GTK+ 2.x library and headers (development package)</li> <li>Glade 2.x library and headers (development package)</li> <li>Openbox 3.4 or above (the libraries development package if it is separate)</li> </ul>"},{"location":"ObConf/About/#building-obconf","title":"Building ObConf","text":"<p>If you have installed Openbox into the <code>/usr/local</code> prefix, you will need to tell the ObConf configure script where to find the Openbox libraries:</p> <pre><code>PKG_CONFIG_PATH=/usr/local/lib/pkgconfig ./configure --prefix=/usr\n</code></pre>"}]}