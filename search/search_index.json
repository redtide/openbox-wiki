{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>:: Please help translate Openbox! ::</p>"},{"location":"#openbox","title":"Openbox","text":"<p> Openbox is a highly configurable, next generation window manager with extensive standards support.</p> <p>The box visual style is well known for its minimalistic appearance. Openbox uses the box visual style, while providing a greater number of options for theme developers than previous box implementations. The theme documentation describes the full range of options found in Openbox themes.</p> <p>Openbox lets you bring the latest applications outside of a full desktop environment. Most modern applications have been written with GNOME and KDE in mind. With support for the latest freedesktop.org standards, as well as careful adherence to previous standards, Openbox provides an environment where applications work the way they were designed to.</p> <p>Openbox is a highly configurable window manager. It allows you to change almost every aspect of how you interact with your desktop and invent completely new ways to use and control it. It can be like a video game for controlling windows. But Openbox can also be kept extremely simple, as it is in the default setup, meaning that it can suit just about anybody. Openbox gives you control without making you do everything.</p> <p>Openbox makes desktop environments better. By running Openbox inside the GNOME or K desktop environments, you can combine their ease and functionality with the power of Openbox. Your desktop becomes cleaner and faster, and is in your control, when you use Openbox.</p> <p>Take a look at the getting started guide and change how you manage your desktop.</p> <p> GNOME/Openbox Openbox inside the GNOME desktop environment.</p> <p> KDE/Openbox Openbox inside the K Desktop Environment.</p> <p>KDE, K Desktop Environment and the KDE Logo are trademarks of KDE e.V. GNOME and the GNOME logo are trademarks of the GNOME foundation.</p>"},{"location":"About/","title":"About","text":"<p> Openbox is a minimalistic, highly configurable, next generation window manager with extensive standards support.</p> <p>Openbox is not Blackbox. Openbox is not related to Blackbox in any way except for its visual appearance.</p> <p>Openbox originated as a fork of the Blackbox window manager at a time when a number of window managers forked off of Blackbox, such as Waimea and Fluxbox. Starting with Openbox version 3.0, however, Openbox has branched off to become its own style of window manager. The code was written entirely from scratch and bears no resemblance or relation to Blackbox any more.</p> <p>Openbox aims to be extremely standards compliant, following the ICCCM standard strictly, as well as throughly implementing support for the freedesktop.org window manager specification (EWMH). Through these ends, Openbox is fully capable of being run under both the GNOME and KDE environments, and supports any and all applications which follow the same standards.</p> <p>Openbox is open source software, distributed under the terms of the GNU General Public License. See the README and COPYING files in the distribution for further details.</p> <p>Most distributions of Linux include Openbox, see Help/DistrosAndDEsUsingOpenbox for more information.</p>"},{"location":"About/#contributors","title":"Contributors","text":"<p>Dana Jansens - Lead developer</p> <p>Mikael Magnusson - Developer and long-time maintainer</p> <p>Derek Foreman - Rendering code</p> <p>Tore Anderson - Directional focus, edge moving/growing actions</p> <p>Audun Hove - Actions code, move window to edge actions</p> <p>Marius Nita - Otk prototype code, design ideas</p> <p>John McKnight - Clearlooks themes</p> <p>David Barr - Bear2 theme</p> <p>Brandon Cash - SplitVertical gradient style</p> <p>Dan Rise - Natura theme</p>"},{"location":"Changelog/","title":"Changelog","text":""},{"location":"Changelog/#361","title":"3.6.1","text":"<ul> <li>Bump ABI version of <code>libobrender</code> that should have been done in 3.6</li> </ul>"},{"location":"Changelog/#36","title":"3.6","text":"<ul> <li>Added various new abilities to If action, including the <code>&lt;query&gt;</code> tag,   matching class, name, role and window type.</li> <li>Added <code>ForEach</code> action.</li> <li>Restore the <code>&lt;center&gt;</code> option for window placement.</li> <li>New <code>GrowToFill</code> action.</li> <li>Updated Portuguese and Polish translations.</li> <li>New Galician translation.</li> <li>Added strict option to <code>ToggleShowDesktop</code> action.</li> <li>Speed optimization in rendering code.</li> <li>New <code>&lt;position&gt;</code> tag for <code>ShowMenu</code> action allows placing menus other than   at the mouse cursor.</li> <li>Fix some corner cases of relative position to work correctly.</li> <li>Allow specifying multiple mousebinds in one tag as we already do for keybinds   (separated by spaces, as <code>W-Return M-S-F3</code> for example).</li> <li>Added option <code>rebindOnMappingNotify</code> option, on by default, which   controls if we update binds when the keyboard layout changes at   runtime.</li> <li>The resize action now only considers the part of the client that is   onscreen for purposes of picking an action to perform.</li> <li>Make desktop actions non-interactive (means you can have more actions   bound to a key after them, and the dialog disappears on a timer   instead of when releasing the modifier keys).</li> <li>obxprop is now not pathologically slow when printing very long arrays.</li> <li>Fix menu accelerator underlines sometimes not showing up.</li> <li>Fix so you can click menu entries before the <code>menuHideDelay</code> expires if   it's a new click.</li> <li>Don't readd the X event fd to the poll set every time we reconfigure.</li> <li>Fix some specialized button bitmaps not loading from the correct   files. (toggled + pressed or hover would just be the base toggled image).</li> <li>Various small bugfixes.</li> </ul>"},{"location":"Changelog/#352","title":"3.5.2","text":"<ul> <li>Fix crash in theme rendering code, and in theme parsing code.</li> <li>Maximize windows without borders to fill the whole screen, don't leave   a one-pixel empty space. (Bug #5996)</li> </ul>"},{"location":"Changelog/#351","title":"3.5.1","text":"<ul> <li>New translations: Afrikaans, Belarusian, Interlingua, Hebrew, Romanian, Greek.</li> <li>Updated translations: Italian, Serbian, Spanish, Czech, Hungarian,   Turkish, German, Arabic, Polish, Dutch, Lithuanian, Portuguese, Estonian.</li> <li>SVG icon support. This is optional, depending on librsvg being installed.</li> <li>Allow application rules to control window size with a new <code>&lt;size&gt;</code> tag.</li> <li>Allow application rules to pick a monitor for new windows   without forcing a position.</li> <li>Allow non-interactive focus cycling with a new <code>&lt;interactive&gt;</code> tag.</li> <li>New <code>LeastOverlap</code> window placement policy replaces the old default behaviour.   It finds a place on a given monitor that overlaps as few windows as possible.   Contributed by Ian Zimmerman.</li> <li>Improved Xinerama behaviour.</li> <li>Correctly interface with latest gnome-session for Gnome/Openbox X   sessions.</li> <li>Allow third-party control of window opacity in compositing managers.</li> <li>Improved themeing options. Contributed by Dave Foster.</li> <li>Add <code>&lt;monitor&gt;</code> and <code>&lt;activedesktop&gt;</code> options to <code>If</code> action.</li> <li>Addresses bugs #4661, #5506, #5186, #5758, #5410, #5228, #5277,   #5731, #5746, #5737, #5419, #5721, #5711, #5385, #5500,   #4992, #5443, #5518, #5444, #4782, #5237, #5228, #5173,   #5203, #5246, #5180, #5179, #5150, #5132, #4937, #4889,   #5253, #3769, #5819, #5811, #5081, #5426 among others.</li> </ul>"},{"location":"Changelog/#350","title":"3.5.0","text":"<ul> <li>New alt-tab dialog shows windows in a vertical list.</li> <li>Improved Xinerama support.</li> <li>Allow icons in menus.</li> <li>Theme options for prompt dialogs (osd.button.unpressed.*,   osd.button.pressed.*, osd.button.focused.*)</li> <li>Addresses bug #4877, #4596, #4617, #4752, #4663, #4662, #4586,   #2319, #4341, #4519, #4543, #4503, #4355, #4072, #3702, #4284</li> <li>Lots of additional bug fixes and performance improvements.</li> </ul>"},{"location":"Changelog/#34112","title":"3.4.11.2","text":"<ul> <li>Updated Estonian and Portuguese translations.</li> <li>Fix a rare crash involving moving fullscreen windows to different   monitors</li> <li>Fix a more common crash involving pressing right in a menu</li> </ul>"},{"location":"Changelog/#34111","title":"3.4.11.1","text":"<ul> <li>Updated Polish translation.</li> <li>Fixed bug #4519 (Incorrect focus in reused windows).</li> <li><code>Lower</code> the default submenu open/hide delay from 200ms to 100ms.</li> <li>Fix some more problems with gnome integration.</li> <li>Update Clearlooks theme.</li> <li>Some other small fixes.</li> </ul>"},{"location":"Changelog/#3411","title":"3.4.11","text":"<ul> <li>Update Hungarian, Japanese, and Latvian translations.</li> <li>Make xdg-autostart use the <code>OPENBOX</code> environment by default,   so you can use <code>OnlyShowIn=OPENBOX</code> in an autostart .desktop   and it will work as expected.</li> <li>Don't close the menu when you hold control and execute something.</li> <li>Fix bug #4503 (Adjust who shows up in the Alt-Tab list using <code>SKIP_TASKBAR</code>).</li> <li>Fix flickering window when moving maximized window between monitors   of different sizes.</li> <li>Fix bug #4355 (Allow multiple escaped _'s in a menu label   and allow a menu shortcut to come after an escaped _).</li> <li>Remember the maximized state of a window when it goes fullscreen,   and restore it when leaving fullscreen state.</li> <li>Fix bug #4072 (Openbox is stopped by terminal applications writing to <code>stdout</code>).</li> <li>Fix bug #4492 (Mistake in <code>openbox-gnome-session</code> check while setting   up).</li> <li>Fix obxprop to make <code>--root</code> and <code>--id</code> work correctly.</li> <li>Add <code>`_OB_APP_ROLE</code>/<code>CLASS</code>/<code>NAME</code>/<code>TYPE</code> properties (replaces <code>_OB_ROLE</code>/<code>CLASS</code>/<code>NAME</code>).</li> <li>Make the focus cycling popup dynamic when windows appear/disappear.</li> <li>Fix bug #4411 (Crash when window appears during focus cycling).</li> <li>Allow the user to specify which properties should be shown by obxprop.</li> <li>Fix tilde expansion in the <code>Execute</code> action</li> <li>Make Home and End keys move to the top/bottom of the active menu.</li> <li>Use the <code>submenuShowDelay</code> when navigating menus with the keyboard.</li> </ul>"},{"location":"Changelog/#3410","title":"3.4.10","text":"<ul> <li>Improve keyboard navigation in Openbox menus.</li> <li>Add a <code>--root</code> option and a manpage for obxprop.</li> <li>Use a negative value for <code>submenuShowDelay</code> and <code>submenuHideDelay</code>   to cause an infinite delay. This means you have to click to show a submenu,   rather than just hover over it.</li> <li>Improved code for submenu show/hide delay. Added the <code>submenuHideDelay</code>   config file option, under the <code>menu</code> section.</li> <li>Fixed bug #4464 (Typo in <code>openbox-gnome-session</code> script).</li> <li>Fixed bug #4436 (Focusing a window used to stop focus cycling).</li> <li>Renamed obprop to obxprop due to collision with Open Babel (See bug #4419).</li> </ul>"},{"location":"Changelog/#349","title":"3.4.9","text":"<ul> <li>Allow focus to move while inside an Openbox menu,   or during an interactive action such as window cycling.</li> <li>Fixed bug #3717 (Empty dock interfered with move/grow to edge actions).</li> <li>Fixed bug #4411 (Crash when switching desktops and window cycling).</li> <li>Fixed bug #4377 (Window resistance against struts).</li> <li>Fixed bug #4035 (Prevent focus from moving under the mouse after   activating a window with an Openbox menu.)</li> <li>Correct the value provided by the <code>_NET_WORKAREA</code> hint,   so desktop icons will place across all monitors.</li> <li>Don't hide submenus immediately when moving through the parent menu.   (Resolves request #3762).</li> <li>Fix for showing Openbox menus with multiple monitors,   don't restrict them to the monitor where the mouse is.</li> <li>Fixed bug #4023 (Allow the user to have multiple keys which perform   the same function in Openbox menus/move/resize. E.g. two keys which   are both bound to Escape.)</li> <li>Add a new obprop tool, which can be used to read the <code>_OB_ROLE</code>,   <code>_OB_NAME</code>, and <code>_OB_CLASS</code> (as well as any other UTF-8 window   properties) off of a window.</li> <li>Add <code>_OB_ROLE</code>, <code>_OB_NAME</code>, and <code>_OB_CLASS</code> hints on each window that   show the respective values for use in the <code>rc.xml</code> applications section,   to modify the window when it appears.</li> <li>Improve Openbox interoperability with <code>gnome-session</code> &gt;= 2.24.</li> <li>Fixed bug #4040 (Remove desktop hints set by gdm in the   <code>openbox-session</code> scripts, so that Openbox can set the number of   desktops (assuming <code>gnome-settings-daemon</code> doesn't first)).</li> <li>Fix a bug in xdg-autostart preventing some .desktop files from working.</li> <li>Show the desktop pager popup on the primary monitor instead of on all monitors.</li> <li>Add a new <code>primaryMonitor</code> config option, which is where Openbox popups   will appear. Defaults to a fixed monitor, but can be made to behave as   before with the \"active\" value for it.</li> <li>Correct edge detection for move/grow to edge to properly use monitor   edges for multi-monitor setups.</li> <li>Change default window placement policy to stay on the active monitor   for multi-monitor setups.</li> <li>Fixed bug #1149 (Crash with some window icon sizes).</li> <li>Respond to all strut changes, fixes moving/hiding panels.</li> <li>Fix internal code to focus windows on other desktops correctly (Fixes bug #4413).</li> <li>Focus correctness fixups for switching desktops.</li> <li>Fixed bug #4373 (Decoration bug for shaded maximized windows).</li> <li>Fixed bug #4350 (Allow a window to be made <code>skip_taskbar</code> but still get   focused by the user's <code>rc.xml</code>).</li> <li>Fixed bug #4307 (Set a minimum time for <code>screenEdgeWarpTime</code>).</li> <li>Fixed bug #4253 (Support for Solaris in <code>openbox-session scripts</code>).</li> <li>Fixed bug #3851 (Allow transient windows to be above helper windows).</li> </ul>"},{"location":"Changelog/#348","title":"3.4.8","text":"<ul> <li>Updated translations: Slovak, Italian, Croatian, Ukrainian.</li> <li>Allow windows to change their decorations at any time (Fix for Google Chrome).</li> <li>Make openbox-session to respect the <code>$XDG_CONFIG_HOME</code> environment   variable.</li> <li>Fixed bug #4344 where borders were given to windows that should not   have them.</li> <li>Merge the <code>SessionLogout</code> and <code>Exit</code> actions. They now test if connected   to a session manager and ask it to exit if so, or simply kill Openbox if not.</li> <li>Further tweaks to the <code>_NET_ACTIVE_WINDOW</code> message handling.   Use the same logic for focus-stealing as is used when mapping a new window.</li> <li>Don't go out of our way any more to prevent focus from moving while   the keyboard is grabbed.</li> <li>Fix <code>openbox-gnome-session</code> when using <code>gnome-session</code> &gt; 2.22.</li> <li>When resizing a window while focus cycling with <code>bar=no</code>,   the bar no longer reappears.</li> <li>Correctly handle shaped windows using the <code>ShapeInput</code> kind,   this is used by many composited apps to pass through clicks   in their transparent areas.</li> <li>Fix the <code>&lt;monitor&gt;</code> per-app setting.</li> <li>Avoid using anonymous unions.</li> <li>Windows that had their decorations removed by per-app settings were   still placed as if they still had their decorations.</li> <li>Fix event handling not to ignore events on a window when they have an   unmap event in the queue, if that unmap event doesn't cause the window   to be unmanaged.</li> <li>Show the desktop switch on every monitor in xinerama.</li> <li>Fix interpretation of struts in xinerama where the screens have   different sizes.</li> <li>Add <code>next</code> and <code>prev</code> as possible <code>&lt;monitor&gt;</code> targets in the <code>moveto</code> and   <code>resizeto</code> actions.</li> <li>Allow escaping the <code>_</code> used to mark the shortcut character in menu   labels. You can now change the (first) <code>_</code> in a label to <code>__</code>,   this will be displayed as a single underscore.   The rest of the <code>_</code> in the string will be unaffected, so only double the first one.</li> <li>Only replace <code>~</code> with the home directory when it is preceded by   whitespace or is at the start of the string, and when it is followed   by a space, slash, or the end of the string. This is implemented with <code>GRegex</code>,   and so the required glib version has been bumped to 2.14.</li> <li>Some other small fixes.</li> </ul>"},{"location":"Changelog/#348-rc1","title":"3.4.8-rc1","text":"<ul> <li>Updated translations: Basque, Catalan, Turkish, Italian, Spanish, Russian.</li> <li>New translations: Danish, Turkish, Lithuanian.</li> <li>Set the <code>_MOTIF_WM_INFO</code> atom so urxvt uses motif hints for borderless mode.</li> <li>Properly escape the xml used in session files.</li> <li>Correct a 64-bit issue related to comparing timestamps.</li> <li>There is a sneaky sentence right at the end of a big paragraph in the   wm-spec document that says windows mapping with <code>_NET_WM_USER_TIME=0</code>   should not be focused initially, honor this request.</li> <li>When moving a window to another desktop with following on, bring the   window's helper windows (for example gimp image windows with the   toolbox set to utility window).</li> <li>Change the <code>_NET_ACTIVE_WINDOW</code> messages again, if they originate from   the app and the window is on another desktop, just set the   demands_attention flag. If the event came from the user (ie pager/panel),   then the window is still moved to the current desktop.</li> </ul>"},{"location":"Changelog/#3472","title":"3.4.7.2","text":"<ul> <li>The system I used to generate the dist tarball didn't have   the <code>docbook-to-man</code> command so the manpages were empty.</li> </ul>"},{"location":"Changelog/#3471","title":"3.4.7.1","text":"<ul> <li>Not to be outdone by the cairo team, I introduced a bug in the last   release which made resizing not give any feedback. This is now fixed.</li> </ul>"},{"location":"Changelog/#347","title":"3.4.7","text":"<ul> <li>Fully updated Czech, Simplified Chinese, Traditional Chinese, German,   French, Hungarian, Norwegian, Vietnamese, Dutch, Swedish, Finnish,   Brazilian Portuguese, Japanese and Portuguese translations</li> <li>Partially updated Spanish translation</li> <li>Add an example of the \"force\" option for the per-app placement options   to the default <code>rc.xml</code> file</li> <li>Add a new xdg-autostart script. This will eventually end up in the   PyXDG distribution hopefully, but it is included in Openbox for now.   This script runs things based on the freedesktop.org autostart   specification. You can have it run GNOME, KDE, ROX, or XFCE specific   things if you want. The new default system-wide <code>autostart.sh</code> script   runs it automatically</li> <li>Update the default <code>menu.xml</code> to include a lot of common apps</li> <li>Fix white font shadows (negative shadowtint)</li> <li>Update the <code>autostart.sh</code> to find <code>gnome-settings-daemon</code> correctly, as   the GNOME people have moved it to libexec</li> <li>Fix focus possibly getting stolen when using the Focus action</li> <li>Drastically speed up rendering of Vertical and SplitVertical gradients</li> <li>Speed improvements also for Horizonal and Pyramid gradients</li> <li>Add new theme options, menu.overlap.x and menu.overlap.y options, that   let you independently control the horizontal and vertical position of   submenus</li> <li>Change <code>_NET_ACTIVE_WINDOW</code> messages to not change the current desktop,   but to bring the window to the current desktop instead. This is the   industry standard policy</li> <li>Use the pretty new openbox.png icon as the default window icon</li> <li>Allow matching per-application rules to windows by their window type   (normal, dialog, splash, etc). The default <code>rc.xml</code> has more details</li> <li>Add new Openbox-themed prompt windows. Use these prompt windows to ask   before killing off windows that aren't responding. This also means we   don't need to ping every window constantly forever</li> <li>Add a new <code>&lt;prompt&gt;</code> option to the <code>Execute</code> action. If this is set to a   string, a dialog will be shown with that string in it and \"yes\"/\"no\"   buttons. The command to be executed will only be run if the user   selects \"yes\" in the dialog</li> <li>Add a new <code>&lt;prompt&gt;</code> option to the <code>Exit</code> action, which is a boolean (not   a string). When true, Openbox will show a dialog confirming if you   want to exit. The default is to show the prompt</li> <li>Reduce Openbox's memory footprint and speed up rendering through the   use of a new icon cache, so that Openbox only needs to keep 1 copy of   an icon when 100 different windows share it</li> <li>Make Openbox menus have the \"menu type\" hint for compositors to see   and use</li> <li>Fix the <code>MoveResizeTo</code> action for negative coords (opposite edges)</li> <li>Fix key bindings getting lost if multiple bindings at the same level   could not be translated (Fixes VMWare causing Openbox keybindings to   stop working)</li> <li>Fix the resize popup box for terminal windows with a base size of 0   (show the right size values for urxvt terminals)</li> <li>Fix some off-by-one bugs with the edge growing/shrinking code</li> <li>Add new theme options for menu line separators: <code>menu.separator.color</code>,   <code>menu.separator.width</code>, <code>menu.separator.padding.width</code>,   <code>menu.separator.padding.height</code></li> <li>Add <code>xfce-mcs-manager</code> to the default <code>autostart.sh</code>, and run it   automatically when <code>gnome-settings-daemon</code> is not present to have GTK   apps inherit settings from the XFCE configuration tools</li> <li>Make the send-to-desktop menu in the client-menu indicate which is the   current desktop for omnipresent windows, and don't close it if just   toggling omni-presence when ctrl-clicking</li> <li>Add a new SessionLogout action that logs out through the session   manager, when running Openbox within a session manager such as within   an GNOME/Openbox or KDE/Openbox session. The action includes a   <code>&lt;prompt&gt;</code> option which is similar to the <code>Exit</code> action's</li> <li>Add a new <code>gdm-control</code> command that lets you control gdm from within an   X session. The <code>gdm-control</code> lets you change GDM's behaviour for when   you end the current session. For instance, you can tell GDM to reboot,   and then immediately log out of the current session, and the computer   will be rebooted</li> <li>Show an information dialog when an error occurs for Openbox, such as   when the <code>Execute</code> action fails or when XML syntax errors are present in   the configuration files</li> <li>When making a window very narrow, don't draw buttons to the right of   the title on top of the ones on its left.</li> </ul>"},{"location":"Changelog/#3461","title":"3.4.6.1","text":"<ul> <li>Updated Clearlooks theme</li> <li>Add the force=\"yes/no\" option for the per-app settings' <code>&lt;position&gt;</code> tag</li> <li>Raise and focus modal children and their direct parents together,   improved usability with direct modal transient windows</li> <li>Fix crash when using <code>&lt;raise&gt;</code> for <code>NextWindow</code> and there are no windows   to move focus to</li> <li>Add the <code>&lt;manageDesktops&gt;</code> option in the <code>rc.xml</code> <code>&lt;menu&gt;</code> section,   which toggles the \"Manage Desktops\" section appearing in the   <code>combined-client-list-menu</code></li> <li>Fix for menu headers showing the wrong text</li> <li>Fix for the <code>&lt;</code>focusLast<code>&gt;</code> behavior</li> <li>Treat modal direct children as one window with their parent consistently</li> </ul>"},{"location":"Changelog/#346","title":"3.4.6","text":"<ul> <li>Added Basque translation</li> <li>Updated French, Vietnamese German, Simplified Chinese, Russian,   Portuguese, Brasilian Portuguese, Norwegian, and Finnish translations</li> <li>New Clearlooks theme, updated by David Barr</li> <li>Updated the previous Clearlooks theme, and renamed it to Clearlooks-3.4</li> <li>Allow dialog type windows to go fullscreen (Fixes Kpdf)</li> <li>Remove the extraneous top border for undecorated windows while maximized</li> <li>Fixes for keyboard modifiers (Alt-tab dialog getting stuck on screen   for some users)</li> <li>Automatically catch changes to the keyboard map and reconfigure the   key bindings on the fly</li> <li>Fix focus moving incorrectly sometimes with focus under mouse enabled</li> <li>Make default configuration focus the desktop when you right click</li> <li>Add the <code>&lt;bar&gt;</code> and <code>&lt;raise&gt;</code> options for all window cycling actions,   allowing you to have your target window temporarily raised above all   others, and to turn the focus target indicator bar off</li> <li>Improve the <code>LastDesktop</code> action to not remember desktops you skipped   across</li> <li>Ignore mouse clicks that are made on override-redirect (unmanaged) windows</li> <li>When opening a menu with a key binding, don't use the key binding to   run something in the menu</li> <li>Add a <code>&lt;monitor&gt;</code> option for window placement, which gives you the   option to place new windows on the active monitor, or the monitor   where the mouse is, instead of on any monitor (for xinerama multihead setups)</li> <li>Add options for placing the window move/resize coordinate popu window   in a fixed position on screen, rather than relative to the window   being moved or resized</li> <li>Prevent the dock from auto-hiding completely offscreen if the theme   has no borders for it</li> <li>New icon</li> <li>Fix race condition when running things that want to grab the keyboard   (e.g. <code>gnome-panel-control --main-menu</code>)</li> <li>When dialog windows ask to not appear in the taskbar, still give them   focus in normal ways (fixes new GNOME session logout dialogs)</li> <li>Fix bug with resizing corners on certain parts of the window frame</li> <li>Ping applications to tell when they are running or have become frozen.   Show a [Not Responding] message in the title bar of windows which   are frozen.</li> <li>When closing a window which is [Not Responding], kill the window's   process if it is running on the same machine as Openbox. Otherwise,   just disconnect the window from the X display. A second attempt to   close a [Not Responding] window will kill it forcefully (kill -9).</li> <li>Fixes for internal timers</li> <li>Add a <code>&lt;wmclass&gt;</code> option for the execute action's <code>startup-notification</code>.   This lets you tell Openbox that the application will map a window with   the specified class - for applications that do not support   <code>startup-notification</code> natively.</li> <li>Fix for empty dock taking up space onscreen after a reconfigure</li> <li>Reduce Openbox's additional memory footprint per-window and per-menu</li> <li>Faster horizontal gradient rendering</li> <li>Don't deiconify windows that aren't allowed to be directly iconified   on restart (eg toolbars), as they can be iconified by other means</li> <li>Improve support for fullscreen windows in xinerama (TwinView) and   multiple-screen setups</li> <li>Add a --config-file command line option, to specify an alternate   configuration file path</li> </ul>"},{"location":"Changelog/#345","title":"3.4.5","text":"<ul> <li>Added Hungarian translation</li> <li>Updated Finnish, Russian, German and French translations</li> <li>Fixed some very minor memory leaks</li> <li>Hide the desktop popup when showing the focus popup</li> <li>Fix a crash when trying to access the More... menu of <code>client-list-combined-menu</code></li> <li>Fix the coordinate popup only showing up on the first monitor in xinerama</li> <li>Add <code>--exit</code> to exit the currently running openbox instance</li> </ul>"},{"location":"Changelog/#344","title":"3.4.4","text":"<ul> <li>Updated Traditional Chinese translation</li> <li>Updated Norwegian translation</li> <li>Fix for <code>MoveToEdge</code> skipping edges sometimes</li> <li>Let you specify the vertical and horizontal padding independently in themes</li> <li>Fix so that if you select an omnipresent window on another desktop in   the client list menus, it will go to that desktop</li> <li>Make the <code>GrowToEdge</code> action shrink once there is no more room to grow,   similar to in 3.4.2, but shrinking to edges as well</li> <li>Move the <code>Send To</code> and <code>Layers</code> submenus to the top of the client menu</li> <li>Fix race causing omnipresent windows to lose focus when switching   desktops very quickly</li> <li>Don't focus new windows on other desktops if they aren't related to   the currently focused window</li> <li>Add corner resizing areas in the inner client border (Fixes themes such as Onyx)</li> <li>New focus stealing prevention that is smart and not intrusive and not annoying</li> <li>Revert a small change in 3.4.3 that caused windows to be placed funny   in <code>Smart</code> placement when there was a dock or something on the side of the screen</li> <li>Show a notification when switching desktops</li> <li>Fix for delayed <code>focus-follows-mouse</code> interrupting move/resize or menus</li> <li>Make screen edge warp keep warping without having the move the mouse 1 pixel</li> <li>Fix for resizing terminals in the top/left sides getting a little confused</li> <li>Fix to keep oldschool (Non-EWMH) fullscreen windows from being moved   and resized inside of the struts (Fixes Acroread)</li> <li>Accept the <code>&lt;command&gt;</code> option for the Restart command, similar to the <code>Execute</code> action</li> <li>Don't make clicking on dock apps sometimes act like clicking on the   root window (Don't propogate button events up)</li> <li>Fix a bug introduced in 3.4.3 which caused the Windows key   as a modifier for bindings to not work properly</li> <li>Let windows skip across monitors in a Xinerama setup when using   <code>MoveToEdge</code> or Shift-arrow in an interactive move</li> <li>Make move and resize take the dock into account for resistance</li> <li>Raise new windows when it makes sense, when they aren't being focused</li> <li>Change default config to use click events for mouse wheel bindings instead of presses</li> </ul>"},{"location":"Changelog/#343","title":"3.4.3","text":"<ul> <li>Add Ukrainian translation</li> <li>Updated translations:</li> <li>Japanese, Dutch, Polish, Italian, Estonian, German, Portuguese,     Vietnamese, Finnish, Czech, Arabic, Spanish, Swedish, French</li> <li>Improve focus fallback - don't fallback to windows you can't focus   cycle (Alt-Tab) to</li> <li>Don't show the client border for undecorated windows when <code>keepBorder</code> is on,   just the outer border</li> <li>Some improvements in the smart placement to help it find a place more often.   This needs more work still.</li> <li>Don't focus windows that appear under the mouse in mouse-focus mode   unless <code>underMouse</code> is enabled</li> <li>Don't move focus when the window under the pointer iconifies unless   <code>underMouse</code> is enabled</li> <li>Respect min/max window sizes when a window is fullscreened or   maximized. This fixes problems experienced with maximizing vnc windows</li> <li>Don't <code>XUngrabKeyboard</code> unless we need to</li> <li>Correct calculations for the menu header width, so that they are not   ellipsized unnecessarily</li> <li>Advanced support for partial struts. When you maximize a window it   will now only use the struts it needs to. This can greatly improve   Xinerama functionality.</li> <li>Fixes for how the dock is placed in certain positions on screen (off   by 1 errors)</li> <li>New default bindings:</li> <li>don't unshade when clicking on the titlebar</li> <li>raise when unshading with the scrollwheel</li> <li>lower when shading with the scrollwheel</li> <li>Don't show the top resize area in the titlebar when a window is shaded</li> <li>Optimize rendering of window decorations</li> <li>Optimize <code>splitvertical</code> gradients - no more malloc/free during render</li> <li>Let the theme specify all colors for a <code>splitvertical</code> gradient with the   new <code>.splitTo</code> theme elements</li> <li>Improve decorations for maximized windows. Don't draw the side borders   in the titlebar.</li> <li>Don't resist against desklet windows (below layer + skip taskbar)</li> <li>New actions for dynamically adjusting your desktop workspaces:</li> <li><code>AddDesktopLast</code>, <code>RemoveDesktopLast</code></li> <li><code>AddDesktopCurrent</code>, <code>RemoveDestopCurrent</code></li> <li>New <code>&lt;center&gt;</code> option for smart placement (default is on)</li> <li>Fix <code>MoveToCenter</code> in Xinerama (TwinView) setups</li> <li>Let you lower a window without lowering its children or siblings</li> <li>Don't set the default Openbox icon on child windows, let them inherit   the icon from their parents</li> <li>Fix Onyx themes - fade out disabled buttons</li> <li>Don't auto-resize windows to fit on screen if they are UserSpecified   Size or Position</li> <li>Don't activate windows which raise themselves anymore. It was a nice   thought, but it caused too much problems</li> <li>Rewrite of the actions subsystem</li> <li>Removed deprecated actions:</li> <li><code>ShowDesktop</code>, <code>UnshowDesktop</code> (Use <code>ToggleShowDesktop</code>)</li> <li><code>ResizeRelativeVert</code>, <code>ResizeRelativeHorz</code> (Use <code>ResizeRelative</code>)</li> <li>Combined the <code>MoveFromEdge\\*</code> actions with <code>MoveToEdge\\*</code> actions, and   removed the <code>MoveFromEdge\\*</code> action names.</li> <li>Switch desktops when moving a window and you drag it to the edge of the screen   (added the <code>&lt;screenEdgeWarpTime&gt;</code> option for this)</li> <li>Add actions to add/remove the last desktop in the client list menus</li> <li>Use startup notification when launching ObConf in the default root menu</li> <li>Remove the desktop switching dialog, as it confuses people and they   don't know how to turn it off to switch desktops instantly. Some other   incarnation may return in the future.</li> <li>Add optional <code>&lt;finalactions&gt;</code> option for <code>NextWindow</code>, <code>PreviousWindow</code>,   <code>DirectionalFocus\\*</code>, and <code>DirectionalTarget\\*</code> actions</li> <li>Don't focus new helper windows unless they are alone in their group.   This fixes <code>gucharmap</code></li> <li>Fancy keyboard window moving:</li> <li>Shift-arrow will move the window to the next edge</li> <li>Control-arrow will move the window by only 1 pixel</li> <li>Arrow will move the window by a larger number of pixels</li> <li>Fancy keyboard window resizing:</li> <li>The first arrow will choose an edge to resize (then you can grow or     shrink the window on that edge)</li> <li>Hitting an arrow perpendicular to your selected edge will choose a     different edge to resize</li> <li>Shift-arrow will grow/shrink the window to the next edge</li> <li>Control arrow will grow/shrink the window by only 1 pixel</li> <li>Arrow will grow/shrink the window by a larger number of pixel</li> <li>Timeout when synchronously resizing a window so you can still resize   busy or dead application windows</li> <li>Let you specify keyboard shortcuts in your root menus with <code>_</code>.   Such as <code>label=\"XTe_rm\"</code> would make <code>r</code> the shortcut key.</li> <li>Fixes for placing windows with per-app settings:</li> <li>you can now place windows relative to any edge of the screen instead     of only the top left. (-0 uses the far edge, +0 uses the near edge.     You can use --0 and +-0 to specify negative numbers.)</li> <li>fix bug with windows being placed far off-screen occasionally</li> <li>allow you to place windows partially outside of the screen</li> <li>let per-app settings override program-specified positions (but not     if it is user-specified)</li> <li>Add user-specified margins to the configuration file</li> <li>Fix for transient windows in groups with transient windows of the   group transients. That wasn't supposed to be legible. i.e. 2 group   transients and 1 direct transient for one of the group transients.</li> <li>Don't include child/parent windows in tests for being occluded or   occluding other windows, since you can't raise/lower above/below them.   This fixes the raiselower action for windows which have children.</li> <li>Reduce the size of the middle gradient in <code>splitvertical</code> gradients.   This makes the split harder than it was in 3.4.2</li> <li>Don't include debian/ dir in releases</li> <li>Add resize bindings for the edges to the default hardcoded bindings</li> <li>Fix focus cycle indicator positioning for some windows (i.e. OpenOffice)</li> <li>Add the <code>MoveResizeTo</code> action. This is very xinerama aware!   It also lets you move a window to any edge of any screen.</li> <li>Make actions that look for edges include the dock's edges (e.g. <code>MoveToEdge</code>)</li> <li>New preferred option for the <code>Execute</code> action is <code>&lt;command&gt;</code>   instead of <code>&lt;execute&gt;</code> but the old one will still work.</li> <li>Fix for moving windows partially offsceen causing them to jump far away</li> <li>Fix for windows which are not on any monitor, to keep them on screen   partically too</li> <li>Require <code>libstartupnotification</code> 0.8 in configure   (we use stuff that was not around in some earlier versions)</li> <li>Grab the server when mapping windows to avoid race conditions in other programs   (getting <code>MapNotify</code> before you are visible)</li> <li>Handle case gracefully when <code>ConfigureRequest</code> for restacking specifies   a sibling which we aren't managing</li> <li>Use <code>KeyRelease</code> to run things from Openbox menus, so that the release   does not go to the focused window (causing the new window to not get focus)</li> <li>Add new actions for controlling window decorations:</li> <li><code>Decorate</code>, <code>Undecorate</code></li> <li>Fix so that the values for per-app settings are not case sensitive</li> <li>Fix crash with very small windows</li> <li>Fix resize resistance for windows with aspect ratio limits</li> <li>Let you resize windows with aspect ratio limits in the vertical directions</li> <li>Fix rare crash when menu is hidden while browsing it</li> <li>End move/resize more cleanly when focus moves during a move/resize</li> <li>Don't focus new windows when browsing a menu or moving/resizing a window,   just flash the window instead, so that the menu/move/resize doesn't have to cancel</li> </ul>"},{"location":"Changelog/#342","title":"3.4.2","text":"<ul> <li>Add ability to set the bevel strength in themes</li> <li>Fix for <code>focusLast</code> with omnipresent windows</li> <li>Cache pipe menus while the menus are open</li> <li>Allow non-interactive directional focus key bindings</li> <li>Change how nested interactive key bindings work   (it stays in the key chain, like chroot, until you end the interactive action)</li> <li>Fix for gtk apps trying to get focus - mostly nullify focus stealing prevention   (Fixes Tilda)</li> <li>Send <code>ConfigureNotify</code> always on <code>ConfigureRequest</code>   (Previous emacs fix makes this possible now)</li> <li>Fix <code>RelativeResize</code> action for right/bottom edges</li> <li>Remove SCIM from the default <code>autostart.sh</code> - it has caused problems   with some (buggy) panels, such as pypanel</li> <li>Fix the titlebar changing to non-focused when iconifying a window with animation</li> <li>Use the new osd theme hints for the dock, rather than the titlebar hints</li> </ul>"},{"location":"Changelog/#341","title":"3.4.1","text":"<ul> <li>Add Vietnamese translation</li> <li>Add Japanese translation</li> <li>Keep new transient windows from not getting focus when any related   window has focus already</li> <li>Change behavior of <code>underMouse</code> option - make focus go under the mouse   when no window has focus anymore, rather than to the last used window</li> <li>Make on-screen display dialogs (such as the Alt-Tab dialog) appear on   the active monitor when using Xinerama (a.k.a. TwinView)</li> <li>Fix for window stacking - let you lower sibling transient windows behind eachother</li> <li>Fix directional focus actions when used without a dialog</li> <li>Fix race that could prevent ObConf from setting the desktop names correctly</li> <li>Add new theme options:</li> <li><code>window.active.button.toggled.image.color</code> has been split into:<ul> <li><code>window.active.button.toggled.unpressed.image.color</code></li> <li><code>window.active.button.toggled.pressed.image.color</code></li> <li><code>window.active.button.toggled.hover.image.color</code></li> </ul> </li> <li><code>window.inactive.button.toggled.image.color</code> has been split into:<ul> <li><code>window.inactive.button.toggled.unpressed.image.color</code></li> <li><code>window.inactive.button.toggled.pressed.image.color</code></li> <li><code>window.inactive.button.toggled.hover.image.color</code></li> </ul> </li> <li><code>window.active.button.toggled.bg</code> has been split into:<ul> <li><code>window.active.button.toggled.unpressed.bg</code></li> <li><code>window.active.button.toggled.pressed.bg</code></li> <li><code>window.active.button.toggled.hover.bg</code></li> </ul> </li> <li><code>window.inactive.button.toggled.bg</code> has been split into:<ul> <li><code>window.inactive.button.toggled.unpressed.bg</code></li> <li><code>window.inactive.button.toggled.pressed.bg</code></li> <li><code>window.inactive.button.toggled.hover.bg</code></li> </ul> </li> <li>Add new Onyx and Onyx-Citrus themes</li> <li>Updated Mikachu theme using new theme options</li> <li>Improvements to <code>splitvertical</code> gradients - Add a small gradient in the   middle between the upper and lower gradients</li> <li>Fix another emacs event storm, don't configure the window when it sets   its <code>WM_NORMAL_HINTS</code> unless we have to</li> <li>Fix for focus cycling to helper windows - Don't count dialogs as a sibling,   so they don't stop you</li> <li>Allow the use of negative numbers in per-app settings position to   place a window relative to the right/bottom edges of your monitor   (taking the struts (panels) into account) (similar syntax to X geometry options)</li> <li>Fix focus moving irrationally when <code>focusLast</code> was off</li> </ul>"},{"location":"Changelog/#340","title":"3.4.0","text":"<ul> <li>Add Indian Bengali translation</li> <li>Updated Italian translation</li> <li>Small updates to Czech, Estonian, Norwegian, and German translations</li> <li>Removed out-of-date Japanese translation (ja.po)</li> <li>Removed out-of-date Croatian translation (hr.po)</li> <li>Allow parentrelative theme textures to have borders, bevels and interlacing</li> <li>Add new theme elements: <code>window.active.title.separator.color</code> and   <code>window.inactive.title.separator.color</code></li> <li>Add new theme elements: <code>osd.border.width</code>, <code>osd.border.color</code>, <code>osd.bg</code>,   <code>osd.label.bg</code>, <code>osd.label.text.color</code>, <code>osd.label.text.font</code>,   <code>osd.hilight.bg</code>, <code>osd.unhilight.bg</code></li> <li>Improvements for how on-screen-display dialogs are drawn with different themes</li> <li>Add new <code>underMouse</code> focus option</li> <li>Rename new theme element <code>menu.items.activedisabled</code> to   <code>menu.items.active.disabled</code> for consistency with other elements</li> <li>Improvements to smart placement - especially with xinerama (Twinview)</li> <li>Fixes for focus with omnipresent windows - Allow focus to fallback to   them except during desktop switches (other mechanisms exist for that)</li> <li>Fix for putting child windows (transients) on all desktops</li> <li>Changes to how Shift/Control/CapsLock are used</li> <li>Fix focus fallback when windows are not visible (showing the desktop,   or iconic windows)</li> <li>Fix bug #3196 - Unable to alt-tab away from full-screen windows</li> <li>Fix crash in parsing empty xml fields</li> <li>Fix left and right contexts resizing the wrong way in the example   mouse focus config file</li> <li>Fix so dock doesn't auto-hide when the mouse is inside it (over top of a dock app)</li> <li>Allow new utility windows to gain focus like normal windows</li> <li>Add workarounds for Java Swing applications (Extra <code>ConfigureNotify</code> events)</li> <li>More fixes for modal window usability (Deiconify the modal window when   you try to focus its parent)</li> <li>Fixes to focus tracking, especially with iconify animation</li> <li>Changes to <code>libobrender</code>'s API for ObConf 2.0 (<code>RrThemeNew</code>)</li> <li>Check for <code>libxml</code> &gt;= 2.6.0 when compiling</li> <li>Fix for Openoffice windows (Static window gravity)</li> <li>Fix for hovering over window buttons while a menu is open</li> <li>Make the Escape key close all levels of a menu, not just one</li> <li>Change default drag threshold to 8px (Same as in XSettings)</li> <li>Fixes for windows restacking with <code>TopIf</code>, <code>BottomIf</code>, or <code>Opposite</code> modes.   Only compare with valid windows</li> <li>Fix for actions which find other window edges. Find all windows,   and only windows which are on the right desktop</li> <li>Improve <code>RaiseLower</code> action (Not lower when it doesn't need to move the window)</li> <li>Fix for the menu <code>hideDelay</code> (Don't hide immediately when you click to   open the menu), make it work reliably</li> <li>Make <code>focusLast</code> default to true when not present in the config file</li> </ul>"},{"location":"Changelog/#33995-34-preview-release","title":"3.3.995 (3.4 preview release)","text":"<ul> <li>Fix bug introduced in 3.3.993 that prevented you from raising focused   windows above fullscreen windows</li> <li>Fix bug introduced in 3.3.993 that made the desktop window keep focus   when changing desktops</li> <li>Add Arabic translations</li> <li>Added Control-Alt-Up/Down bindings to the mouse focus example <code>rc.xml</code></li> <li>Don't raise on clients in the client context in the mouse focus example <code>rc.xml</code></li> <li>Fixes for when to focus new windows - improve keeping transient   windows from stealing focus, and allow new windows to get focus when   any relative window is focused</li> <li>Fixes for frame decorations layout</li> <li>Fixes for forcing window sizes to fit on the screen. Don't resize   windows if they are a user-specified size (USSize) or if they are   non-normal windows. (Fix Rox pinboard mapping across multiple monitors)</li> <li>Centre window icons when they are not square</li> <li>Fixes for Java windows behaving badly - Java makes all kinds of   non-standard-compliant assumptions which we are forced to meet</li> <li>Changed startup notification timeout from 30 to 20 seconds</li> <li>Fix possible crashes and misbehaviors with new focus cycling dialogs</li> <li>Recreate enter events when Press mouse actions move windows   (e.g. <code>Lower</code> action) for <code>focus-follows-mouse</code></li> <li>Update Slovak translation</li> <li>Highlight the first menu entry when there is a separator/header at the top</li> <li>Only highlight the first menu entry when the menu is opened with a key binding</li> <li>Fix crash when you press enter with nothing selected in the menu</li> <li>Fix for ignoring an unmap event after restart</li> <li>Fixes for setting the clients' colormaps</li> <li>Change <code>focusLast</code> option behavior to what it was in 3.3.1.   It only affects changing desktops.</li> <li>Add comments to the default <code>rc.xml</code> files about the various focus options</li> <li>Fix focus bug where a window had the keyboard grabbed when it unmapped   (Firefox gmarks extension)</li> <li>Update Catalan translation</li> <li>Fix alignment of the titlebar elements when the window icon is placed   to the right of the label</li> <li>Improve placement of child (transient) windows.   When their parent is omnipresent, open the child on the current desktop only.</li> <li>When a window has modal children on another desktop and you try to   focus it, bring the modal child to the current desktop to focus it instead</li> <li>Let you focus cycle to windows with a modal child on another desktop</li> <li>Fix for not seeing windows change their partial strut</li> <li>Give iconified windows a faded icon in the focus cycling (Alt-Tab)   dialog, and in the client list menus</li> <li>Make it more difficult to select items by accident in parent menus   when it changes direction. Moving the mouse only selects menu entries   for a few levels of open menus. Mouse clicks will select menu entries further down.</li> <li>Add Simplified Chinese translation</li> <li>Set the current theme in the <code>OB_THEME</code> root property for other applications</li> <li>Notify <code>ksplash</code> when we have started up if <code>dcop</code> is installed</li> <li>Allow you to resize the window on the client padding as well as the outer border</li> <li>Fix to show the focus cycle indicator when focus cycling   and there is only 1 valid target</li> <li>Centre splash screens on one monitor</li> <li>Don't centre parent-less utility/menu/toolbar windows on the screen</li> <li>Remove the bottom decorations for fully maximized windows</li> <li>Fix crash when reconfiguring and no themes can be found</li> </ul>"},{"location":"Changelog/#33994-34-preview-release","title":"3.3.994 (3.4 preview release)","text":"<ul> <li>Fix a bug introduced in .993 that prevented you from switching   desktops and caused general mayhem</li> </ul>"},{"location":"Changelog/#33993-34-preview-release","title":"3.3.993 (3.4 preview release)","text":"<ul> <li>Update for Russian translation</li> <li>Added Dutch translation</li> <li>Fix for choosing badly sized icons from the window for the window   cycling dialog (and other things). (Fixes Pidgin icon)</li> <li>Open child (transient) windows on the current desktop if they don't   have a direct parent, or if the parents are not all on some other   desktop. (Fixes Pidgin and Gimp dialogs appearing on the wrong   desktop)</li> <li>Make windows fit within the available space when they are first   created, if they are not user-positioned. (Fix <code>xpdf</code> making itself   bigger than the space inside the struts, and hiding behind them).</li> <li>Don't let child (transient) windows steal focus when the situation is   ambiguous</li> <li>Fix bevels and borders display in the titlebar</li> <li>Set the <code>_NET_ACTIVE_WINDOW</code> hint properly, when nothing is focused   (This is the proper fix for libwnck pagers.)</li> <li>Fallback focus immediately during iconify animation in all cases   (was missing <code>RevertToParent</code> case)</li> <li>Fix new frame elements being given 0 sizes for very small windows</li> <li>Send iconified windows to the bottom of the focus order so you can   Alt-Shift-Tab to get back what you just iconified.   This makes things more predictable.</li> <li>Show the hostname for remotely run programs in iconified titles</li> <li>Stop focus flicker when sending windows to a desktop and following them,   and when changing desktops with an omnipresent window focused</li> <li>Empty desktop names in the configuration file are not used, so you can   set a name on the second desktop without having to set one on the first</li> <li>Make control key work for menu accelerators like it does for mouse   clicking and hitting enter</li> <li>Add C-A-Up/Down mouse bindings to switch desktops,   similar to the C-A-Left/Right/Up/Down keyboard bindings</li> </ul>"},{"location":"Changelog/#33992-34-preview-release","title":"3.3.992 (3.4 preview release)","text":"<ul> <li>Don't move mouse focus when the mouse is over the focus cycling dialog</li> <li>Fixes for positioning of frame decoration elements</li> <li>Update for Brazilian Portuguese translation</li> <li>Improvements in how decorations respond for maximized windows.   (If they can't be resized don't \"hide\" the resizing contexts)</li> <li>Updated Italian translation</li> <li>Added Czech translation</li> <li>Fix for applications that do weird things with modal windows   (Make sure you can focus cycle to them)</li> <li>Updated Spanish translation</li> <li>Fix for programs using the old WM-spec, and not setting unused fields   to 0 in <code>_NET_ACTIVE_WINDOW</code> messages (Rox pinboard)</li> <li>Fixes for default <code>rc.xml</code> configuration file. Updated comments and   comment out the applications section in an xml compatible way.</li> <li>Update for Portuguese translation</li> <li>Fix support for window gravity (eg xterm -geometry -0+0)</li> <li>Fix for libwnck with iconify animation (Unmap the parent of the client's window)</li> <li>Force the top left corner of new windows onto the screen area,   if the position wasn't requested by the user   (Fix <code>xpdf</code> and others hiding their titlebar under a panel)</li> <li>Fix for determining text geometry from Pango</li> <li>Save the desktop layout and names in the session, and restore them on next log in.</li> <li>The <code>&lt;desktop&gt;</code> section from the configuration file is only used for defaults,   and so is only applied at the start of a new log-in.   (Use ObConf 1.6.2 to change the config file for these options,   and have them set immediately, if you don't use a session manager to save them.)</li> <li>Fix updating and crashing in the old split client list menu</li> <li>Translate the default desktop names</li> <li>Update Taiwanese Chinese translation</li> <li>Less restrictions of behavior based on window type   (Let you maximize dialogs and utility windows)</li> <li>Fix for focus tracking when Press mouse actions are used</li> <li>Fix bug which let the openbox-*-session scripts take command-line arguments</li> <li>Better detection of legacy fullscreen windows vs. undercorated windows   that the user has maximized</li> </ul>"},{"location":"Changelog/#33991-34-preview-release","title":"3.3.991 (3.4 preview release)","text":"<ul> <li>Added Brazilian Portuguese translation</li> <li>Added a rough Italian translation</li> <li>Added Estonian translation</li> <li>Update Polish translation</li> <li>Make focus stealing prevention a little less intrusive, especially   with default config</li> <li>Updates for Swedish translation</li> <li>Fixes for decorations of maximized windows</li> <li>Fix so that clicking in the corner of a maximized window presses the button</li> <li>Don't reload the session and reapply it when restarting</li> <li>Fix for losing the original size of a window that mapped with   maximized state (or on restart)</li> <li>Let you move splash type windows</li> <li>Fix for window placement using wrong dimensions</li> <li>Stop xemacs <code>ConfigureNotify</code> storm</li> <li>Fix bug stopping panels from moving themselves off-screen to hide   themselves</li> <li>Fix for GNOME/Openbox and openbox-gnome-session to use a new session name,   because GNOME won't let you replace the window manager in the saved session</li> <li>Don't restore session state when multiple windows have the same identifiers,   because we can't tell them apart then (Firefox/Thunderbird)</li> <li>Small fixes to build system to make it more reliable</li> <li>Fix for what manpage files are distributed in the source code,   so they will not be pre-built with the wrong info</li> <li>Fix pkg-config files for compiling things against Openbox libraries</li> </ul>"},{"location":"Changelog/#33990-34-preview-release","title":"3.3.990 (3.4 preview release)","text":"<ul> <li>Wildcard matching for per-application (per-window) settings. Let you   match multiple rules for a window. (Props to Mark Pustjens for code to   do this.)</li> <li>Added startup notification support to the menus and key/mouse bindings   with <code>&lt;startupnotify&gt;</code>. It's an option for execute actions.</li> <li>New combined client menu, accessed with   <code>&lt;action name=\"ShowMenu\"&gt;&lt;menu&gt;client-list-combined-menu&lt;/menu&gt;&lt;/action&gt;</code></li> <li>No menu titles - instead added separators with labels to be used as   menu headers anywhere in menus</li> <li>Improved client menu - placement, the options in it, and added an icon   for \"All Desktops\"</li> <li>Keyboard shortcuts in menus, by highlighted letter or by the first letter</li> <li>Menus dont jump around, are always placed on screen</li> <li>Menus larger than can fit on the screen are broken into a submenu at   the bottom titled \"More...\"</li> <li>Disabled menu items can be selected now (not used though, of course)</li> <li>Using ()'s instead of a line separator to signify iconified windows in   the client list menus</li> <li>New Root context for mouse bindings</li> <li>New \"alt-tab\" focus switching dialog</li> <li>openbox-session command and log-in option which provides   autostart capability.</li> <li>SCIM support in the default Openbox session launched by the <code>openbox-session</code> command</li> <li>Many code paths made significantly faster.</li> <li>Sections of code rewritten to be more reliable, such as session   save/restore and input focus handling</li> <li>Handle the X server's clock going backwards, without locking up.   Sometimes the server can still lock up though, it is not recommended to do this!</li> <li>Better handling of window types such as docks, utility windows,   tool bar windows. Clicking to focus these windows is done more intelligently.   Dock windows no longer get focus when you click them,   so that you don't have focus flickering when you use a dock window with a taskbar.</li> <li>Better language support through Pango, which is now mandatory,   and the code for Pango has been greatly improved and optimized.</li> <li>Support for windows that use true 32-bit transparency</li> <li>Resize grips (with mouse binding contexts)   for the top, left, and right of the window frame</li> <li>Smarter about keeping windows on the screen without invading user's capabilities</li> <li>Add <code>MoveFromEdge*</code> actions corresponding to <code>MoveToEdge*</code>   but aligns far edges instead of near edges,   so if you have two overlapping windows you can easily put them side by side.</li> <li>Better choice of mouse cursors for startup notification</li> <li>Focus stealing prevention</li> <li>Improve window placement across multiple Xinerama monitors</li> <li>Support 8-bit truecolor visuals (such as in <code>vncserver</code>)</li> <li>Better, more friendly support for omnipresent windows</li> <li>Full support for EWMH 1.4-draft2</li> <li>Iconify/restore animation !</li> <li>Improved support for running openbox with multiple screens   (non-xinerama) - won't steal focus from other screens,   and let you focus a screen by clicking on the desktop (root window).</li> <li>Support for more cursors through XCursor, means that startup   notification can use a pointer+watch cursor if you are using an XCursor theme</li> <li>Fully maximize terminal windows (and any resized-by-increment window)</li> <li>Show the hostname of clients running on remote computers in the titlebar</li> <li>Add <code>&lt;panels&gt;</code> and <code>&lt;desktop&gt;</code> options to <code>NextWindow</code>, <code>PreviousWindow</code>,   <code>DirectionalFocusNorth</code> etc..</li> <li>Synchronize resizing with the application when possible</li> <li>Smarter subdivision of windows into 9 sections for resizing</li> <li>Set default icon on windows so applications can agree on an icon</li> <li>Better support for programs that are on more than one desktop   (multiple firefox windows for example) - move to the desktop when   you're using the application and it opens a window on another desktop.</li> <li>Chrooted key chains, and key quoting through chroots</li> <li>New BreakChroot action to break out of the current chroot</li> <li>New keychains popup, to show where you are in a keychain</li> <li>Improved show-desktop mode. When you open a new window,   the old windows are not all restored</li> <li>Add <code>&lt;allDesktops&gt;</code> option to <code>NextWindow</code> and <code>PreviousWindow</code>.   The desktop name will be shown in the focus cycling popup</li> <li>Dynamically size the window and desktop dialogs. Desktop layouts that   aren't horizontal look better in the desktop cycling dialog.</li> <li>Support for legacy fullscreen applications (that don't use EWMH) such as VLC</li> <li>Session support for old clients that do not use the session management protocol</li> <li>Desktop setup is only changed on startup, so as to not overwrite   settings from other apps like pagers</li> <li>Take advantage of ksmserver (KDE Session Manager) features</li> <li>KDE/Openbox and GNOME/Openbox options for display manager GDM/KDM.   Use <code>openbox-gnome-session</code> and <code>openbox-kde-session</code> to run a GNOME or KDE   session with Openbox as the window manager.</li> <li>Titlebar buttons autohide when hiding won't move other buttons   (removed the <code>hideDisabled</code> option from config file)</li> <li>Support user time window hint, which is good for laptops power usage</li> <li>When legacy windows raise themselves, interpreate as wanting to be   activated. Makes Firefox more pleasant.</li> <li>Don't show handles on windows that cant resize for more extreme visual minimalism</li> <li>Let you move maximized windows between Xinerama monitors</li> <li>Improve application awareness of focus, e.g. Kopete and Firefox, so   they know when they are or aren't focused, and which window in their   application is focused</li> <li>Improvements in the distributed themes</li> <li>Add new Clearlooks and Clearlooks-Olive themes by John McKnight</li> <li>Fonts are no longer loaded from theme. They are loaded from the <code>rc.xml</code>   config file. Font shadow settings are still loaded from the theme though.   5 fonts to be set: <code>ActiveWindow</code>, <code>InactiveWindow</code>, <code>MenuHeader</code>,   <code>MenuItem</code> and <code>OnScreenDisplay</code></li> <li>Distributed theme names have been renamed with Capitalization</li> <li><code>menu.items.activedisabled.text.color</code></li> <li><code>menu.border.color</code>   (note that globbing might set these properties when you didnt mean to)</li> <li><code>window.active.border.color</code>   (note that globbing might set these properties when you didnt mean to)</li> <li><code>window.inactive.border.color</code>   (note that globbing might set these properties when you didnt mean to)</li> <li><code>menu.border.width</code></li> <li>Guarantee that titlebar buttons are even sized, so even sized icons   (button masks) will be centered</li> <li>Default titlebar button icons (as <code>xbms</code>) installed to <code>/usr/share/doc/openbox</code></li> <li>New mouse binding contexts <code>Left</code>, <code>Right</code>, <code>TLCorner</code>, <code>TRCorner</code> and <code>Top</code>.   These need bindings in config file to be useful.   Also new context <code>Bottom</code> which is synonym for <code>Handle</code>.</li> <li><code>W</code> is no longer hard coded to <code>Mod4</code>. It is now a shortcut for <code>Super</code>,   which is usually bound to <code>Mod4</code>. <code>xmodmap</code> will show your mapping.</li> <li>The per-app setting <code>&lt;head&gt;</code> has been renamed to <code>&lt;monitor&gt;</code></li> <li>Can use \"default\" for anything in per-app settings</li> <li>Removed <code>&lt;edges_hit_layers_below&gt;</code> option from config file</li> <li><code>--reconfigure</code> command line option</li> <li><code>--restart</code> command line option</li> <li>Closed bug #886 - Reference point for client-menu</li> <li>Closed bug #898 - Add option for OB2 style menu behaviour</li> <li>Closed bug #952 - Focus sometimes gets lost when closing windows</li> <li>Closed bug #1006 - duplicate window title numbering is so-so</li> <li>Closed bug #1080 - menus dont update when using ctrl to keep them open</li> <li>Closed bug #1082 - doing window stuff while changing focus is mad slow</li> <li>Closed bug #1106 - Openbox resize problems with Beep Media Player and   some websites using Mozilla</li> <li>Closed bug #1146 - minimized windows dont unminimize from <code>fspanel</code> if   <code>ob</code> restarted</li> <li>Closed bug #1409 - Window stacking is messed up when dealing with   multiple nested dialog boxes</li> <li>Closed bug #1526 - Incorrect handling of utility windows</li> <li>Closed bug #1846 - Patch for theme overrides</li> <li>Closed bug #1974 - Limit the number of resizes per second to make   window resizing smoother</li> <li>Closed bug #2060 - Apps disappear when using composite extension</li> <li>Closed bug #2221 - <code>_NET_WM_STATE_(ABOVE\\|BELOW)</code> is being inherited</li> <li>Closed bug #2250 - openbox ignores size request ?</li> <li>Closed bug #2251 - support for legacy \"fullscreen\"</li> <li>Closed bug #2254 - segfault in <code>render/render.c</code> on sendtodesktop [endian?]</li> <li>Closed bug #2255 - segmentation fault on 8-bit truecolor visual</li> <li>Closed bug #2258 - long menus truncated</li> <li>Closed bug #2311 - Does not display the pressed state while a button   in the frame is toggled</li> <li>Closed bug #2321 - <code>ResizeRelative</code> -up and -left makes window move   when at min_size</li> <li>Closed bug #2483 - Pinned windows raise to top on all desktops when   they become focused on just one desktop</li> <li>Closed bug #2491 - Client List by App instead of by Desktop</li> <li>Closed bug #2551 - Request to be able to cycle docks (e.g.</li> <li>Closed bug #2659 - Menu header display should be configurable</li> <li>Closed bug #2769 - temporarily chroot the keychain tree</li> <li>Closed bug #2841 - Changes to the keepborder option aren't applied   when reconfiguring</li> <li>Closed bug #2850 - Openbox gives black backgrounds to windows using   the new 'rgba' or 'argb' visual</li> <li>Closed bug #2865 - openbox 3.3 is not C89 compatible</li> <li>Closed bug #2872 - Focus issues with Eclipse and Firefox</li> <li>Closed bug #2878 - Openbox crash when used with vncserver</li> <li>Closed bug #2897 - Openbox shouldn't redraw the whole screen   everytime when minimizing windows.</li> <li>Closed bug #2898 - Patch adding advanced keyboard support in popup menus.</li> <li>Closed bug #2982 - tilda doesn't work propertly</li> <li>Closed bug #3034 - themeupdate.py seems to bee broken</li> <li>Closed bug #3045 - RrPaint in obrender should be split for easier use   by external apps</li> <li>Closed bug #3050 - 'syscrash' theme update</li> <li>Closed bug #3051 - When closing windows</li> <li>Closed bug #3053 - Updates de.po for German Localisation</li> <li>Closed bug #3059 - Feature Request: <code>NextWindowForAllWorkspaces</code></li> <li>Closed bug #3063 - <code>extensions_xinerama_screens()</code> leaks memory if Xinerama is enabled</li> <li>Closed bug #3064 - <code>slist_path_add()</code> might leak memory</li> <li>Closed bug #3068 - Multimonitor focus problems</li> <li>Closed bug #3081 - window doesn't appear</li> <li>Closed bug #3092 - Config parser expects wrong values of \"layer\" in   per-application settings</li> <li>Closed bug #3094 - smart placement should Ignore maximized windows</li> <li>Closed bug #3100 - Netwmpager is configured with layer = \"below\"   but OB is ignoring it</li> <li>Closed bug #3101 - Openbox won't compile on CentOS 4.4</li> <li>Closed bug #3102 - svn-6175 windows come not back in the foregroud</li> <li>Closed bug #3106 - Fullscreened mplayer loses focus when switching   to another desktop and back</li> <li>Closed bug #3108 - After revision 6437 the desktop dialog window stays on screen</li> </ul>"},{"location":"Changelog/#331","title":"3.3.1","text":"<ul> <li>Fix panels getting a border with <code>keepBorder</code> turned on</li> <li>Fix a crash in <code>mirrorhorizontal</code> when drawing a surface with width 1</li> </ul>"},{"location":"Changelog/#33","title":"3.3","text":"<ul> <li>Add a showDelay option for the dock.</li> <li>Fixed onscreen-keeping code which broke a bit in -rc2.</li> <li>Fix incorrect handling of window properties on 64 bit arches.</li> <li>Fix pixelsize being the same as size for pango, now it is correct.</li> <li>Fix drawing of icons taller than wide, eg gimp.</li> <li>Add a <code>mirrorhorizontal</code> gradient, like <code>horizontal</code> but mirrored in the   center and <code>splitvertical</code> which is like <code>vertical</code> but nonlinear in a fancy way.</li> <li>Translations for de, hr and zh_TW added.</li> <li>Add initial per-app settings support.</li> <li>Fix some outstanding issues with 64-bit support.</li> <li>Add an optional delay for displaying submenus so you can move the   mouse over some entries without flashing each submenu.</li> <li>Plug some minor memleaks and fix minor bugs.</li> <li>Changed algorithm for downscaling window icons.</li> <li>New themes!</li> <li>Disable support for <code>libstartup-notification</code> by default,   it doesn't seem to work well.</li> <li>Allow disabling of duplicate window numbering by option <code>titleNumber</code> in   theme section.</li> <li>Add <code>moverelative</code> and <code>resizerelative</code> actions.</li> <li>Option middle for menus that make submenus be centered instead of   aligned by the top edge to the parent entry.</li> <li>Fix transient (ie dialog) windows being placed offscreen if the parent   is close to the edge of the screen.</li> </ul>"},{"location":"Changelog/#33-rc2","title":"3.3-rc2","text":"<ul> <li>Fixed some typos and errors in <code>rc.xsd</code></li> <li>Add the <code>noStrut</code> option to the dock   (to allow maximizing windows over it), useful when it is not in the above layer.</li> <li>Fix transparent terminals not updating when using <code>ToggleDecor</code>.</li> <li>Yet more poking at the onscreen-keeping code, should now do the right thing always.</li> <li>Add an option to hide disabled buttons instead of showing them as disabled.</li> <li>Hopefully fixed all the remaining pango issues.   The new 1.10 release also fixes shadows again.</li> <li>I think the lib linking in Makefile.am is right now, please tell me if it isn't.</li> <li>Added a finnish translation and some minor updates to others.</li> <li>Fixed configure.ac so <code>--enable-pango</code> doesn't disable pango support   or the other way around, make enabled be default to get some extra testing.</li> </ul>"},{"location":"Changelog/#33-rc1","title":"3.3-rc1","text":"<ul> <li>Poked around a bit in the code that keeps windows onscreen,   if you are using xinerama, please let me know if things are better/worse/same.</li> <li>Add support for pango, disabled by default due to a bug in pango 1.8   that breaks shadows, it works fine with 1.6.x though.   Poke the pango developers here http://bugzilla.gnome.org/show_bug.cgi?id=169622   if you want this to be fixed.</li> <li>Made edge resist and <code>{Send|Move}ToEdge</code> not hit windows at layers below   the current one, add option to disable this behaviour.</li> <li>Fixed directional focus not getting trapped in omnipresent windows</li> <li>Fixed focus actions when bound to the mouse, normal focus cycle is   always linear and directional focus is totally disabled, it makes no   sense anyway, just move the mouse.</li> <li>Added an option for the <code>raise/lower/raiselower/unshaderaise/shadelower</code>   options called group that lets you bind stuff to <code>raise/lower</code> the whole   window group. yes</li> <li>Add various new actions. I haven't updated the web docs yet,   but I think I managed to get all of them listed in <code>rc.xsd</code>.</li> <li>Bugs 1783, 1812, 1863, 1905, 2005, 1957 fixed.</li> <li>Some translations added. (ca, no, pl, ru, fr)</li> </ul>"},{"location":"Changelog/#32","title":"3.2","text":"<ul> <li>Added spanish and swedish translations</li> <li>Changed \"Unnamed Desktop\" to \"Desktop n\" where n is the actual number   of the desktop</li> <li>Hopefully no more of the hanging X totally bug</li> <li>the fullscreen property now overrides aspect hints, all programs i've   tried that use it (mplayer and tvtime) handle the aspect internally anyway,   this just makes sure you have black borders all the way to the edge.   If this breaks anything for you, let me know.</li> <li>Added <code>M</code> as an alias for <code>Mod3</code> in the same manner that <code>W</code> is an alias for <code>Mod4</code></li> <li>Added probably too many options and actions</li> <li><code>ToggleDockAutohide</code> to toggle the autohide option at runtime,   doesn't save it to the config</li> <li><code>keepBorder</code> option to set if you want the 1-pixel border when you <code>toggleDecorations</code></li> <li>added <code>popupShow</code> and <code>popupPosition</code> to control where and when the   move/resize-popup is shown, these go in the resize section of the   config <code>popupPosition</code> can be <code>Top</code> or <code>Center</code>, <code>popupShow</code> can be <code>Always</code>,   <code>Never</code> or <code>Nonpixel</code> (this is the default).</li> <li>Added the <code>xorStyle</code> option to change the behaviour of menus along   the bottom edge, note that the default is true</li> <li><code>warpPointer</code> option in the menu section to control if the mouse cursor   is to be warped by openbox when the menu moves to keep on screen to   keep the cursor in the same place relative to the menu.   (I think i got that right)</li> <li>Added back the <code>focusLast</code> option (this controls what happens when you   change desktops and have <code>followMouse</code> on)</li> <li>Added an option to set which desktop to start on when you start   openbox, <code>firstdesk</code>, for example you might like to set it to 5 if you   have a 3x3 grid to start in the middle.</li> <li>I think that was everything, have fun</li> </ul>"},{"location":"Changelog/#31","title":"3.1","text":"<ul> <li>Added japanese translation (bug #1029)</li> <li>Closed bug #1060 (modal unfocused window should be placed above focused parent)</li> <li>Closed bug #1012 (Openbox stalls gnome session startup after <code>--replace</code>)</li> <li>Closed bug #1073 (The Desktop action doesn't work)</li> <li>Closed bug #1023 (<code>config_focus_raise</code> declared as <code>guint</code>)</li> <li>Closed bug #1019 (Strange behavior with focus:<code>followMouse</code> and <code>RaiseLower</code> action)</li> <li>Closed bug #1007 (use <code>g_snprintf</code> in <code>openbox/session.c</code> instead of <code>sprintf</code>)</li> <li>Closed bug #1001 (gimp crashes openbox)</li> <li>Closed bug #1005 (import -frame leaves windows in a temporary \"on   top\" state)</li> <li>Closed bug #881 (Programs started with X become zombies upon   shutdown.)</li> <li>Closed bug #1025 (desktopnext/previous and desktopleft/right dont quite get along)</li> </ul>"},{"location":"Changelog/#30","title":"3.0","text":"<ul> <li>Closed bug #908 (sometimes some weird grab is left)</li> <li>Closed bug #945 (xawtv overlay visible on every desktop)</li> <li>Closed bug #944 (remove restarting/reconfiguring messages from openbox.c)</li> <li>Closed bug #946 (use <code>g_strsplit</code> in <code>parse.c:split_paths()</code>)</li> <li>Closed bug #943 (consistent glib type (<code>gint</code>, <code>gchar</code>, etc.) usage)</li> <li>Closed bug #951 (stale openbox session files)</li> <li>Closed bug #947 (Sloppyfocus can yield two windows at the same time with focus (!))</li> <li>Closed bug #948 (Gets stuck in 'move' mode if mouse is let up while   dragged away from title bar)</li> <li>Closed bug #949 (dock above gnome panel behaviour)</li> <li>Closed bug #902 (Openbox raises gDesklets when clicked)</li> <li>Closed bug #904 (<code>ToggleMaximize{Horz|Vert}</code> dont always toggle)</li> <li>Closed bug #907 (window focus is not properly indicated)</li> <li>Closed bug #919 (Temporary raise window when alt tabbing)</li> <li>Closed bug #921 (focus rectangle stays on the screen after modifier release)</li> <li>Closed bug #925 (Invalid option: <code>--sm-save</code> &amp; <code>--sm-disable</code>)</li> <li>Closed bug #926 (problem with client-list-menu, destkop switching,   and sticky client)</li> <li>Closed bug #927 (disappearing windows, crash with I-merry theme)</li> <li>Closed bug #929 (crash (signal 11) when activating Reconfigure)</li> <li>Closed bug #940 (actions don't work on desktops with no client windows)</li> <li>Closed bug #943 (consistent glib type (<code>gint</code>, <code>gchar</code>, etc.) usage)</li> <li>Closed bug #957 (openbox crashes when exiting out of OpenOffice Impress)</li> <li>Closed bug #960 (look for dupes in xdg paths when setting up slists?)</li> <li>Closed bug #961 (Menu causes core dump)</li> <li>Closed bug #963 (wrapper for <code>mkdir()</code> in parse.c)</li> <li>Closed bug #964 (free GErrors in action.c, openbox.c)</li> <li>Closed bug #965 (add message for <code>chdir()</code> failure in openbox.c)</li> <li>Closed bug #966 <code>list-&gt;{next|prev}</code> to <code>g_[s]list_{next|previous}</code>,   <code>list != NULL</code> to <code>list</code></li> <li>Closed bug #971 (typo in code)</li> <li>Closed bug #974 (use <code>g_getenv()</code> in parser/parse.c)</li> <li>Closed bug #975 (<code>void</code> -&gt; <code>gpointer</code>)</li> <li>Closed bug #976 (use <code>g_strerror()</code> in openbox/session.c)</li> <li>Closed bug #978 (disable entry to go to desktop if it is the current)</li> <li>Closed bug #979 (request for version check in <code>ob</code> libraries)</li> <li>Closed bug #944 (remove restarting/reconfiguring messages from openbox.c)</li> <li>Closed bug #968 (<code>rc.xml</code> refers to a non-existant \"debian\" menu file)</li> </ul>"},{"location":"Changelog/#30-rc4","title":"3.0-rc4","text":"<ul> <li>Closed bug #921 (focus rectangle stays on the screen after modifier release)</li> <li>Closed bug #927 (disappearing windows, crash with I-merry theme)</li> <li>Fix crash when restoring a session with a maximized window</li> <li>Fix leak of RrColors in menus</li> <li>Closed bug #929 (crash (signal 11) when activating <code>Reconfigure</code>)</li> <li>Allow focus to be moved around by clients (for <code>WM_TAKE_FOCUS</code> to work   as it is meant to). This means fullscreen apps like <code>wine</code> and <code>bzflag</code> work now</li> <li>Reversed the default directions for the mouse wheel desktop switching actions</li> <li>Don't wrap around in the default keyboard desktop switching bindings</li> <li>Place parentless dialogs so they avoid always-on-top windows</li> <li>Ignore fullscreen windows in placing new ones</li> <li>Closed bug #940 (actions dont work on desktops with no client windows)</li> </ul>"},{"location":"Changelog/#30-rc3","title":"3.0-rc3","text":"<ul> <li>Closed bug #904 (ToggleMaximizeHorz &amp; Vert dont always toggle)</li> <li>Allow resizing of windows in only vertical/horizontal directions   (via Alt-MiddleClick-Drag with the default bindings)</li> <li>Added intelligence to window cycling and raise/lowering based on window types</li> <li>Closed bug #902 (Openbox raises gDesklets when clicked). This has the   side effect that panels which do not set the ABOVE state (most panels   curerntly around) will no longer be kept always on top. You can set   the ABOVE state yourself by using the client menu (Alt-RightClick in   the default bindings) and selecting the Always on top Layer</li> <li>Closed bug #907 (window focus is not properly indicated)</li> <li>Added a focus indicator during focus cycling that is always visible   instead of just moving the focus hilight around.</li> </ul>"},{"location":"Changelog/#30-rc2","title":"3.0-rc2","text":"<ul> <li>Closed bug #885 (<code>raiseOnFocus</code> is flawed)</li> <li>Closed bug #887 (Mouse-wheel scrolling only changes 1 desktop when   using \"dialog\" option)</li> <li>Closed bug #888 (some random coredump)</li> <li>Closed bug #889 (focus follow mouse not following)</li> <li>Closed bug #892 (<code>client_under_pointer()</code> doesn't check <code>DESKTOP_ALL</code>)</li> <li>Avoid the focus flicker when switching desktops</li> <li>Free the XML DOM trees properly, fixes mem leak</li> </ul>"},{"location":"Changelog/#30-rc1","title":"3.0-rc1","text":"<ul> <li>Closed bug #875 (<code>RaiseLower</code> fails to function on windows with dialogs)</li> <li>Added the option for moving dock apps around inside the dock.   (Closes bug #798)</li> <li>Made the \"Desktop\" action show the pager/desktop dialog</li> <li>Add the option to the <code>Desktop</code> and <code>Focus</code> switching actions</li> <li>No longer iconify fullscreen windows when they lose focus (Closes bug #876)</li> <li>When not using <code>focusLast</code>, when a focused transient is closed,   focus will still fallback to its parent or transient siblings</li> <li>Improved intelligence for focus cycling with modal transients</li> <li>Removed the <code>focusLast</code> option</li> <li>Added the placement-policy option to select if windows are placed   under the mouse pointer</li> <li>Children inherit their window icon from their parent</li> <li>Closed bug #878 (minimal resizing of mplayer makes openbox crash)</li> <li>Fix case where opening a menu would leave Openbox in a locked state</li> <li>Upstream updates for TheBear theme</li> </ul>"},{"location":"Changelog/#30-beta6","title":"3.0-beta6","text":"<ul> <li>Added <code>_OB_WM_STATE_UNDECORATED</code> hint, which can be read and controlled   by external applications</li> <li>Closed bug #874 (<code>libtool</code> won't install <code>libobrender.la</code>)</li> <li>Launch ObConf when selecting GNOME's Desktop Preferences for Windows</li> <li>Focus new children always if their direct parent is focused</li> </ul>"},{"location":"Changelog/#30-beta5","title":"3.0-beta5","text":"<ul> <li>Initial release</li> </ul>"},{"location":"CommunityPortal/","title":"Community Portal","text":""},{"location":"CommunityPortal/#community-portal","title":"Community portal","text":""},{"location":"CommunityPortal/#mailing-list","title":"Mailing List","text":"<p>The Openbox mailing list is a great place to go to ask questions about Openbox, and any help you can provide to others is always very appreciated. Please use the bugzilla for bug reports and patches as they get lost very easily on mailing lists.</p> <p>You can subscribe to and unsubscribe from the mailing list at this webpage.</p> <p>To post to the mailing list, send the email to openbox@icculus.org. (You need to subscribe before you can post.)</p> <p>Archives of the mailing list can be found here (mailman) or here (gmane).</p>"},{"location":"CommunityPortal/#irc","title":"IRC","text":"<p>Openbox has an IRC channel on oftc stealthily called #openbox.</p> <p>For support, please read the documentation and use the mailing list.</p>"},{"location":"CommunityPortal/#related-projects","title":"Related Projects","text":"<ul> <li>ObConf   Openbox Configuration Tool</li> <li>Obkey   Openbox Key Editor Tool</li> <li>Kickshaw   Editor for Openbox menus (GTK 2/3)</li> <li>ObMenu   Edit your Openbox menus from the comfort of a GUI.</li> <li>ObApps   GUI tool for managing per-application settings.</li> <li>ObTheme   GUI theme editor.</li> <li>ObFilebrowser   File browser and desktop application launcher.</li> <li>Stylebox   Theme editor for Openbox. This version is now somewhat out of date and looking   for someone to pick up where it left off. Could it be you?</li> <li>OBHotkey   Command-line tool for creating hotkeys.</li> <li>ObLogout   Advanced Openbox Logout Script</li> <li>ObPager   Lightweight EWMH Compliant Pager</li> <li>wmctrl   Command-line control of your desktop.</li> <li>MenuMaker   Generate Openbox menus.</li> <li>Denu   Menu editor.</li> <li>Clickity   Provides mouse-click simulation like Gnome's MouseTweaks or KDE's KMouseTool,   but doesn't require a desktop environment or accessibility framework and so is   useful for people using Openbox standalone or in conjunction with a   lightweight environment.</li> </ul>"},{"location":"CommunityPortal/#groups","title":"Groups","text":"<ul> <li>Last.fm</li> <li>identi.ca</li> <li>Facebook</li> </ul>"},{"location":"Contribute/","title":"Contribute","text":""},{"location":"Contribute/#translations","title":"Translations","text":"<p>Help translate Openbox! Any improvements to existing translations, or translations to new languages would be greatly appreciated by your fellow users.</p> <p>Translations are done through \"po\" files. The easiest way to edit these files is to use KBabel, which is a part of KDE (in the kdesdk package).</p> <p>If you want to update an existing translation, browse through our latest translations. You can download and modify the translation from there (right click on the \"raw\" link and select \"save as\" or the equivalent).</p> <p>If you want to create a new translation from scratch, download the current translation template for Openbox or the translation template for ObConf and add your translations to it. Download the file and run the command <code>msginit --locale LL_CC</code> where LL_CC is the appropriate code for your language. For example ru for Russian, sv for swedish or en_CA for the Canadian variant of English. If you don't have the msginit command, you can save the file directly as <code>LL_CC.po</code> and fill in the header yourself, using an existing translation as a template.</p> <p>When you've completed a new translation, you can submit it to the bugzilla to have it included in the next release. To submit a translation, follow the link below and fill out the template to create a bug report. After the bug report has been created, attach your new \"po\" file to the bug. If you for some reason don't want to use bugzilla, you can also try to send the translation to the mailing list or contact us directly on IRC but these methods are less reliable and the translation might get lost.</p> <p> Please make sure to specify the character encoding properly or Openbox won't be able to read the strings, UTF-8 is preferable.</p> <p>If you have any questions about what the english text means, or anything else is unclear, please don't hesitate to contact us via the mailing list or on IRC.</p> <p>Thank you for your help!</p> <p>Browse existing translations for Openbox See how many strings are translated for a language in Openbox Browse existing translations for ObConf Submit a new or updated translation</p> <p>(Note: use the \"attach a file\" button, don't paste the whole file in the comment box)</p>"},{"location":"Contribute/#bug-reports","title":"Bug reports","text":"<p>  When submitting a bug report, please make sure to explain to the developers how to reproduce your problem. If we can't reproduce it, we probably can't fix it. Browse existing bug reports Submit a new bug report</p>"},{"location":"Contribute/#feature-requests","title":"Feature requests","text":"<p> Browse existing feature requests Submit a new feature request</p>"},{"location":"Contribute/#writing-code","title":"Writing code","text":"<p> Openbox development is done using git. See the Help/UsingGit page for details on how to check out the latest code and send your changes back upstream. Browse the Openbox git repo on GitHub.com</p>"},{"location":"Download/","title":"Download","text":"<p> Getting started guide.</p> <p>This is a short introduction that is recommended reading material for people new to Openbox or upgrading from a previous version.</p> <p>3.6.1:</p> <p>Changelog Source code (.tar.xz) - GPG Signature Source code (.tar.gz) - GPG Signature Build instructions</p> <p>To download from the current git repository:</p> <pre><code>git clone git://git.openbox.org/mikachu/openbox.git\n</code></pre> <p>See the README.GIT file for instructions on building from git.</p> <p>Browse the git repository: dana mikachu</p>"},{"location":"Download/#obconf-openbox-configuration-tool","title":"ObConf - Openbox configuration tool","text":"<p>2.0.4:</p> <p>Changelog Source code Installing instructions</p> <p>2.0.3:</p> <p>Ubuntu/Debian package for ia86 (.deb) Arch Linux package (.tar.gz) Source code Installing instructions</p> <p>To download from the current git repository:</p> <pre><code>`git clone git://git.openbox.org/dana/obconf.git\n</code></pre> <p>Browse the git repository</p>"},{"location":"LXDE/","title":"LXDE","text":"<p>Desktop Environment, developed by \"PCMan\" in Taiwan, aimed at lean elegant code and usable design.</p> <p>Uses Openbox as the Window Manager, with lightweight modular components in addition.</p>"},{"location":"LXDE/#links","title":"Links","text":"<ul> <li>Main website</li> <li>Wiki</li> <li>Forum</li> <li>On Wikipedia</li> </ul>"},{"location":"PowerManagement/","title":"Power Management","text":"<p>Openbox does not load power management by default - you must load it, or configure it to load in autostart.</p> <p>There are various options you may have available, depending on your distribution.</p>"},{"location":"PowerManagement/#pm-utils","title":"pm-utils","text":"<p>pm-utils gives shell commands such as <code>pm-hibernate</code> and <code>pm-suspend</code>. pm-utils on the Arch wiki has configuration details.</p>"},{"location":"PowerManagement/#acpid","title":"acpid","text":"<p>acpid is a flexible and extensible daemon for delivering ACPI events, including events triggered by:</p> <ul> <li>Pressing the power button</li> <li>Pressing a sleep/suspend button</li> <li>Closing a laptop/notebook lid</li> <li>Plugging or unplugging an AC power adapter from a laptop</li> </ul> <p>See also acpid on the Arch Wiki.</p>"},{"location":"PowerManagement/#gnome-power-manager","title":"gnome-power-manager","text":"<p>If you have GNOME installed on the same installation of Linux that you are using with Openbox (or if you don't mind installing a few GNOME dependencies) you can run gnome-power-manager - simply type or paste at the command prompt:</p> <pre><code>gnome-power-manager\n</code></pre> <p>Gnome power preferences provides a notify area icon, and lets you adjust the power managment settings used my gnome-power-manager. run:</p> <pre><code>gnome-power-preferences\n</code></pre>"},{"location":"PowerManagement/#xfce4-power-manager","title":"xfce4-power-manager","text":"<p><code>xfce4-power-manager</code> appears to require fewer dependencies than <code>gnome-power-manager</code>.</p>"},{"location":"PowerManagement/#notify-area-icons","title":"Notify area icons","text":"<p>Both the <code>Gnome</code> and the <code>Xfce4</code> place icons in the notify area - this will hopefully work in most or all panels, including <code>tint2</code> and <code>LXPanel</code>.</p>"},{"location":"PowerManagement/#see-also","title":"See also","text":"<p>Suspend and hibernate</p>"},{"location":"SuspendAndHibernate/","title":"Suspend and hibernate","text":"<p>Although suspend is not given as an option on the logout menu, it can be done. At the command line, enter:</p> <pre><code>pm-suspend\n</code></pre> <p>(This works in systems including Mandriva, Arch Linux and Debian-based systems - is it a universal Linux command?)</p>"},{"location":"SuspendAndHibernate/#adding-suspend-and-hibernate-buttons-at-logout","title":"Adding suspend and hibernate buttons at logout","text":"<p>A new package has been created as an alternative to the current openbox-logout script. It is a script which adds additional buttons for \"Hibernate\" and \"Suspend\" at logout. It may give mixed results with actually using these features. See New Logout Script with Hibernate &amp; Suspend Options (Help &amp; Support, CrunchBang Linux Forums, thread started 2008-12-03)</p>"},{"location":"SuspendAndHibernate/#see-also","title":"See also","text":"<p>Power management</p>"},{"location":"Themes/","title":"Themes","text":"<p>The complete theme specification details all of the elements found in an Openbox theme. Now available in french too.</p> <p>Theme file changes in Openbox 3.4.</p> <p>A tool to help with converting blackbox/fluxbox themes to Openbox themes. (For non-xpm-based themes.)</p>"},{"location":"Themes/#user-submitted-theme-sites","title":"User-submitted theme sites","text":"<ul> <li>box-look.org AKA.   opendesktop.org</li> <li>deviantart.com</li> </ul>"},{"location":"Themes/#theme-authors","title":"Theme authors","text":"<ul> <li>Spoiledbroth's themes</li> <li>addy-dclxvi's theme   repository</li> <li>JJ. Posti's   themes</li> <li>crimeboy's themes</li> <li>Matthew's   themes</li> <li>Sareyko's lost Openbox themes</li> </ul>"},{"location":"Wallpaper/","title":"Wallpaper","text":"<p>Openbox does not natively support wallpapers, but wallpapers can be displayed with Nitrogen.</p>"},{"location":"Wallpaper/#different-wallpaper-on-every-workspace","title":"Different wallpaper on every workspace","text":"<p>A different background for each workspace might be desired to provide orientation, to easily know which desktop you are on. A script is given here: A way to have per desktop or random wallpapers in Openbox. Add to <code>autostart.sh</code>. There may be an issue with resource usage, depending how often you switch desktops.</p> <p>Some older, sometimes incomplete solutions, in case the above isn't what is needed:</p> <ul> <li>Set different background images per virtual desktop.   \"have a desktop type window on each desktop that simply displayed   whatever you wanted, and it would have that effect\"</li> <li>Using feh.</li> <li>Using conky   (same thread as the feh idea). This will only change the wallpaper when   conky updates, and it will update every time conky updates, adding   to CPU usage. (There is a [suggestion] to use the $execi or   $texeci command to check whether the desktop is the same as when   last checked, hopefully using less resources, but no code is given.</li> <li>Different wallpaper on every workspace - solved -   works for keyboard combinations, not for changing desktop by mouse.</li> </ul>"},{"location":"Wallpaper/#rotating-desktop-wallpapers","title":"Rotating desktop wallpapers","text":"<p>See: Rotating desktop wallpapers</p>"},{"location":"DesignDocuments/Actions/","title":"Actions","text":"<p>This is a chronological brain dump from top to bottom, so should really be read from bottom up maybe.</p> <ul> <li>singleword = action</li> <li>key:value = set option for last seen action</li> <li>{ } = for placing an action (or list of) in an action</li> <li>\" \" = is a string, not an action</li> <li>can use \\ \\ and inside any string</li> </ul>"},{"location":"DesignDocuments/Actions/#filters","title":"Filters","text":"<ul> <li>[ ] = setting target(s) for an action, tries them left to right   until it finds one that matches at least 1 window. separate target   options by \",\". all options inside one set of [] must apply to   choose a window.</li> <li>some targets are:<ul> <li>target - is the focused window, or the window targetted by   an interractive action</li> <li>focus - is the focused window (ignores the fact you're   targetting something else in alt-tab for instance</li> <li>title=\"foo\" - pattern match foo against all titles</li> <li>type=\"foo\" - pattern match foo against all types</li> <li>(basically anything we test in the app-specific rules..)</li> <li>desktop=1 - match against the window's current desktop (a   number or \"all\")</li> <li>ifviewing=3 - match against current desktop (filters all or   none)</li> <li>visible - a flag that the window is on the currently visible   desktop</li> <li>not - inverts the other test (maybe not ) <p>for bind action, chroot means when a breakchroot is hit, any bindings inside are removed</p> <p><code>bind\u00a0key:C-A-a\u00a0chroot:yes\u00a0actions:{\u00a0bind\u00a0key:Escape\u00a0actions:breakchroot</code> <code>bind\u00a0key:Left\u00a0actions:{moverelative\u00a0x:-5}</code> <code>bind\u00a0key:Right\u00a0actions:{moverelative\u00a0x:5}</code> <code>bind\u00a0key:Up\u00a0actions:{moverelative\u00a0y:-5}</code> <code>bind\u00a0key:Down\u00a0actions:{moverelative\u00a0y:5}</code> <code>}</code></p> <p>we decided not to do chroots this way. WE DIDN'T DECIDE HOW TO REPRESENT THEM YET. or how to do keybindings in general. the action approach seems decent though.</p> <p>Possible -unixcommand syntax</p> <p><code>bind\u00a0-key=A-Tab\u00a0-actions={nextwindow\u00a0-finalactions={focus\u00a0unshade\u00a0raise\u00a0-app=yes}}</code></p> <p>Examples..</p> <p><code>bind\u00a0key:W-a\u00a0actions:togglemaximizefull</code> <code>bind\u00a0key:A-Escape\u00a0actions:{lower\u00a0app:yes\u00a0focustobottom\u00a0unfocus}</code> <code>bind\u00a0key:A-Tab\u00a0actions:{nextwindow\u00a0finalactions:{focus\u00a0unshade\u00a0raise\u00a0app:yes}}</code> <code>bind\u00a0key:A-S-Tab\u00a0actions:{previouswindow\u00a0finalactions:{focus\u00a0unshade\u00a0raise\u00a0app:yes}}</code> <code>bind\u00a0key:W-Tab\u00a0actions:{showmenu\u00a0menu:client-list-combined-menu}</code> <code>bind\u00a0key:W-F10\u00a0actions:{execute\u00a0command:\"gnome-screensaver-command\u00a0-l\"}</code> <code>bind\u00a0key:W-F11\u00a0actions:reconfigure</code> <code>bind\u00a0key:W-F12\u00a0actions:restart</code> <code>bind\u00a0key:C-A-Left\u00a0actions:{desktopleft\u00a0dialog:no\u00a0wrap:no}</code> <code>bind\u00a0key:C-A-Up\u00a0actions:{desktopup\u00a0dialog:no\u00a0wrap:no}</code> <code>bind\u00a0key:S-A-Up\u00a0actions:{sendtodesktopup\u00a0dialog:no\u00a0wrap:no\u00a0follow:yes}</code> <code>bind\u00a0key:A-F4\u00a0actions:{close}</code> <code>bind\u00a0key:A-F4\u00a0actions:{close\u00a0[target]}\u00a0\u00a0\u00a0#\u00a0target\u00a0=\u00a0default</code> <code>bind\u00a0key:A-S-F4\u00a0actions:{close\u00a0[title=\"*Google\u00a0Chrome\",\u00a0desktop=2]}\u00a0\u00a0#\u00a0chrome\u00a0windows\u00a0on\u00a0desktop\u00a02</code> <code>bind\u00a0key:A-S-F4\u00a0actions:{close\u00a0[desktop=1]\u00a0[desktop=2]}\u00a0\u00a0#\u00a0all\u00a0windows\u00a0on\u00a0desktop\u00a01.\u00a0if\u00a0none\u00a0match,\u00a0then\u00a0all\u00a0windows\u00a0on\u00a0desktop\u00a02</code> <code>bind\u00a0key:Print\u00a0actions:{execute\u00a0command:\"gnome-screenshot\"}</code> <code>bind\u00a0key:W-d\u00a0actions:{toggleshowdesktop}</code> <code>bind\u00a0key:W-S-Right\u00a0actions:{directionalcyclewindows\u00a0direction:right}</code> <code>bind\u00a0key:W-S-Left\u00a0\u00a0actions:{directionalcyclewindows\u00a0direction:left}</code> <code>bind\u00a0key:W-S-Up\u00a0\u00a0\u00a0\u00a0actions:{directionalcyclewindows\u00a0direction:up}</code> <code>bind\u00a0key:W-S-Down\u00a0\u00a0actions:{directionalcyclewindows\u00a0direction:down}</code></p> <p><code>reconfigure\u00a0\u00a0#\u00a0an\u00a0action\u00a0with\u00a0no\u00a0options</code> <code>restart\u00a0command:\"metacitylol\"\u00a0\u00a0#\u00a0an\u00a0action\u00a0with\u00a0one\u00a0option</code> <code>nextwindow\u00a0finalactions:{focus\u00a0unshade\u00a0raise\u00a0app:yes}\u00a0\u00a0#\u00a0nested\u00a0actions</code> <code>#\u00a0execute\u00a0action\u00a0outside\u00a0of\u00a0a\u00a0bind\u00a0action</code> <code>execute\u00a0startupnotify:true\u00a0startupname:Konqueror\u00a0command:\"kfmclient\u00a0openProfile\u00a0filemanagement\"\u00a0\u00a0#\u00a0multiple\u00a0options</code></p> <p><code>close\u00a0[target]\u00a0\u00a0\u00a0#\u00a0target\u00a0=\u00a0default</code> <code>close\u00a0[title=\"*Google\u00a0Chrome\",\u00a0desktop=2]\u00a0\u00a0#\u00a0chrome\u00a0windows\u00a0on\u00a0desktop\u00a02</code> <code>close\u00a0[desktop=1]\u00a0[desktop=2]\u00a0\u00a0#\u00a0all\u00a0windows\u00a0on\u00a0desktop\u00a01.\u00a0if\u00a0none\u00a0match,\u00a0then\u00a0all\u00a0windows\u00a0on\u00a0desktop\u00a02</code></p> <p><code>togglemaximizefull</code> <code>moverelative\u00a0x:-5</code> <code>moverelative\u00a0y:-5</code> <code>moverelative\u00a0y:-5</code> <code>moverelative\u00a0y:-5</code></p> <p>Have alias action to build composite actions (macros)</p> <p><code>alias\u00a0name:_foo\u00a0actions:{foo\u00a0bar\u00a0baz}</code></p> <p><code>if\u00a0[title=\"*\u00a0GIMP\",\u00a0desktop=8,\u00a0viewing=8]\u00a0actions:{foo\u00a0bar}</code></p> <p><code>alias\u00a0name:_myif\u00a0actions:</code> <code>[viewing=8,\u00a0desktop=8]\u00a0{</code> <code>[title=\"*\u00a0GIMP\"]\u00a0{</code> <code>moveresizeto\u00a0x:69\u00a0y:0\u00a0width:1373\u00a0height:1005</code> <code>sendkeyevent\u00a0usetarget:no\u00a0key:C-j</code> <code>}</code> <code>[locked=no,\u00a0notitle=\"*\u00a0GIMP\"\u00a0title=\"Toolbox\u00a0-\u00a0*\"]</code> <code>lock</code> <code>}</code></p> <p>Attempt at an Else:</p> <p><code>[viewing=8,\u00a0desktop=8]\u00a0{</code> <code>[title=\"*\u00a0GIMP\"]\u00a0nextwindow</code> <code>}</code> <code>|\u00a0[visible]\u00a0nextwindow</code></p> <p><code>alias\u00a0name:_myif\u00a0actions:{</code> <code>moveresizeto\u00a0[viewing=8,\u00a0desktop=8,\u00a0title=\"*\u00a0GIMP\"]\u00a0x:69\u00a0y:0\u00a0width:1373\u00a0height:1005</code> <code>sendkeyevent\u00a0[viewing=8,\u00a0desktop=8,\u00a0title=\"*\u00a0GIMP\"]\u00a0usetarget:no\u00a0key:C-j</code> <code>lock\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0[locked=no\u00a0notitle=\"*\u00a0GIMP\"\u00a0title=\"Toolbox\u00a0-\u00a0*\"]}</code> <code>}</code></p> <p>Attempt to group filters on actions by use of a chain action:</p> <p><code>chain\u00a0[viewing=8,desktop=8]</code> <code>a:{chain\u00a0[title=\"*\u00a0GIMP\"]</code> <code>a:{moveresizeto\u00a0x:69\u00a0y:0\u00a0width:1373\u00a0height:1005</code> <code>sendkeyevent\u00a0usetarget:no\u00a0key:C-j}</code> <code>|\u00a0lock\u00a0[locked=no,\u00a0title=\"Toolbox\u00a0-\u00a0*]}</code></p> <p><code>[target]\u00a0{moveresizeto\u00a0a:foo}\u00a0|\u00a0stuff</code> <code>[desktop=2]\u00a0movetodesktop\u00a0desktop:4\u00a0|\u00a0[desktop=1]\u00a0{stuff\u00a0otherstuff}</code> <code>[foo]\u00a0bar\u00a0|\u00a0baz</code></p> <p>Do filters stack as parsing continues on a line? We decided no.</p> <p>What about OR in filters?</p> <p><code>[foo]\u00a0bar\u00a0|\u00a0[lal]\u00a0bar\u00a0|\u00a0baz\u00a0=&gt;\u00a0[foo\u00a0|\u00a0lal]\u00a0bar\u00a0|\u00a0baz</code></p> <p><code>[a,b\u00a0|\u00a0c,d]\u00a0foo\u00a0|\u00a0bar</code> <code>[a,\u00a0(b|c),\u00a0d]\u00a0foo\u00a0|\u00a0bar</code></p>"},{"location":"DesignDocuments/Actions/#proposed-action-language","title":"PROPOSED ACTION LANGUAGE","text":"<p>In BNF like thing:</p> <p><code>TEST\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0:=\u00a0KEY=VALUE\u00a0|\u00a0KEY\u00a0\u00a0\u00a0#\u00a0eg.\u00a0locked\u00a0or\u00a0desktop=1.\u00a0See</code><code>Filters</code><code>.</code> <code>ACTION\u00a0\u00a0\u00a0\u00a0\u00a0:=\u00a0[FILTER]\u00a0ACTION\u00a0ACTIONELSE\u00a0|\u00a0ACTIONNAME\u00a0ACTIONOPTS\u00a0|\u00a0{ACTIONLIST}</code> <code>ACTIONLIST\u00a0:=\u00a0ACTION\u00a0ACTIONLIST\u00a0|\u00a0ACTION</code> <code>ACTIONELSE\u00a0:=\u00a0nil\u00a0|\u00a0\\|\u00a0ACTION</code> <code>FILTER\u00a0\u00a0\u00a0\u00a0\u00a0:=\u00a0FILTERORS</code> <code>FILTERORS\u00a0\u00a0:=\u00a0FILTERANDS\u00a0\\|\u00a0FILTERORS\u00a0|\u00a0FILTERANDS</code> <code>FILTERANDS\u00a0:=\u00a0TEST,\u00a0FILTERANDS\u00a0|\u00a0TEST</code> <code>ACTIONOPTS\u00a0:=\u00a0ACTIONOPT\u00a0ACTIONOPTS\u00a0|\u00a0ACTIONOPT</code> <code>ACTIONOPT\u00a0\u00a0:=\u00a0ATTRIBUTE:WORD\u00a0|\u00a0ATTRIBUTE:STRING\u00a0|\u00a0ATTRIBUTE:{ACTIONLIST}</code> <code>WORD\u00a0\u00a0\u00a0:=\u00a0string\u00a0of\u00a0text\u00a0without\u00a0any\u00a0spaces</code> <code>STRING\u00a0:=\u00a0\"TEXT\"\u00a0|\u00a0(TEXT)</code> <code>where\u00a0TEXT\u00a0is\u00a0a\u00a0string,\u00a0any\u00a0occurance\u00a0of\u00a0the\u00a0closing\u00a0quote\u00a0character\u00a0must</code> <code>be\u00a0escaped\u00a0by\u00a0an\u00a0backslash.</code> <code>\\\\\u00a0``\u00a0and\u00a0\\\"\u00a0are\u00a0all\u00a0valid\u00a0escaped\u00a0characters.</code></p> <p>In English like thing:</p> <p><code>an\u00a0ACTIONSPOT\u00a0can\u00a0hold\u00a0an\u00a0ACTION,\u00a0an\u00a0ACTIONLIST,\u00a0or\u00a0a\u00a0FILTER\u00a0followed\u00a0by\u00a0another\u00a0ACTIONSPOT.</code> <code>it\u00a0may\u00a0be\u00a0followed\u00a0by\u00a0a\u00a0|\u00a0ELSE,\u00a0where\u00a0ELSE\u00a0is\u00a0an\u00a0ACTIONSPOT\u00a0which\u00a0is\u00a0only\u00a0run\u00a0if\u00a0the\u00a0prior\u00a0action\u00a0spot's\u00a0filter</code> <code>returned\u00a0an\u00a0empty\u00a0list\u00a0of\u00a0windows.</code> <code>an\u00a0ACTIONLIST\u00a0is\u00a0a\u00a0list\u00a0of\u00a01\u00a0or\u00a0more\u00a0space-separated\u00a0ACTIONSPOTS\u00a0inside\u00a0{}.</code> <code>a\u00a0FILTER\u00a0is\u00a0a\u00a0[]\u00a0with\u00a0tests\u00a0(eg\u00a0foo=bar)\u00a0inside\u00a0delimited\u00a0by\u00a0,\u00a0for\u00a0AND\u00a0and\u00a0|\u00a0for\u00a0OR.\u00a0AND\u00a0has\u00a0higher</code> <code>precedence.</code> <code>an\u00a0ACTION\u00a0is\u00a0a\u00a0name\u00a0(no\u00a0spaces)\u00a0and\u00a0a\u00a0space-separated\u00a0list\u00a0of\u00a0key:value\u00a0pairs\u00a0to\u00a0assign\u00a0to\u00a0the\u00a0ACTION.</code> <code>the\u00a0value\u00a0is\u00a0a\u00a0WORD,\u00a0a\u00a0STRING\u00a0or\u00a0an\u00a0ACTIONLIST.</code> <code>a\u00a0WORD\u00a0is\u00a0a\u00a0string\u00a0of\u00a0text\u00a0with\u00a0no\u00a0space\u00a0and\u00a0does\u00a0not\u00a0start\u00a0with\u00a0a\u00a0'('\u00a0'\"'\u00a0or\u00a0'{'\u00a0character.</code> <code>a\u00a0STRING\u00a0is\u00a0a\u00a0string\u00a0of\u00a0text\u00a0quoted\u00a0with\u00a0\"\"\u00a0or\u00a0().\u00a0\u00a0the\u00a0ending\u00a0quoting\u00a0character\u00a0and\u00a0'\\'\u00a0must\u00a0be\u00a0escaped</code> <code>inside\u00a0the\u00a0STRING,\u00a0and\u00a0``\u00a0\\\"\u00a0or\u00a0\\\\\u00a0are\u00a0all\u00a0valid\u00a0escaped\u00a0characters.</code> <code>Unrecognized\u00a0escape\u00a0sequences\u00a0are\u00a0simply\u00a0dropped\u00a0from\u00a0the\u00a0string\u00a0with\u00a0a\u00a0warning\u00a0to\u00a0the\u00a0user.</code></p> <p>Example using bind to also be an action:</p> <p><code>bind\u00a0key:M-r\u00a0actions:{[la]\u00a0foo\u00a0|\u00a0{bar\u00a0etc:(yay)}</code> <code>morethings</code> <code>}</code></p> <p>Bind actions should not persist though! Need to be recreated at startup, tho they can be injected at runtime.</p> <p>note: OR precedence can be achived by splitting into nested filters:</p> <p><code>[a,b]\u00a0[c|d]\u00a0foo\u00a0\u00a0\u00a0=&gt;\u00a0if\u00a0(a&amp;b)&amp;(c|d)\u00a0then\u00a0foo</code></p> <p>Examples:</p> <p><code>execute\u00a0startupnotify:true\u00a0startupname:Konqueror\u00a0command:(kfmclient\u00a0openProfile\u00a0filemanagement)</code> <code>execute\u00a0startupnotify:true\u00a0startupname:Konqueror\u00a0command:\"kfmclient\u00a0openProfile\u00a0filemanagement\"</code></p> <p><code>[ifviewing=8,\u00a0desktop=8]\u00a0{</code> <code>[title=\"*\u00a0GIMP\"]\u00a0{moveresize\u00a0sendkey}</code> <code>[title=\"Toolbox\u00a0-\u00a0*\",\u00a0nottitle=\"*\u00a0GIMP\",\u00a0locked=no]\u00a0lock</code> <code>}</code></p>"},{"location":"DesignDocuments/Actions/#functionality","title":"Functionality","text":"<p>Filters are used to create a list of windows. The default filter is [target] meaning only the targetted window is matched. Each action is run and passed a list of windows matched by the filters applied to it.</p>"},{"location":"DesignDocuments/Actions/#keybindings-mousebindings-and-lions-oh-my","title":"Keybindings, Mousebindings and Lions, Oh my.","text":"<p>We need to decide 1. how to do keybinds, esp chroots. 2. how to do mousebinds, esp contexts (no xml tree anymore)</p>"},{"location":"DesignDocuments/Actions/#filters-as-functions","title":"Filters as functions","text":"<ul> <li>Mikachu thinks he might want filters to be able to act on other filters.   For instance, to get all windows matching title,   then get all windows in group with each of them.</li> <li>That doesn't work with the standard union/intersection between filters.</li> <li>We would need a filter to be able to take a set of clients as its parameter such as</li> </ul> <p><code>[group=[title=\"foo\"]]\u00a0dostuff</code> <code>OR</code> <code>[group=[focused]]\u00a0dostuff</code></p> <p>It is possible that some special cases for group would be enough though, without this passing sets around, such as</p> <p><code>[group=focus]\u00a0dostuff</code> <code>[group=target]\u00a0dostuff;\u00a0[group]\u00a0dostuff\u00a0\u00a0#\u00a0synonymous</code></p>"},{"location":"DesignDocuments/Actions/#boolean-filters","title":"Boolean filters","text":"<p>Some filters return a boolean value, such as \"on desktop 3\". These filters return either ALL or EMPTY.</p> <ul> <li>ALL is a special client set that is considered non-empty for truth   testing, regardless of if there are windows in it.</li> <li>EMPTY is the empty set, which would test false for truth testing.</li> <li>Anything union with ALL will give back ALL.</li> </ul> <p><code>[ondesktop=3|any\u00a0set\u00a0here]\u00a0-&gt;\u00a0will\u00a0give\u00a0back\u00a0ALL\u00a0when\u00a0on\u00a0desktop\u00a03.</code></p> <p>ALL can be implemented with a flag in the ObClientSet, which saves copying all the ObClients also.</p> <p><code>[ondesktop=3,windowdesktop=2]\u00a0stuff\u00a0|\u00a0other</code></p> <p>The above should always run stuff (even with an empty set if windowdesktop=2 returns EMPTY) when on desktop 3. And always run other when not.</p>"},{"location":"DesignDocuments/Config/","title":"Config","text":"<p>Key points:</p> <ul> <li>bindings in separate human editable file</li> <li>~/.config/openbox/keys ?</li> <li>~/.config/openbox/mouse ?</li> <li>menus in separate human editable file</li> <li>~/.config/openbox/menu ?</li> <li>per app settings in separate human editable file</li> <li>~/.config/openbox/windows ?</li> <li>these files can remain XML since we have a nice parser for that</li> <li>config options stored in machine file</li> <li>~/.cache/openbox/settings</li> <li>plaintext so mika can edit it (and for when debugging)</li> <li>unrecognized stuff in the file is not deleted when saving<ul> <li>lets multiple versions of openbox share the same file</li> </ul> </li> <li>--config-file will be weird now</li> <li>maybe a --config-name instead and it uses one of<ul> <li>~/.config/openbox-{name}/* and ~/.cache/openbox-{name}/*</li> <li>~/.config/openbox/name/* and ~/.cache/openbox/name/*</li> <li>~/.config/openbox/*-name and ~/.cache/openbox/*-name</li> </ul> </li> <li>options are saved when they are changed (power failure shouldnt lose settings)</li> <li>rc script on startup is possible.. not sure it is useful</li> <li>things like current desktop can be saved on shutdown</li> <li>easiest to use current config format for machine writable file (code exists)</li> <li>*could* use it for human editable files too (even tho xml not nice..)</li> </ul> <p>From August 2, 2011:</p> <pre><code>04:37\u00a0(xor)\u00a0menus\u00a0and\u00a0perapp\u00a0settings\u00a0probably\u00a0both\u00a0stay\u00a0xml\n04:37\u00a0(xor)\u00a0i\u00a0dont\u00a0think\u00a0ppl\u00a0want\u00a0to\u00a0set\u00a0up\u00a0perapp\u00a0settings\u00a0with\u00a0action\u00a0commands\n04:37\u00a0(Mikachu)\u00a0what\u00a0about\u00a0other\u00a0options?\n04:37\u00a0(xor)\u00a0theyll\u00a0be\u00a0set\u00a0thru\u00a0actions\n04:37\u00a0(xor)\u00a0so\u00a0your\u00a0rc\u00a0will\u00a0be\u00a0a\u00a0script\n04:38\u00a0(Mikachu)\u00a0i\u00a0see\n04:38\u00a0(xor)\u00a0oh\n04:38\u00a0(xor)\u00a0actually\u00a0i\u00a0take\u00a0that\u00a0back\n04:38\u00a0(xor)\u00a0i\u00a0think\u00a0your\u00a0rc\u00a0wont\u00a0exist\n04:38\u00a0(xor)\u00a0and\u00a0you\u00a0just\u00a0change\u00a0settings\u00a0and\u00a0ob\u00a0saves\u00a0thems\n04:38\u00a0(xor)\u00a0well\n04:38\u00a0(xor)\u00a0except\u00a0bindings\n04:39\u00a0(xor)\u00a0bindings/perapp/menus\u00a0won't\u00a0be\u00a0saved\n04:39\u00a0(Mikachu)\u00a0where\u00a0would\u00a0it\u00a0save\u00a0them?\n04:39\u00a0(xor)\u00a0but\u00a0other\u00a0options\u00a0we\u00a0can\u00a0just\u00a0cache\u00a0them\n04:39\u00a0(xor)\u00a0in\u00a0~/.cache/openbox\u00a0i\u00a0figure\n04:39\u00a0(Mikachu)\u00a0that\u00a0sounds\u00a0yucky\u00a0to\u00a0me\n04:39\u00a0(xor)\u00a0whyfor\n04:39\u00a0(xor)\u00a0that\u00a0way\u00a0you\u00a0change\u00a0something\u00a0and\u00a0it\u00a0just\u00a0stays\n04:39\u00a0(Mikachu)\u00a0just\u00a0does\n04:39\u00a0(xor)\u00a0which\u00a0is\u00a0my\u00a0ultimate\u00a0goal\n04:40\u00a0(Mikachu)\u00a0it\u00a0feels\u00a0a\u00a0bit\u00a0gnome-y\u00a0to\u00a0hide\u00a0the\u00a0settings\u00a0in\u00a0some\u00a0weird\u00a0dir\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0making\u00a0it\u00a0hard\u00a0to\u00a0figure\u00a0out\u00a0what's\u00a0going\u00a0on\n04:40\u00a0(xor)\u00a0but\u00a0if\u00a0you\u00a0expose\u00a0them\u00a0all\u00a0thru\u00a0some\u00a0UI\u00a0then\u00a0its\u00a0not\u00a0really\u00a0hidden\n04:40\u00a0(xor)\u00a0gnome\u00a0hides\u00a0them\u00a0all\u00a0and\u00a0doesnt\u00a0give\u00a0a\u00a0way\u00a0to\u00a0change\u00a0them\u00a0without\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0going\u00a0in\u00a0the\u00a0hidden\u00a0shit\u00a0and\u00a0editing\n04:41\u00a0(Mikachu)\u00a0also\u00a0it\u00a0makes\u00a0--config-file\u00a0weird\n04:41\u00a0(xor)\u00a0yeh\u00a0probably\u00a0change\u00a0it\n04:41\u00a0(xor)\u00a0config-name\u00a0or\u00a0something\n04:42\u00a0(xor)\u00a0and\u00a0~/.config/openbox-{config-name}\u00a0~/.cache/openbox-{config-name}\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0get\u00a0used\n04:42\u00a0(xor)\u00a0or\u00a0something\n04:42\u00a0(xor)\u00a0or\u00a0a\u00a0subdir\n04:42\u00a0(xor)\u00a0i\u00a0want\u00a0a\u00a0program\u00a0like\u00a0obconf\u00a0to\u00a0be\u00a0able\u00a0to\u00a0change\u00a0settings\u00a0without\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0editing\u00a0files\n04:43\u00a0(xor)\u00a0cuz\u00a0that\u00a0shit\u00a0is\u00a0hacky\n04:43\u00a0(xor)\u00a0mixing\u00a0human\u00a0and\u00a0machine\u00a0generated\u00a0stuff\u00a0in\u00a01\u00a0file\n04:43\u00a0(Mikachu)\u00a0if\u00a0the\u00a0rc\u00a0is\u00a0a\u00a0bunch\u00a0of\u00a0actions\u00a0that\u00a0set\u00a0options,\u00a0won't\u00a0that\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0overwrite\u00a0whatever\u00a0obconf\u00a0sets?\n04:43\u00a0(xor)\u00a0yeh\u00a0it\u00a0would\n04:43\u00a0(Mikachu)\u00a0so..\n04:44\u00a0(xor)\u00a0so\u00a0dont\u00a0set\u00a0stuff\u00a0like\u00a0that\u00a0in\u00a0your\u00a0rc\n04:44\u00a0(xor)\u00a0or\n04:44\u00a0(xor)\u00a0we\u00a0dont\u00a0make\u00a0an\u00a0rc\u00a0at\u00a0all\n04:44\u00a0(xor)\u00a0and\u00a0make\u00a0a\u00a0bindings\u00a0file\n04:44\u00a0(xor)\u00a0and\u00a0an\u00a0windowsettings\u00a0file\n04:44\u00a0(xor)\u00a0and\u00a0done\n04:44\u00a0(xor)\u00a0but\u00a0i\u00a0liked\u00a0the\u00a0idea\u00a0of\u00a0being\u00a0able\u00a0to\u00a0set\u00a0your\u00a0current\u00a0desktop\u00a0to\u00a03\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0or\u00a0something\u00a0in\u00a0your\u00a0rc\n04:45\u00a0(xor)\u00a0then\u00a0again\u00a0that\u00a0can\u00a0get\u00a0saved\u00a0easily\u00a0too\n04:45\u00a0(xor)\u00a0right\u00a0now\u00a0it\u00a0needs\u00a0a\u00a0session\u00a0manager\u00a0to\u00a0save\u00a0anything\n04:45\u00a0(xor)\u00a0and\u00a0most\u00a0people\u00a0dont\u00a0use\u00a0one\u00a0and\u00a0its\u00a0so\u00a0deprecated\u00a0now\u00a0anyway\n04:45\u00a0(xor)\u00a0id\u00a0like\u00a0ob\u00a0to\u00a0save\u00a0things\u00a0more\u00a0intelligently\u00a0on\u00a0its\u00a0own\n04:45\u00a0(Mikachu)\u00a0can\u00a0we\u00a0make\u00a0this\u00a0magic\u00a0file\u00a0human\u00a0readable\u00a0at\u00a0least?\n04:45\u00a0(Mikachu)\u00a0so\u00a0people\u00a0who\u00a0don't\u00a0want\u00a0gtk\u00a0can\u00a0still\u00a0edit\u00a0the\u00a0config\n04:45\u00a0(xor)\u00a0and\u00a0just\u00a0add\u00a0in\u00a0what\u00a0it\u00a0can\u00a0with\u00a0a\u00a0session\u00a0manager\n04:46\u00a0(xor)\u00a0yeh\u00a0it\u00a0can\u00a0be\u00a0xml\u00a0maybe\u00a0:)\n04:46\u00a0(xor)\u00a0you\u00a0can\u00a0edit\u00a0the\u00a0config\u00a0by\u00a0running\u00a0an\u00a0action\n04:46\u00a0(xor)\u00a0anyway\n04:46\u00a0(xor)\u00a0setopt\u00a0focusnew:true\n04:46\u00a0(xor)\u00a0done\n04:46\u00a0(Mikachu)\u00a0so\u00a0to\u00a0edit\u00a0your\u00a0config\u00a0you\u00a0have\u00a0to\u00a0edit\u00a0your\u00a0rc\u00a0to\u00a0set\u00a0the\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0config,\u00a0restart\u00a0openbox,\u00a0then\u00a0remove\u00a0it\u00a0again\n04:46\u00a0(Mikachu)\u00a0sounds\u00a0convoluted\n04:47\u00a0(xor)\u00a0and\u00a0you\u00a0can\u00a0do\u00a0that\u00a0from\u00a0a\u00a0shell\u00a0(or\u00a0from\u00a0within\u00a0openbox\u00a0maybe)\n04:47\u00a0(xor)\u00a0no\n04:47\u00a0(xor)\u00a0you\u00a0just\u00a0run\u00a0that\u00a0and\u00a0youre\u00a0done\n04:47\u00a0(xor)\u00a0and\u00a0its\u00a0saved\n04:47\u00a0(xor)\u00a0no\u00a0reconfigure\u00a0no\u00a0restart\u00a0no\u00a0anything\n04:48\u00a0(xor)\u00a0also\u00a0could\u00a0make\u00a0a\u00a0menu\u00a0with\u00a0all\u00a0the\u00a0options\u00a0-\u00a0back\u00a0to\u00a0blackbox\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0style\u00a0-\u00a0probably\u00a0a\u00a0pipe\u00a0menu..\n04:48\u00a0(Mikachu)\u00a0only\u00a0boolean\u00a0options\n04:48\u00a0(xor)\u00a0submenus\n04:49\u00a0(xor)\u00a0or\u00a0make\u00a0text\u00a0entry\u00a0menu\u00a0widget\u00a0:p\n04:49\u00a0(Mikachu)\u00a0how\u00a0would\u00a0you\u00a0let\u00a0me\u00a0change\u00a0the\u00a0activewindow\u00a0font\u00a0from\u00a0a\u00a0menu?\n04:49\u00a0(Mikachu)\u00a0heh\n04:49\u00a0(xor)\u00a0show\u00a0a\u00a0menu\u00a0of\u00a0fonts\n04:49\u00a0(Mikachu)\u00a0i\u00a0like\u00a0being\u00a0able\u00a0to\u00a0vcs\u00a0my\u00a0config\n04:50\u00a0(xor)\u00a0because\u00a0of\u00a0your\u00a0bindings\n04:50\u00a0(xor)\u00a0which\u00a0you\u00a0could\u00a0still\n04:50\u00a0(Mikachu)\u00a0and\u00a0if\u00a0changing\u00a0an\u00a0option\u00a0causes\u00a0a\u00a0problem\u00a0that\u00a0makes\u00a0it\u00a0hard\u00a0\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0to\u00a0change\u00a0it\u00a0back\u00a0via\u00a0the\u00a0ui,\u00a0it\u00a0needs\u00a0to\u00a0be\u00a0easy\u00a0to\u00a0restore\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0the\u00a0config\u00a0from\u00a0outside\u00a0openbox\n04:50\u00a0(xor)\u00a0you\u00a0can\n04:50\u00a0(xor)\u00a0obrun\u00a0setopt\u00a0focusnew:false\n04:50\u00a0(xor)\u00a0from\u00a0a\u00a0shell\n04:50\u00a0(xor)\u00a0or\u00a0whatever\u00a0it\u00a0would\u00a0be\u00a0called\n04:50\u00a0(xor)\u00a0you\u00a0can\u00a0run\u00a0any\u00a0action\u00a0from\u00a0shell\u00a0scripts\n04:50\u00a0(xor)\u00a0(in\u00a0future)\n04:51\u00a0(Mikachu)\u00a0without\u00a0a\u00a0running\u00a0openbox\u00a0instance?\n04:51\u00a0(xor)\u00a0hm\n04:51\u00a0(xor)\u00a0no\n04:51\u00a0(xor)\u00a0are\u00a0you\u00a0concerned\u00a0about\u00a0crashes\u00a0?\n04:51\u00a0(Mikachu)\u00a0i\u00a0just\u00a0really\u00a0like\u00a0editing\u00a0text\u00a0file\u00a0configs\u00a0i\u00a0suppose\n04:52\u00a0(xor)\u00a0cuz\u00a0i\u00a0think\u00a0it\u00a0should\u00a0save\u00a0the\u00a0config\u00a0on\u00a0log\u00a0out\u00a0so\u00a0a\u00a0crash\u00a0wouldnt\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0save\u00a0the\u00a0bad\u00a0option\n04:52\u00a0(Mikachu)\u00a0as\u00a0long\u00a0as\u00a0there\u00a0is\u00a0one\u00a0of\u00a0those\u00a0i\u00a0will\u00a0survive\n04:52\u00a0(xor)\u00a0hehe\u00a0okay\n04:52\u00a0(xor)\u00a0for\u00a0apps\u00a0that\u00a0you\u00a0run\u00a0and\u00a0close\u00a0i\u00a0think\u00a0they\u00a0can\u00a0make\u00a0sense\n04:52\u00a0(xor)\u00a0but\u00a0openbox\u00a0is\u00a0a\u00a0long-running\u00a0process,\u00a0it\u00a0never\u00a0closes\u00a0unless\u00a0you\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0reboot\u00a0basically\n04:52\u00a0(Mikachu)\u00a0there\u00a0are\u00a0probably\u00a0many\u00a0people\u00a0who\u00a0never\u00a0log\u00a0out,\u00a0just\u00a0start\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0openbox\u00a0after\u00a0reboot\u00a0due\u00a0to\u00a0power\u00a0failure\u00a0:P\n04:52\u00a0(Mikachu)\u00a0it\u00a0would\u00a0be\u00a0a\u00a0pain\u00a0if\u00a0that\u00a0never\u00a0saved\u00a0options\n04:52\u00a0(xor)\u00a0i\u00a0spose\u00a0so\n04:53\u00a0(xor)\u00a0thats\u00a0fine\u00a0then\n04:53\u00a0(xor)\u00a0since\u00a0we\u00a0can\u00a0always\u00a0change\u00a0them\u00a0by\u00a0hand\u00a0when\u00a0debugging\n04:53\u00a0(Mikachu)\u00a0it\u00a0would\u00a0make\u00a0the\u00a0most\u00a0sense\u00a0to\u00a0keep\u00a0the\u00a0current\u00a0format\u00a0then\n04:54\u00a0(xor)\u00a0yeh\u00a0probably\u00a0so\n04:54\u00a0(Mikachu)\u00a0and\u00a0just\u00a0excise\u00a0bindings\u00a0to\u00a0the\u00a0new\u00a0file\n04:54\u00a0(xor)\u00a0then\u00a0the\u00a0code\u00a0is\u00a0already\u00a0there\n04:54\u00a0(xor)\u00a0good\u00a0point\n04:54\u00a0(Mikachu)\u00a0plus\u00a0i\u00a0can\u00a0drop\u00a0my\u00a0rc\u00a0in\u00a0the\u00a0cache\u00a0dir\u00a0and\u00a0it\u00a0will\u00a0work\u00a0:P\n04:54\u00a0(xor)\u00a0:)\n04:54\u00a0(xor)\u00a0with\u00a0some\u00a0cutting\n04:54\u00a0(Mikachu)\u00a0yeah\u00a0make\u00a0sure\u00a0to\u00a0not\u00a0drop\u00a0elements\u00a0you\u00a0don't\u00a0recognize\u00a0when\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0saving\n04:54\u00a0(Mikachu)\u00a0because\u00a0then\u00a0running\u00a0an\u00a0old\u00a0version\u00a0would\u00a0kill\u00a0any\u00a0new\u00a0options\n04:55\u00a0(xor)\u00a0hm,\u00a0yeh\n04:55\u00a0(xor)\u00a0but\u00a0then\u00a0removing/renaming\u00a0options\u00a0would\u00a0grow\u00a0the\u00a0file\u00a0until\u00a0it\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0took\u00a0over\u00a0your\u00a0harddrive\n04:55\u00a0(Mikachu)\u00a0haha\n04:56\u00a0(Mikachu)\u00a0but\u00a0then\u00a0old\u00a0and\u00a0new\u00a0versions\u00a0will\u00a0work\u00a0on\u00a0the\u00a0same\u00a0file,\u00a0and\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0share\u00a0the\u00a0options\u00a0they\u00a0both\u00a0know\u00a0about\n04:56\u00a0(Mikachu)\u00a0i\u00a0don't\u00a0think\u00a0there's\u00a0ever\u00a0any\u00a0reason\u00a0to\u00a0rename\u00a0an\u00a0option\u00a0though\n04:56\u00a0(Mikachu)\u00a0since\u00a0it's\u00a0only\u00a0visible\u00a0in\u00a0the\u00a0cache\u00a0file\n04:56\u00a0(xor)\u00a0yeh\u00a0true\n04:56\u00a0(xor)\u00a0should\u00a0write\u00a0this\u00a0stuff\n04:56\u00a0(Mikachu)\u00a0plus\u00a0it\u00a0would\u00a0lose\u00a0the\u00a0value\u00a0on\u00a0update\u00a0then\n</code></pre>"},{"location":"DesignDocuments/Placement/","title":"Placement","text":"<ul> <li>This depends on FVWM's MinOverlap placement as a black box.</li> <li>Algorithm is in red in the bottom left.</li> </ul>"},{"location":"DesignDocuments/Tasks/","title":"Tasks","text":"<ul> <li>The idea is a menu of presets in the top left, and a list of   currently visible window tags (tasks) beside it.</li> <li>Right-click a window tag name to remove it (hide it).</li> <li>The * refers to the set of windows that are not tagged.</li> <li>The right-most tag is always \"add\" which is a menu of tags when   clicked, to add a tag to the list/show the tagged set of windows.</li> <li>Under add is \"new tag...\" to create a new tag (should probably     exist in window tag menu also)</li> <li>You get 10 numbered presets by default and can add named ones.</li> <li>Presets hold a set of tags. The menu shows all tags and lets you   check/uncheck them.</li> <li>Windows have a tag menu which lets you associate a tag with it   quickly.</li> <li>The top bar can be shown:</li> <li>Always</li> <li>On mouseover</li> <li>While key held down</li> <li>When key pressed (toggled)</li> <li>KDE has something like this system now.</li> </ul>"},{"location":"Help/Applications/","title":"Settings for specific windows (Per-application settings)","text":"<p>Per-application settings are specified in the  section of <code>rc.xml</code>"},{"location":"Help/Applications/#syntax","title":"Syntax","text":"<p>A per-app setting is specified as follows: <code> <pre><code>&lt;applications&gt;\n  ...\n  &lt;application name=\"NAME\" class=\"CLASS\" role=\"ROLE\" title=\"TITLE\" type=\"TYPE\"&gt;\n    ...PROPERTIES...\n  &lt;/application&gt;\n  ...\n&lt;/applications&gt;\n</code></pre> <p></p> <p>A complete list of possible properties to set is in the default rc.xml file, which you can find in <code>/etc/xdg/openbox/rc.xml</code>.</p>"},{"location":"Help/Applications/#finding-the-class-name-role-title-and-type-parameters","title":"Finding the class, name, role, title and type parameters","text":"<p>Per-application settings let you match on what we call class, name, role, title and type. These can all be determined with the <code>obxprop</code> utility. Run <code>obxprop | grep \"^_OB_APP\"</code> to see the value of these five properties. The output will look like <code> <pre><code>_OB_APP_TYPE(UTF8_STRING) = \"normal\"\n_OB_APP_CLASS(UTF8_STRING) = \"Google-chrome\"\n_OB_APP_NAME(UTF8_STRING) = \"google-chrome\"\n_OB_APP_ROLE(UTF8_STRING) =\n_OB_APP_TITLE(UTF8_STRING) = \"Google Chrome\"\n</code></pre> <p></p> <p>You have to specify at least one of class and name. Optionally, you may specify more than one, in which case they must all match for the rule to be applied. You may also optionally specify role and type. Note that the title matched is the one when the window was mapped. Many programs set the title just after mapping the window which means the value Openbox sees as it is determining which rules to apply is sometimes empty or something like \"Untitled\". The _OB_APP_TITLE property will show the value that Openbox used, not the current title.</p>"},{"location":"Help/Applications/#matching-windows-with-wildcards","title":"Matching windows with wildcards","text":"<p>When specifying the name, class, or role for a rule, you can use simple wildcard matching with the \"*\" and \"?\" characters. A \"*\" matches any number of characters and a \"?\" matches any single character.</p>"},{"location":"Help/Applications/#matching-against-multiple-rules","title":"Matching against multiple rules","text":"<p>As well, multiple rules can be applied to the same window. This lets you do more with less writing. For instance you could write one rule to match against all windows and then later rules could further change things for more specific windows. The rules are matched in the order they appear in your configuration file, so later rules will override previous rules if they both specify the same setting for a window.</p>"},{"location":"Help/Applications/#example-of-per-app-settings","title":"Example of per-app settings","text":"<p>Here's an example from rc.xml that uses wildcards, and matches multiple rules against windows: <code> <pre><code>&lt;applications&gt;\n  &lt;!-- match all windows, and remove their decorations --&gt;\n  &lt;application class=\"*\"&gt;\n    &lt;decor&gt;no&lt;/decor&gt;\n  &lt;/application&gt;\n  &lt;!-- orage does get decorations though.\n       calender app, see http://www.xfce.org/projects/orage/ --&gt;\n  &lt;application class=\"Orage\"&gt;\n    &lt;decor&gt;yes&lt;/decor&gt;\n  &lt;/application&gt;\n  &lt;!-- my xterm with screen in it must always be on desktop 2,\n       maximized and below everything else --&gt;\n  &lt;application name=\"screen\"&gt;\n    &lt;desktop&gt;2&lt;/desktop&gt;\n    &lt;maximized&gt;yes&lt;/maximized&gt;\n    &lt;layer&gt;below&lt;/layer&gt;\n  &lt;/application&gt;\n  &lt;!-- i want firefox on desktop 3 and maximized --&gt;\n  &lt;application name=\"Firefox*\"&gt;\n    &lt;desktop&gt;3&lt;/desktop&gt;\n    &lt;maximized&gt;yes&lt;/maximized&gt;\n  &lt;/application&gt;\n  &lt;!-- MPlayer will follow me around when i switch desktop.\n       that way i can always watch my vids when coding.\n       same goes for Realplayer --&gt;\n  &lt;application class=\"MPlayer\"&gt;\n    &lt;desktop&gt;all&lt;/desktop&gt;\n    &lt;layer&gt;above&lt;/layer&gt;\n  &lt;/application&gt;\n  &lt;application class=\"Realplay.bin\"&gt;\n    &lt;desktop&gt;all&lt;/desktop&gt;\n    &lt;layer&gt;above&lt;/layer&gt;\n  &lt;/application&gt;\n  &lt;!-- i want nwn always maximized, same for openttd --&gt;\n  &lt;application name=\"Neverwinter Nights Client\"&gt;\n    &lt;maximized&gt;yes&lt;/maximized&gt;\n  &lt;/application&gt;\n  &lt;application class=\"openttd\"&gt;\n    &lt;maximized&gt;yes&lt;/maximized&gt;\n  &lt;/application&gt;\n  &lt;!-- A is for Amarok, A is the 1st letter in the alphabet, so\n       move Amarok to the first desktop --&gt;\n  &lt;application class=\"Amarokapp\"&gt;\n    &lt;desktop&gt;1&lt;/desktop&gt;\n    &lt;maximized&gt;yes&lt;/maximized&gt;\n  &lt;/application&gt;\n  &lt;!-- Easytag is obviously something which belongs on desktop 6, duh --&gt;\n  &lt;application name=\"easytag\"&gt;\n    &lt;desktop&gt;6&lt;/desktop&gt;\n    &lt;maximized&gt;yes&lt;/maximized&gt;\n  &lt;/application&gt;\n&lt;/applications&gt;\n</code></pre> <p></p>"},{"location":"Help/Applications/#graphically-managing-per-application-settings","title":"Graphically managing per-application settings","text":"<p>OBApps is a GUI tool for creating and editing per-application settings. It allows you to click on a window to create a matching rule and to easily set all the properties documented in the example configuration</p>"},{"location":"Help/Autostart/","title":"Autostart","text":"<p> When you log in with the \"Openbox\" session type, or launch Openbox with the <code>openbox-session</code> command, the <code>environment</code> script will be executed to set up your environment, and the <code>autostart</code> script can launch any applications you want to run at startup.</p> <p>When you run the <code>openbox</code> command on its own, the autostart scripts will not run. They are run by <code>openbox-session</code> or when you log in graphically with the \"Openbox\" session type.</p> <p>Note: Some distributions ship an \"openbox\" session type (for display managers) that simply calls the openbox binary. You want to select the entry that mentions \"session.\"</p> <p>You can use the environment script to set up any custom environment variables you would like to use in your login session.</p> <p>You can use the autostart script to launch a panel, to set your desktop wallpaper, or anything else. Once Openbox starts, the system-wide default script, located at <code>/etc/xdg/openbox/autostart</code>, will be run. Then the user script at <code>~/.config/openbox/autostart</code> is run afterward.</p>"},{"location":"Help/Autostart/#setting-up-your-environment","title":"Setting up your environment","text":"<p>If you would like to set environment variables that will affect everything run in your current session (including Openbox), you can place them in <code>~/.config/openbox/environment</code>. Here's an example <code>~/.config/openbox/environment</code> file: <code> <pre><code># Set up my own path\nexport PATH=$HOME/bin:$PATH\n\n# Change the language used from the system's default\nexport LC_CTYPE=ja_JP.utf8\n\n# SCIM for typing non-english characters\nexport XMODIFIERS=@im=SCIM\nexport GTK_IM_MODULE=scim\nexport QT_IM_MODULE=scim\n</code></pre> <p></p>"},{"location":"Help/Autostart/#making-your-own-autostart","title":"Making your own autostart","text":"<p>The system can provide applications that run automatically on login (see <code>/usr/libexec/openbox-xdg-autostart --list</code>), but you may wish to run others.</p> <p>To run commands for your user account only, create and edit a file called <code>~/.config/openbox/autostart</code>. Place any commands you want to run on startup in the file, each ending with a <code>&amp;</code> character.</p> <p>Here's an example <code>~/.config/openbox/autostart</code> file: <code> <pre><code># Programs that will run after Openbox has started\n\n# Set the wallpaper\nhsetroot ~/wallpaper.png &amp;\n\n# Run a Composite manager\nxcompmgr -c -t-5 -l-5 -r4.2 -o.55 &amp;\n\n# SCIM support (for typing non-english characters)\nscim -d &amp;\n\n# A panel for good times\nfbpanel &amp;\n</code></pre> <p></p> <p>To run commands for all users system-wide, place them in a similar file in <code>/etc/xdg/openbox/autostart</code>.</p> <p>Make sure that you end any commands with \"&amp;\" so that they are run in the background, or any programs after it will not run.</p> <p>You do not need to run Openbox at the end of this script. This script is run just after Openbox has finished setting up, and is launched by <code>openbox-session</code>.</p>"},{"location":"Help/Bindings/","title":"Bindings","text":"<p>Key and mouse bindings are created in your <code>~/.config/openbox/rc.xml</code> file. You should copy the file from <code>/etc/xdg/openbox/rc.xml</code> to <code>~/.config/openbox/rc.xml</code> to edit it, if that file does not already exist.</p> <p>Key bindings and mouse bindings both use Actions to specify what they will do. There are a lot of actions available to you. Here we'll talk about how to write a generic key binding, or mouse binding. See the actions documentation for details about what actions are available to use and their varied options.</p>"},{"location":"Help/Bindings/#key-bindings","title":"Key bindings","text":"<p>Key bindings are found in the  section of your <code>rc.xml</code> configuration file. Any bindings outside of that section are not valid and will be ignored. <p>Here are a few example key bindings from the default configuration file, to give us an idea of what we'll be talking about: <code> <pre><code>&lt;keyboard&gt;\n  &lt;keybind key=\"A-F4\"&gt;\n    &lt;action name=\"Close\"/&gt;\n  &lt;/keybind&gt;\n  &lt;keybind key=\"A-Escape\"&gt;\n    &lt;action name=\"Lower\"/&gt;\n    &lt;action name=\"FocusToBottom\"/&gt;\n    &lt;action name=\"Unfocus\"/&gt;\n  &lt;/keybind&gt;\n  &lt;keybind key=\"A-space\"&gt;\n    &lt;action name=\"ShowMenu\"&gt;&lt;menu&gt;client-menu&lt;/menu&gt;&lt;/action&gt;\n  &lt;/keybind&gt;\n&lt;/keyboard&gt;\n</code></pre> <p></p>"},{"location":"Help/Bindings/#syntax","title":"Syntax","text":"<p>A key binding is specified as follows: <code> <pre><code>&lt;keyboard&gt;\n  ...\n  &lt;keybind key=\"KEY-COMBINATION...\"&gt;\n    ...ACTIONS...\n  &lt;/keybind&gt;\n  ...\n&lt;/keyboard&gt;\n</code></pre> <p></p>"},{"location":"Help/Bindings/#key-combination","title":"Key combination","text":"<p>KEY-COMBINATION is the key combination which you want to bind to the actions. The format for the KEY-COMBINATION is: <code>Modifier-Modifier-Key</code>. Any number of modifiers (0 or more) can be used together, and they are each separated by a \"-\". Multiple KEY-COMBINATION can be specified in one keybind by separating them with spaces. This is useful if you use multiple keybinds for a thing that is quite complicated to specify.</p>"},{"location":"Help/Bindings/#modifiers","title":"Modifiers","text":"Modifier keys S Shift key C Control key A Alt key W Super key (Usually bound to the Windows key on keyboards which have one) M Meta key H Hyper key (If it is bound to something) <p>You can also use <code>Mod1</code> through <code>Mod5</code> as the modifiers to directly select a modifier mask (e.g. <code>Mod1</code> to select <code>Mod1Mask</code>), but this is for advanced users who have customized their modifier mapping with <code>xmodmap</code>.</p>"},{"location":"Help/Bindings/#keys","title":"Keys","text":"<p>The Key is the name of the key, such as \"a\", \"space\", \"Escape\", \"less\", or \"F1\". You can find the name of any key by using the <code>xev</code> command in a terminal, pressing the desired key, and watching the output from <code>xev</code> in the terminal. For example, the following <code>xev</code> output indicates, on the third line, that the Menu key was pressed.</p> <p><code> <pre><code>KeyRelease event, serial 36, synthetic NO, window 0x1e00001,\n    root 0x7e, subw 0x0, time 29920856, (168,-7), root:(900,313),\n    state 0x0, keycode 135 (keysym 0xff67, Menu), same_screen YES,\n    XLookupString gives 0 bytes:\n    XFilterEvent returns: False\n</code></pre> <p></p> <p>This key can then be used as in the following example.</p> <p><code> <pre><code>&lt;keyboard&gt;\n  ...\n  &lt;keybind key=\"C-Menu S-F10\"&gt;\n    &lt;action name=\"ShowMenu\"&gt;\n      &lt;menu&gt;root-menu&lt;/menu&gt;\n    &lt;/action&gt;\n  &lt;/keybind&gt;\n  ...\n&lt;/keyboard&gt;\n</code></pre> <p></p> <p>Keys can also be specified by their numeric codes. This can be done by specifying the keycode in hex. To take the above example, the keycode for the Menu key is 135, which is 0x87 in hexadecimal. This can then be used:</p> <p><code> <pre><code>&lt;keyboard&gt;\n  ...\n  &lt;keybind key=\"C-0x87\"&gt;\n    &lt;action name=\"ShowMenu\"&gt;\n      &lt;menu&gt;root-menu&lt;/menu&gt;\n    &lt;/action&gt;\n  &lt;/keybind&gt;\n  ...\n&lt;/keyboard&gt;\n</code></pre> <p></p> <p>Note that the \"0x\" prefix is required to interpret the key as a numeric keycode, and that the hex characters are case-insensitive (i.e. you can use \"0xAE\" or \"0xae\").</p>"},{"location":"Help/Bindings/#actions","title":"Actions","text":"<p>The ACTIONS can be any number of actions. They will generally be executed in order from the first to the last.</p>"},{"location":"Help/Bindings/#key-chains","title":"Key chains","text":"<p>You can create Emacs-style key chains simply by nesting key bindings inside each other. Here's an example: <code> <pre><code>  &lt;keybind key=\"C-f\"&gt;\n    &lt;keybind key=\"x\"&gt;\n      &lt;action name=\"ToggleMaximizeFull\"/&gt;\n    &lt;/keybind&gt;\n    &lt;keybind key=\"s\"&gt;\n      &lt;action name=\"ToggleShade\"/&gt;\n    &lt;/keybind&gt;\n  &lt;/keybind&gt;\n</code></pre> <p></p> <p>In order to maximize a window using this key binding you would press the Control key and the \"f\" key together (which is written as C-f), then you would release everything and press the \"x\" key.</p> <p>To shade a window, you would press Control and the \"f\" key together, and then release everything and press the \"s\" key.</p> <p>You can create key chains within key chains, with as many levels as you want, if you wish to.</p>"},{"location":"Help/Bindings/#the-key-chain-dialog","title":"The key chain dialog","text":"<p> When you start a key chain, after a short delay, a small dialog will appear in the top left corner of the screen to show you where you are in the key chain.</p> <p>As long as you are in a key chain, other key bindings will not work except the ones found inside the key chain.</p>"},{"location":"Help/Bindings/#cancelling-key-chains","title":"Cancelling key chains","text":"<p>If you leave Openbox in a key chain state for too long without completing it, Openbox will cancel the key chain and restore your normal key bindings.</p> <p>You can also use the \"C-g\" (Control key and \"g\" key together), in the default configuration, to cancel any key chain which you are in. The choice of this key is controlled by the  in the  section of the <code>rc.xml</code> configuration file. <p>The default  is defined as this: <code> <pre><code>&lt;keyboard&gt;\n  &lt;chainQuitKey&gt;C-g&lt;/chainQuitKey&gt;\n  ...\n&lt;/keyboard&gt;\n</code></pre> <p></p>"},{"location":"Help/Bindings/#chrooting-key-chains","title":"Chrooting key chains","text":"<p>By default, once you get to the terminal end of a key chain, and run some actions with it, Openbox will exit the key chain and return to the normal key bindings. With a \"chrooted\" key chain, Openbox will not leave the key chain automatically, and when you use keys further along the chain, it will stay within the chroot.</p> <p>There are a number of examples of how this could be used, so you can get a better idea. You could use this to use the arrow keys to change desktops, for instance. A key chain setup such as: <code> <pre><code>  &lt;keybind key=\"C-A-d\" chroot=\"true\"&gt;\n    &lt;keybind key=\"Up\"&gt;&lt;action name=\"DesktopUp\"&gt;&lt;dialog&gt;no&lt;/dialog&gt;&lt;/action&gt;&lt;/keybind&gt;\n    &lt;keybind key=\"Down\"&gt;&lt;action name=\"DesktopDown\"&gt;&lt;dialog&gt;no&lt;/dialog&gt;&lt;/action&gt;&lt;/keybind&gt;\n    &lt;keybind key=\"Left\"&gt;&lt;action name=\"DesktopLeft\"&gt;&lt;dialog&gt;no&lt;/dialog&gt;&lt;/action&gt;&lt;/keybind&gt;\n    &lt;keybind key=\"Right\"&gt;&lt;action name=\"DesktopRight\"&gt;&lt;dialog&gt;no&lt;/dialog&gt;&lt;/action&gt;&lt;/keybind&gt;\n    &lt;keybind key=\"Escape\"&gt;&lt;action name=\"BreakChroot\"/&gt;&lt;/keybind&gt;\n  &lt;/keybind&gt;\n</code></pre> <p></p> <p>This key chain would mean that when you pressed and released Control-Alt-D, you would enter a chroot. From then on, other key bindings would not function, but the Arrow keys by themselves would move your around your desktops. Pressing Escape or Control-G (in the default configuration) would take you back out of the chroot and return your key bindings to normal.</p> <p>Once you enter a chrooted key chain, Openbox will not time out and leave the chain. You will remain inside the key chain until you use a BreakChroot action, as shown here, or press the . BreakChroot actions are different from the  in that they will only break out of one chroot. So, if you have nested chroots, you can break out of only as many as you want, by placing 1 or more BreakChroot actions in a key binding."},{"location":"Help/Bindings/#key-quoting-with-chroots","title":"Key quoting with Chroots","text":"<p>Another use for chroots is \"key quoting\". This is used when you run an Openbox session in a window, such as a VNC client. In order to use key bindings inside the VNC, generally, you have to make sure that they are different from the ones in your main Openbox session.</p> <p>With key quoting, you can use the same key bindings in both. Here's an example: <code> <pre><code>  &lt;keybind key=\"C-A-q\" chroot=\"true\"&gt;\n    &lt;keybind key=\"C-A-q\"&gt;&lt;action name=\"BreakChroot\"/&gt;&lt;/keybind&gt;\n  &lt;/keybind&gt;\n</code></pre> <p></p> <p>With this example, when you pressed Control-Alt-Q, Openbox would enter the chroot. Then your normal Openbox key bindings would stop working and would instead be passed through to the VNC session (assuming you have it focused). When you were done, you could press Control-Alt-Q again, and your normal key bindings would be restored in you main Openbox session.</p>"},{"location":"Help/Bindings/#creating-hotkeys-from-the-command-line","title":"Creating hotkeys from the command line","text":"<p>OBHotkey lets you add/remove key bindings from the command line.</p>"},{"location":"Help/Bindings/#mouse-bindings","title":"Mouse bindings","text":"<p>Mouse bindings are used to bind Actions to mouse events. These are used to control and define most of Openbox's interactive behavior, from what happens when you drag a window's titlebar, to when you press a window's Close button.</p> <p>Mouse bindings are found in the  section of your <code>rc.xml</code> configuration file. Any bindings outside of that section are not valid and will be ignored. <p> It is highly recommended that you build any custom mouse bindings from those in the default configuration, or the mouse-focus example, rather than starting from nothing, as they are rather intricate and have some advanced but subtle features.</p> <p>To get us started, here are a few example mouse bindings from the default configuration file: <code> <pre><code>&lt;mouse&gt;\n  &lt;context name=\"Titlebar\"&gt;\n    &lt;mousebind button=\"Left\" action=\"Press\"&gt;\n      &lt;action name=\"Focus\"/&gt;\n      &lt;action name=\"Raise\"/&gt;\n    &lt;/mousebind&gt;\n    &lt;mousebind button=\"Left\" action=\"Click\"&gt;\n      &lt;action name=\"Unshade\"/&gt;\n    &lt;/mousebind&gt;\n    &lt;mousebind button=\"Left\" action=\"Drag\"&gt;\n      &lt;action name=\"Move\"/&gt;\n    &lt;/mousebind&gt;\n    &lt;mousebind button=\"Left\" action=\"DoubleClick\"&gt;\n      &lt;action name=\"ToggleMaximizeFull\"/&gt;\n    &lt;/mousebind&gt;\n\n    &lt;mousebind button=\"Up\" action=\"Click\"&gt;\n      &lt;action name=\"Shade\"/&gt;\n      &lt;action name=\"FocusToBottom\"/&gt;\n      &lt;action name=\"Unfocus\"/&gt;\n    &lt;/mousebind&gt;\n    &lt;mousebind button=\"Down\" action=\"Click\"&gt;\n      &lt;action name=\"Unshade\"/&gt;\n    &lt;/mousebind&gt;\n  &lt;/context&gt;\n&lt;/mouse&gt;\n</code></pre> <p></p>"},{"location":"Help/Bindings/#syntax_1","title":"Syntax","text":"<p>A mouse binding is specified as follows: <code> <pre><code>&lt;mouse&gt;\n  ...\n  &lt;context name=\"CONTEXT...\"&gt;\n    &lt;mousebind button=\"BUTTON...\" action=\"EVENT\"&gt;\n      ...ACTIONS...\n    &lt;/mousebind&gt;\n  &lt;/context&gt;\n  ...\n&lt;/mouse&gt;\n</code></pre> <p></p> <p>Any number of s may appear within a , and any number of Actions may appear within a ."},{"location":"Help/Bindings/#context","title":"Context","text":"<p>Mouse bindings, unlike key bindings, are made within contexts. The CONTEXT represents what you are clicking/dragging on with your mouse (with the exception of the special MoveResize context). You can create identical mousebinds for multiple contexts at once by specifying the contexts separated by spaces in the name attribute.</p> <ul> <li>Frame</li> <li>The entire window frame for any window (except the desktop). This     includes both the window decorations (if any) and the application     window itself.<ul> <li>Note: When a button is bound in this context, the clicks will   not be passed through to the application. Use with care.</li> </ul> </li> </ul> <ul> <li>Client</li> <li>The application window, inside the window decorations.<ul> <li>Note: When a button is bound in this context, the clicks   will be passed through to the application. However, because of   this, only \"Press\" events can be used for this context.</li> </ul> </li> </ul> <ul> <li>Desktop</li> <li>The desktop, or background, regardless of if you use a program to     place icons on your desktop or not (such as in KDE and GNOME). This     is also called the \"root window\" frequently.</li> </ul> <ul> <li>Root</li> <li>This works similarly to the Desktop context. However, this is a     special context for bindings you only want to work only when you     don't have a program running to place icons on your desktop.     Generally this is only used for the root menus, so that they won't     override the menus provided by your desktop icons.</li> </ul> <ul> <li>Titlebar</li> <li>The decorations on the top of each application window</li> </ul> <ul> <li>Top, Bottom, Left, Right</li> <li>The top, bottom, left or right edge of a window</li> </ul> <ul> <li>TLCorner, TRCorner, BLCorner, BRCorner</li> <li>The top-left, top-right, bottom-left or bottom-right corner of a     window</li> </ul> <ul> <li>Icon</li> <li>The window icon shown in window titlebars</li> </ul> <ul> <li>Iconify</li> <li>The iconify button shown in window titlebars</li> </ul> <ul> <li>Maximize</li> <li>The maximize button shown in window titlebars</li> </ul> <ul> <li>Close</li> <li>The close button shown in window titlebars</li> </ul> <ul> <li>AllDesktops</li> <li>The all-desktops (omnipresent) button shown in window titlebars</li> </ul> <ul> <li>Shade</li> <li>The shade button shown in window titlebars</li> </ul> <ul> <li>MoveResize</li> <li>Bindings in this special context are available while a window is     being moved or resized interactively</li> </ul>"},{"location":"Help/Bindings/#button","title":"Button","text":"<p>The BUTTON specifies which mouse button is used to trigger the mouse binding.</p> <p>The named buttons are: <code>Left</code>, <code>Right</code>, <code>Middle</code>, <code>Up</code> (scroll wheel up) and <code>Down</code> (scroll wheel down). To bind more than 5 buttons, use <code>Button6</code>, <code>Button7</code> and so on.</p> <p>You can also prefix the button name with a modifier as for key bindings (see above section), for example <code>S-A-Down</code> for shift-alt-scroll wheel down.</p> <p>You can create multiple mousebinds that trigger the same set of actions by specifying them separated by spaces.</p>"},{"location":"Help/Bindings/#event","title":"Event","text":"<p>The EVENT for a mouse binding specifies what mouse event triggers the actions contained within.</p> <ul> <li>Press</li> <li>The mouse button was pressed down in the specified context</li> <li>Click</li> <li>The mouse button was pressed and released in the specified context</li> <li>DoubleClick</li> <li>The mouse button was double clicked in the specified context</li> <li>Release</li> <li>The mouse button was released in the specified context</li> <li>Drag</li> <li>The mouse was dragged with the mouse button held down in the     specified context</li> </ul>"},{"location":"Help/Bindings/#actions_1","title":"Actions","text":"<p>The ACTIONS can be any number of actions. They will generally be executed in order from the first to the last.</p>"},{"location":"Help/Configuration/","title":"Configuration","text":"<p>Openbox configuration is made essentially by modifying just one file called rc.xml.</p> <p>Default configuration file can by default be found in <code>/etc/xdg/openbox/</code> and a user specific file can be placed in <code>~/.config/openbox/</code>.</p> <p>By default there is also <code>menu.xml</code> which is for menu configuration. Menu configuration is separated from rest of the configs.</p> <p><code>rc.xml</code> is separated into different sections. All the options are discussed below with examples.</p>"},{"location":"Help/Configuration/#resistance","title":"Resistance","text":"<pre><code>&lt;resistance&gt;\n&lt;strength&gt;10&lt;/strength&gt;\n&lt;screen_edge_strength&gt;20&lt;/screen_edge_strength&gt;\n&lt;/resistance&gt;\n</code></pre> <p>strength Tells Openbox how much resistance (in pixels) there is between two windows before it lets them overlap.</p> <p>screen_edge_strength Basically the same as strength but between window and the screen edge.</p>"},{"location":"Help/Configuration/#focus","title":"Focus","text":"<pre><code>&lt;focus&gt;\n&lt;focusNew&gt;yes&lt;/focusNew&gt;\n&lt;focusLast&gt;yes&lt;/focusLast&gt;\n&lt;followMouse&gt;no&lt;/followMouse&gt;\n&lt;focusDelay&gt;200&lt;/focusDelay&gt;\n&lt;underMouse&gt;no&lt;/underMouse&gt;\n&lt;raiseOnFocus&gt;no&lt;/raiseOnFocus&gt;\n&lt;/focus&gt;\n</code></pre> <p>focusNew Openbox will automatically give focus to new windows when they are created, otherwise the focus will stay as it is.</p> <p>followMouse Makes focus follow mouse. e.g. when the mouse is being moved the focus will be given to window under the mouse cursor.</p> <p>focusLast When switching desktops, focus the last focused window on that desktop again, regardless of where the mouse is. Only applies followMouse is set.</p> <p>focusDelay The time (in milliseconds) Openbox will wait before giving focus to the window under mouse cursor. Only applies if followMouse is set.</p> <p>underMouse Focus windows under the mouse not only when the mouse moves, but also when it enters another window due to other reasons (e.g. the window the mouse was in moved/closed/iconified etc). Only applies if followMouse is set.</p> <p>raiseOnFocus Also raises windows to top when they are focused. Only applies if followMouse is set.</p>"},{"location":"Help/Configuration/#placement","title":"Placement","text":"<pre><code>&lt;placement&gt;\n&lt;policy&gt;Smart&lt;/policy&gt;\n&lt;center&gt;no&lt;/center&gt;\n&lt;/placement&gt;\n</code></pre> <p>policy can be either Smart or UnderMouse.</p> <ul> <li>Smart will cause new windows to be placed automatically by Openbox.</li> <li>UnderMouse makes new windows to be placed under the mouse cursor.</li> </ul> <p>center can be either yes or no. If it is enabled, windows will open centered in the free area found.</p>"},{"location":"Help/Configuration/#theme","title":"Theme","text":"<pre><code>&lt;theme&gt;\n&lt;name&gt;Clearlooks&lt;/name&gt;\n&lt;titleLayout&gt;NLIMC&lt;/titleLayout&gt;\n&lt;keepBorder&gt;yes&lt;/keepBorder&gt;\n&lt;animateIconify&gt;yes&lt;/animateIconify&gt;\n&lt;font place=\"ActiveWindow\"&gt;\n&lt;name&gt;sans&lt;/name&gt;\n&lt;size&gt;8&lt;/size&gt;\n&lt;weight&gt;bold&lt;/weight&gt;\n&lt;slant&gt;normal&lt;/slant&gt;\n&lt;/font&gt;\n&lt;font place=\"InactiveWindow\"&gt;\n&lt;name&gt;sans&lt;/name&gt;\n&lt;size&gt;8&lt;/size&gt;\n&lt;weight&gt;bold&lt;/weight&gt;\n&lt;slant&gt;normal&lt;/slant&gt;\n&lt;/font&gt;\n&lt;font place=\"MenuHeader\"&gt;\n&lt;name&gt;sans&lt;/name&gt;\n&lt;size&gt;9&lt;/size&gt;\n&lt;weight&gt;normal&lt;/weight&gt;\n&lt;slant&gt;normal&lt;/slant&gt;\n&lt;/font&gt;\n&lt;font place=\"MenuItem\"&gt;\n&lt;name&gt;sans&lt;/name&gt;\n&lt;size&gt;9&lt;/size&gt;\n&lt;weight&gt;normal&lt;/weight&gt;\n&lt;slant&gt;normal&lt;/slant&gt;\n&lt;/font&gt;\n&lt;font place=\"OnScreenDisplay\"&gt;\n&lt;name&gt;sans&lt;/name&gt;\n&lt;size&gt;9&lt;/size&gt;\n&lt;weight&gt;bold&lt;/weight&gt;\n&lt;slant&gt;normal&lt;/slant&gt;\n&lt;/font&gt;\n&lt;/theme&gt;\n</code></pre> <p>name The name of the Openbox theme to use.</p> <p>titleLayout tells in which order and what buttons should be in a window's titlebar. The following letters can be used, each only once.</p> <ul> <li>N :window icon</li> <li>L :window label (aka. title)</li> <li>I: iconify</li> <li>M: maximize</li> <li>C: close</li> <li>S: shade (roll up/down)</li> <li>D: omnipresent (on all desktops).</li> </ul> <p></p> <p></p> <p>keepBorder tells if windows should keep the border drawn by Openbox when window decorations are turned off.</p> <p>animateIconify adds a little iconification animation if enabled. font Specifies the font to use for a specific element of the window. Place can be either of:</p> <ul> <li>ActiveWindow: Title bar of the active window</li> <li>InactiveWindow: Title bar of the inactive window</li> <li>MenuHeader: Titles in the menu</li> <li>MenuItem: Items in the menu</li> <li>OnScreenDisplay: Text in popups such as window cycling or desktop switching popups</li> </ul> <p>Childnodes for each place are name, specifying the font to use (defaults to sans, an alias for all sans serif fonts), size in px, weight, either normal or bold and slant, either italic or normal.</p> <p>Themes themselves are described on the theme specification page.</p>"},{"location":"Help/Configuration/#desktops","title":"Desktops","text":"<pre><code>&lt;desktops&gt;\n&lt;number&gt;4&lt;/number&gt;\n&lt;firstdesk&gt;1&lt;/firstdesk&gt;\n&lt;popupTime&gt;1000&lt;/popupTime&gt;\n&lt;names&gt;\n&lt;name&gt;work&lt;/name&gt;\n&lt;name&gt;play&lt;/name&gt;\n&lt;name&gt;dull&lt;/name&gt;\n&lt;name&gt;boy&lt;/name&gt;\n&lt;/names&gt;\n&lt;/desktops&gt;\n</code></pre> <p>number The number of virtual desktops to use.</p> <p>firstdesk The number of the desktop to use when first started.</p> <p>popupTime Time (in milliseconds) to show the popup when switching desktops. Can be set to 0 to disable the popup completely.</p> <p>names Each name tag names your desktops, in ascending order. Unnamed desktops will be named automatically depending on the locale. You can name more desktops than specified in number if you want.</p>"},{"location":"Help/Configuration/#resize-and-move","title":"Resize (and move)","text":"<pre><code>&lt;resize&gt;\n&lt;drawContents&gt;no&lt;/drawContents&gt;\n&lt;popupShow&gt;Always&lt;/popupShow&gt;\n&lt;popupPosition&gt;Fixed&lt;/popupPosition&gt;\n&lt;popupFixedposition&gt;\n&lt;x&gt;400&lt;/x&gt;\n&lt;y&gt;center&lt;/y&gt;\n&lt;/popupFixedPosition&gt;\n&lt;/resize&gt;\n</code></pre> <p>drawContents Resize the program inside the window while resizing. When disabled the unused space will be filled with a uniform color during a resize.</p> <p>popupShow When to show the move/resize popup. Always always shows it, Never never shows it, Nonpixel shows it only when resizing windows that have specified they are resized in increments larger than one pixel, usually terminals.</p> <p>popupPosition Where to show the popup.</p> <ul> <li>Top shows the popup above the titlebar of the window.</li> <li>Center shows it centered on the window.</li> <li>Fixed shows it in a fixed location on the screen specified by popupFixedPosition.</li> </ul> <p>popupFixedPosition Specifies where on the screen to show the position when Fixed. Both x and y take coordinates as described here.</p>"},{"location":"Help/Configuration/#applications","title":"Applications","text":"<p>This section sets specific settings for applications, and is quite complicated, so it has its own page.</p>"},{"location":"Help/Configuration/#keyboard","title":"Keyboard","text":"<pre><code>&lt;keyboard&gt;\n&lt;rebindOnMappingNotify&gt;yes&lt;/rebindOnMappingNotify&gt;\n&lt;chainQuitKey&gt;C-g&lt;/chainQuitKey&gt;\n&lt;keybind&gt; ...\n    ...\n  &lt;/keybind&gt;\n&lt;/keyboard&gt;\n</code></pre> <p>rebindOnMappingNotify If this is enabled, keybinds will be rebound if the keyboard layout changes at runtime. It is enabled by default. The rest of this section contains keyboard shortcuts and is described on the bindings page.</p>"},{"location":"Help/Configuration/#mouse","title":"Mouse","text":"<pre><code>&lt;mouse&gt;\n&lt;dragThreshold&gt;8&lt;/dragThreshold&gt;\n&lt;doubleClickTime&gt;200&lt;/doubleClickTime&gt;\n&lt;screenEdgeWarpTime&gt;400&lt;/screenEdgeWarpTime&gt;\n&lt;context&gt; ...\n    ...\n  &lt;/context&gt;\n&lt;/mouse&gt;\n</code></pre> <p>dragThreshold How many pixels you need to drag for it to be recognized as a drag operation.</p> <p>doubleClickTime Time (in milliseconds) allowed between two separate clicks to register as a <code>DoubleClick</code>.</p> <p>screenEdgeWarpTime Time (in milliseconds) to pause between two consecutive desktop switches done by holding the cursor next to the screen edge. Set to 0 to disable this feature. The rest of this section contains mouse bindings and is described on the bindings page.</p>"},{"location":"Help/Configuration/#margins","title":"Margins","text":"<pre><code>&lt;margins&gt;\n&lt;top&gt;50&lt;/top&gt;\n&lt;left&gt;0&lt;/left&gt;\n&lt;right&gt;20&lt;/right&gt;\n&lt;bottom&gt;0&lt;/bottom&gt;\n&lt;/margins&gt;\n</code></pre> <p>Each tag specifies the amount of pixels to reserve at the respective edge of the screen. New windows will not be placed in those areas, and maximized windows will not cover them.</p>"},{"location":"Help/Configuration/#menu","title":"Menu","text":"<pre><code>&lt;menu&gt;\n&lt;hideDelay&gt;250&lt;/hideDelay&gt;\n&lt;middle&gt;no&lt;/middle&gt;\n&lt;submenuShowDelay&gt;100&lt;/submenuShowDelay&gt;\n&lt;submenuHideDelay&gt;400&lt;/submenuHideDelay&gt;\n&lt;applicationIcons&gt;yes&lt;/applicationIcons&gt;\n&lt;manageDesktops&gt;yes&lt;/manageDesktops&gt;\n&lt;file&gt;menu.xml&lt;/file&gt;\n&lt;/menu&gt;\n</code></pre> <p>hideDelay How long (in milliseconds) you have to hold the mouse button down for it to be hidden automatically when you release it. If you hold shorter, it will stay up when you release.</p> <p>middle Position menus centered vertically instead of aligned to the top.</p> <p>submenuShowDelay and submenuHideDelay affect how submenus pop up when moving across them. When moving away from a submenu it is closed after submenuHideDelay, and when moving into one, it is opened after submenuShowDelay. When moving from one submenu to another, the hide delay is only used if it is lower than the show delay (e.g. by default it is not used). The old submenu is closed after HideDelay milliseconds, and after ShowDelay milliseconds (after moving) the new one is shown (and the old one is hidden even if HideDelay has not expired yet).</p> <p>applicationIcons Whether to show window icons in the Desktop and Windows menus (client-list-menu and client-list-combined-menu).</p> <p>manageDesktops Whether to show the Add new desktop and Remove last desktop entries in the Desktop and Windows menus.</p> <p>file Specify files to load menu specifications from. Can be given more than once, although care should be taken to avoid id clashes. Files are searched for in the user directory first and then in the system directory.</p>"},{"location":"Help/Configuration/#dock","title":"Dock","text":"<pre><code>&lt;dock&gt;\n&lt;position&gt;TopLeft&lt;/position&gt;\n&lt;stacking&gt;Normal&lt;/stacking&gt;\n&lt;direction&gt;Vertical&lt;/direction&gt;\n&lt;floatingX&gt;0&lt;/floatingX&gt;\n&lt;floatingY&gt;0&lt;/floatingY&gt;\n&lt;autoHide&gt;no&lt;/autoHide&gt;\n&lt;hideDelay&gt;300&lt;/hideDelay&gt;\n&lt;showDelay&gt;300&lt;/showDelay&gt;\n&lt;moveButton&gt;Button8&lt;/moveButton&gt;\n&lt;noStrut&gt;yes&lt;/noStrut&gt;\n&lt;/dock&gt;\n</code></pre> <p>The dock is only shown when one or more dockapps are running.</p> <p>position Specify where to show the dock. Can be one of TopLeft, Top, TopRight, Right, BottomRight, Bottom, BottomLeft, Left and Floating.</p> <p>stacking Which window layer to put the dock in. Can be one of above, normal, below. The dock can be raised and lowered by left and middle clicking on it, among windows in the specified layer.</p> <p>direction Specify if dockapps should be laid out in a Vertical or Horizontal direction.</p> <p>floatingX and floatingY When position is set to Floating, these specify the pixel position of the dock. Cannot currently use the slightly extended format described at the bottom of this page.</p> <p>autoHide Whether to hide the dock automatically when the mouse is not over it.</p> <p>hideDelay and showDelay specify (in milleseconds) the delays for hiding and showing the dock when the mouse leaves and enters it, respectively.</p> <p>moveButton Specifies which button to use for moving individual dockapps around in the dock, see the bindings page for details.</p> <p>noStrut Specifies that the dock should not set a strut, which means it won't stop windows from being placed or maximized over it. When position is set to Floating, this is always on, since openbox doesn't guess which edge it should belong to based on just the position. You can use margins to emulate that if you want.</p>"},{"location":"Help/Configuration/#coordinates","title":"Coordinates","text":"<p>Many places in openbox that take a coordinate supports a slightly extended format. Most simply it can be just a number such as 300. Such a coordinate will be left- or top-aligned depending on which coordinate it is. To align to the opposite edge, use -300. To specify a negative offset, a - is also used, so you have to use +-10 to offset 10 pixels negatively to the left/top and --10 for the right/bottom edge. Some things enforce being onscreen though, such as the move/resize popup.</p>"},{"location":"Help/Contents/","title":"Contents","text":"<p>Welcome to the community maintained documentation for Openbox! Please help out and add your own articles or improve the ones that are already here.</p> <p>In order to get full access and contribute in the wiki, all you need to do is prove you are a person. Please see RequestWriteAccess.</p>"},{"location":"Help/Contents/#rcxml","title":"rc.xml","text":""},{"location":"Help/Contents/#configuration","title":"Configuration","text":"<p>The configuration documentation has details on the various options you can set in rc.xml.</p>"},{"location":"Help/Contents/#application-settings","title":"Application settings","text":"<p>Customize properties such as borders, geometry, workspace presence, layering etc. on a per-application basis.</p>"},{"location":"Help/Contents/#mouse-keybindings","title":"Mouse &amp; keybindings","text":""},{"location":"Help/Contents/#binding-documentation","title":"Binding documentation","text":"<p>Improve productivity and customize the function of your desktop by binding actions to key/mouse buttons (commonly called hot keys).</p>"},{"location":"Help/Contents/#actions","title":"Actions","text":"<p>Comprehensive documentation of all actions available for key and mouse bindings and the options which can affect their behavior.</p>"},{"location":"Help/Contents/#menus","title":"Menus","text":""},{"location":"Help/Contents/#menu-documentation","title":"Menu documentation","text":"<p>Describes how to set up your own menus in Openbox.</p>"},{"location":"Help/Contents/#actions_1","title":"Actions","text":"<p>The actions documentation lists all of the actions available for use in Openbox menus.</p>"},{"location":"Help/Contents/#pipe-menus","title":"Pipe menus","text":"<p>The pipe menu documentation explains basic use of pipe menus in Openbox. If you're looking for scripts there are many available on the community page.</p>"},{"location":"Help/Contents/#generating-an-applications-menu","title":"Generating an applications menu","text":"<ul> <li>Scripts may be used to generate an application menu based   on the contents of <code>/usr/share/applications</code> or other directories.   See this section for a complete list.</li> <li>There are also instructions available for getting   a working Debian menu, if yours is not.</li> </ul>"},{"location":"Help/Contents/#themes","title":"Themes","text":""},{"location":"Help/Contents/#theme-specification","title":"Theme specification","text":"<p>Comprehensive detail and documentation all of the elements found in an Openbox theme.</p>"},{"location":"Help/Contents/#openbox-34-theme-file-changes","title":"Openbox 3.4 theme file changes","text":"<ul> <li>Details differences between 3.3-&gt;3.4 theme files</li> <li>A tool to help with converting blackbox/fluxbox themes   to Openbox themes. (For non-xpm-based themes.)</li> </ul>"},{"location":"Help/Contents/#desktop-environments","title":"Desktop Environments","text":""},{"location":"Help/Contents/#openbox-in-gnome","title":"Openbox in GNOME","text":"<p>Instructions for running Openbox in the GNOME desktop environment and getting things to work how you want.</p>"},{"location":"Help/Contents/#openbox-in-kde","title":"Openbox in KDE","text":"<p>Instructions for running Openbox in K Desktop Environment.</p>"},{"location":"Help/Contents/#openbox-in-xfce","title":"Openbox in XFCE","text":"<p>Instructions for running Openbox in the XFCE desktop enviroment.</p>"},{"location":"Help/Contents/#custom-desktop-environments","title":"Custom Desktop Environments","text":""},{"location":"Help/Contents/#openbox-session","title":"openbox-session","text":"<p>Running Openbox as a stand-alone window manager in part of a custom desktop environment.</p>"},{"location":"Help/Contents/#autostart","title":"Autostart","text":"<p>The autostart documentation gives instructions on how to launch programs with Openbox at startup (not applicable unless openbox-session is called from the Desktop Manager/<code>xinit</code>)</p>"},{"location":"Help/Contents/#miscellaneous","title":"Miscellaneous","text":""},{"location":"Help/Contents/#rcxml-configuration-examples","title":"rc.xml Configuration examples","text":"<ul> <li>rc.xml Configuration reference -   Lists all default key bindings and default configuration.</li> <li>Focus-follows-mouse -   This configuration is similar to the default configuration,   but has more suitable mouse bindings for focus-follows-mouse   that won't interfere with your windows' stacking order.</li> <li>Vi-styled bindings -   Two examples of Vi-style keybindings (by Clay Barnes).</li> <li>\"Windows\"/Super key control - Example   of using the \"Windows\" AKA. Super key to control windows (by   Deters).</li> <li>Irssi-style window switching</li> </ul>"},{"location":"Help/Contents/#feature-list","title":"Feature list","text":"<p>A list of features found in the Openbox windowmanager.</p>"},{"location":"Help/Contents/#frequently-asked-questions","title":"Frequently asked questions","text":""},{"location":"Help/Contents/#compiling-from-source","title":"Compiling from source","text":"<p>Details what you need to build the latest version of Openbox, and how to install it correctly.</p>"},{"location":"Help/Contents/#using-git","title":"Using Git","text":"<p>Explains how to get bleeding-edge Openbox code for testing or developing with.</p>"},{"location":"Help/Contents/#obconf","title":"ObConf","text":"<p><code>Obconf</code> provides a simple graphical user interface to ease configuration for new Openbox users.</p>"},{"location":"Help/Contents/#upgrading-to-34","title":"Upgrading to 3.4","text":"<p>Walks through all the changes made since version 3.3, and there is a lot of them. Some of them mean new configuration options and features available to you, that you need to update your configuration to access.</p>"},{"location":"Help/Contents/#other-resources","title":"Other resources","text":"<p>The Arch wiki has a lot of great information on setting up and using Openbox.</p> <p>Many Openbox questions have been answered in forums around the internet. Trying a search may be fruitful.</p> <p>See community portal for other community resources and related projects.</p>"},{"location":"Help/DefaultConfiguration/","title":"Default Configuration","text":"<p>The default bindings for Openbox 3.4 include the following:</p> Alt-F4 Close the active window Alt-Space Show the client menu for the active window Alt-Tab Cycle between windows on the desktop Alt-Shift-Tab Cycle between windows on the desktop in reverse order Control-Alt-Tab Cycle between panel and desktop windows on the desktop Windows-D Hide all windows to show the desktop Windows-E Run the Konqueror file manager (This is an example of how to run a program with a key binding) Alt-Escape Lower the active window behind other windows, and activate the last window that was in use Windows-F1 Go to the first desktop instantly Windows-F2 Go to the second desktop instantly Windows-F3 Go to the third desktop instantly Windows-F4 Go to the fourth desktop instantly Control-Alt-Left Open the desktop switching dialog, to go to the desktop to the left of the current one Control-Alt-Right Open the desktop switching dialog, to go to the desktop to the right of the current one Control-Alt-Up Open the desktop switching dialog, to go to the desktop above the current one (This will only be useful if you use a pager to set up a desktop layout with multiple rows) Control-Alt-Down Open the desktop switching dialog, to go to the desktop below the current one (This will only be useful if you use a pager to set up a desktop layout with multiple rows) Shift-Alt-Left Open the desktop switching dialog, to go to the desktop to the left of the current one, and bring the active window with you Shift-Alt-Right Open the desktop switching dialog, to go to the desktop to the right of the current one, and bring the active window with you Shift-Alt-Up Open the desktop switching dialog, to go to the desktop above the current one, and bring the active window with you (This will only be useful if you use a pager to set up a desktop layout with multiple rows) Shift-Alt-Down Open the desktop switching dialog, to go to the desktop below the current one, and bring the active window with you (This will only be useful if you use a pager to set up a desktop layout with multiple rows) Alt-Left mouse button Move a window Alt-Right mouse button Resize a window. The window is resized towards the edge that the mouse is nearest to. So use Alt-Right mouse button in the top right corner of a window to resize that corner. Alt-Scroll wheel Change desktops forward and backward"},{"location":"Help/DefaultConfiguration/#root-menus","title":"Root menus","text":"<p>If you are running Openbox on its own (not inside KDE or GNOME), the following will be available by clicking on the desktop (a.k.a. root window):</p> Middle mouse button Open a menu listing all your windows Right mouse button Open a menu for launching applications (You should customize this menu to your liking) <p>These may or may not be available if you use a program to give you icons on your desktop, depending on how it works.</p>"},{"location":"Help/DefaultConfiguration/#focus-follows-mouse","title":"Focus-follows-mouse","text":"<p>If you enable focus-follows-mouse, the default settings are to delay focusing windows you enter with the mouse by 200ms (1/5 of a second). This allows you to move across windows without focusing them.</p>"},{"location":"Help/DefaultConfiguration/#other-configurations","title":"Other configurations","text":"<p>There are a number of example configuration files here which demonstrate some different ways to use Openbox.</p>"},{"location":"Help/DistrosAndDEsUsingOpenbox/","title":"Distros and DEs using Openbox","text":"<p>Any distro can have Openbox added. The following are released with Openbox.</p>"},{"location":"Help/DistrosAndDEsUsingOpenbox/#desktop-environments","title":"Desktop environments","text":"<ul> <li>LXDE</li> </ul>"},{"location":"Help/DistrosAndDEsUsingOpenbox/#lxde-based-distributions","title":"LXDE-based distributions","text":"<ul> <li>Knoppix</li> <li>Lubuntu (in development)</li> <li>Debian Lenny (LXDE version available)</li> <li>Fedora 12 LXDE spin</li> </ul>"},{"location":"Help/DistrosAndDEsUsingOpenbox/#distributions-that-ship-with-openbox","title":"Distributions that ship with Openbox","text":"<ul> <li>Arch linux - highly popular, with   great community support and wiki regarding Openbox</li> <li>PCLinuxOS - well regarded with special   attention paid to Openbox and LXDE.</li> <li>CrunchBang linux - Ubuntu based. Popular   following, EEE PC version (\"CrunchEEE\"). Irregular releases. See   also   crunchbanglinux.org/wiki/adding_crunchbang_features_in_another_distro</li> <li>Slitaz</li> <li>TinyMe linux</li> <li>CRUX</li> <li>Boxpup, Puppy Linux with Openbox (not actively developed?)</li> <li>SimpleLinux mini (sub 90 MB   version) - may also be included as alternative WM in the next EXT   version (which has XFCE as default). SimpleLinux is a Malaysion   distro, derived from Slackware &amp; Slax.</li> <li>Ubuntu - generally has an out of date   version, and with no Ubuntu-specific maintainer to ensure things   work \"out of the box\".</li> <li>Slackware - Openbox exists as a   \"Slackbuild\"1   (SlackBuilds.org is a community supported project... A SlackBuild   build script contains the build instructions and a source download   link for building a particular package for your system.)</li> </ul>"},{"location":"Help/DistrosAndDEsUsingOpenbox/#wikipedia","title":"Wikipedia","text":"<ul> <li>Wikipedia has a comparison of Linux   distributions.   Click right hand column to sort, and find distros with Openbox or   LXDE by default.</li> </ul>"},{"location":"Help/FAQ/","title":"FAQ","text":""},{"location":"Help/FAQ/#how-do-i-set-my-desktop-background","title":"How do I set my desktop background?","text":"<p>The example in the autostart guide sets the background to a solid color.</p> <p>You can use any number of programs to set your background. A few commonly used programs are xsetroot , esetroot, hsetroot and nitrogen. They each have their own set of features. You can use any of these programs in your autostart to set your wallpaper when you log in.</p> <p>There are also pipe menus designed for choosing and setting your wallpaper.</p>"},{"location":"Help/FAQ/#how-do-i-put-my-desktops-into-a-grid-layout-instead-of-a-single-row","title":"How do I put my desktops into a grid layout instead of a single row?","text":"<p>Your pager is responsible for doing this, and communicates with Openbox to make sure they agree on it. Any pager which complies with the EWMH specification should be able to do this. Examples are the gnome-panel pager and rox-pager.</p> <p>If your pager does not comply with the spec, or you don't use a pager, you can use this small program to set the layout at startup, for example setlayout 0 2 2 0 for a 2x2 grid.</p>"},{"location":"Help/FAQ/#what-is-this-dock-i-hear-so-much-about","title":"What is this dock I hear so much about?","text":"<p>The dock is where your dockapps go, if you don't have any, you don't need it. There are some dockapps available in linux distributions such as wiki.archlinux.org/index.php/Window_Maker for Arch. Or via thid parties such as www.cs.mun.ca/~gstarkes/wmaker/dockapps/other.html.</p>"},{"location":"Help/FAQ/#does-anyone-know-of-a-taskbar-that-works-well-with-openbox","title":"Does anyone know of a taskbar that works well with openbox?","text":"<p>There are many taskbar/panels around. Some examples are: fbpanel, pypanel, perlpanel, xfce4-panel (from XFCE), gnome-panel (from GNOME) and kicker (from KDE).</p> <p>There are many programs listed here that you can use with Openbox, including taskbars and other things.</p>"},{"location":"Help/FAQ/#how-do-i-make-things-start-when-i-start-openbox","title":"How do I make things start when I start Openbox?","text":"<p>If you are using a desktop environment - and therefore a session manager - you just need to save your session with the programs running. GNOME and KDE's session managers also both provide a way to run things on startup that aren't a part of the session, see their documentation for details.</p> <p>If you run Openbox without a desktop environment and session manager, see the autostart guide.</p>"},{"location":"Help/FAQ/#how-do-i-run-scim-when-i-start-openbox","title":"How do I run SCIM when I start Openbox?","text":"<p>See the autostart documentation for details on how to do this and an example that launches SCIM.</p>"},{"location":"Help/FAQ/#how-do-i-make-my-dockapps-appear-in-order-when-i-start-openbox","title":"How do I make my dockapps appear in order when I start Openbox?","text":"<p>You can use this in your autostart file to launch your dockapps and have them show up in the same order every time: <code> <pre><code>DELAY=.75\nAPPS='/home/mwilson/bin/clock \\\n      /home/mwilson/bin/weather \\\n      /home/mwilson/bin/grabimage \\\n      /home/mwilson/bin/awmcpuload \\\n      /home/mwilson/bin/temp \\\n      /home/mwilson/bin/net \\\n      /home/mwilson/bin/i-net0 \\\n      /home/mwilson/bin/i-net1 \\\n      wmsysmon \\\n      wmix'\n(for X in $APPS ; do ($X &amp;) ; sleep $DELAY ; done) &amp;\n</code></pre> <p></p> <p>Replace each of the commands in <code>APPS</code> with the dockapps you want to run, and they will appear in the dock in the order they are listed. Take care of having a <code>\\</code> at the end of each line, except for the last line.</p>"},{"location":"Help/FAQ/#im-using-rxvt-unicode-or-aterm-and-transparency-is-leaving-artifacts","title":"I'm using rxvt-unicode or aterm, and transparency is leaving artifacts!","text":"<p>This will work in Openbox 3.4. If you are running an older version or have this problem with another wm, here's what to do: By default these terminals use a transparency mode that only works by chance. They support a more proper one too. If you use aterm you have to give -sh 99 or -sh 101, with urxvt you have to give -tint white (ie in urxvt you can use -sh 100 and the proper mode). If this doesn't use the correct background image you have to use a background setting program that sets the correct hint, for example Hsetroot and Esetroot.</p>"},{"location":"Help/FAQ/#how-do-i-get-true-32-bit-transparent-windows","title":"How do I get true 32-bit transparent windows?","text":"<p>True 32-bit transparency is made possible through the Composite extension. You need to have this extension enabled in your Xserver. Use this command in a terminal to make sure it is enabled: <code> <pre><code>xdpyinfo|grep Composite\n</code></pre> <p> It will list \"Composite\" if it is enabled.</p> <p>As well, you need to run a composite manager for applications to access the Composite extension. You can use the <code>xcompmgr</code> with a command like this: <code> <pre><code>xcompmgr -c -t-5 -l-5 -r4.2 -o.55 &amp;\n</code></pre> <p> Run it without any arguments if you don't want any extras like drop shadows.</p> <p>You could put this command in your autostart file to make it run automatically at log in.</p> <p>Lastly, you need an application which supports it, such as rxvt-unicode: <code> <pre><code>urxvt -depth 32 -fg white -bg rgba:0000/0000/0000/bbbb\n</code></pre> <p></p> <p>You can use the <code>transset</code> program to give transparency to any window, with a command such as this: <code> <pre><code>transset 0.8  # then click on the window you want to make transparent\n</code></pre> <p></p>"},{"location":"Help/FAQ/#how-do-i-remove-the-decorations-from-all-my-windows","title":"How do I remove the decorations from all my windows?","text":"<p>You can use the per-app settings to remove decorations from all your windows, or any group of them. The per-app settings are in the  section of your <code>~/.config/openbox/rc.xml</code> (or the system-wide <code>/etc/xdg/openbox/rc.xml</code>). <p>Here is an example that would remove decorations from all of your windows except Firefox: <code> <pre><code>&lt;applications&gt;\n\n  &lt;!-- match all windows, and remove their decorations --&gt;\n  &lt;application class=\"*\"&gt;\n    &lt;decor&gt;no&lt;/decor&gt;\n  &lt;/application&gt;\n\n  &lt;!-- but give decorations back to Firefox --&gt;\n  &lt;application name=\"Firefox*\"&gt;\n    &lt;decor&gt;yes&lt;/decor&gt;\n  &lt;/application&gt;\n\n&lt;/applications&gt;\n</code></pre> <p></p> <p>There is a more complicated example showing many of the things you can do with per-app settings in the upgrading to 3.4 guide.</p>"},{"location":"Help/FAQ/#where-did-my-debian-menu-go","title":"Where did my Debian menu go?","text":"<p>The short answer is: nowhere. If you previously had an official Debian Openbox .deb installed and saw the Debian Menu in the root menu, the files are all still present on your system. Openbox.org .debs and/or source installs don't include them in your root menu -- that's done by Debian developer magic. You can do it with a few simple steps in these instructions.</p>"},{"location":"Help/FAQ/#how-do-i-disable-the-popup-when-switching-desktops","title":"How do I disable the popup when switching desktops?","text":"<p>Please see the upgrading to 3.4 guide.</p>"},{"location":"Help/FAQ/#how-do-i-run-openbox-across-multiple-x-screens","title":"How do I run Openbox across multiple X screens?","text":"<p>In order to have Openbox manage multiple X screens (this is not the same as multi-monitor TwinView or Xinerama), you need to run an instance of Openbox directly on each screen. We've put work into making Openbox work well with other instances of itself, for this type of configuration.</p> <p>In order to run Openbox on two screens, use commands such as these: <code> <pre><code># run openbox on the second screen (they start from 0)\nDISPLAY=:0.1 openbox &amp;\n# by default openbox will run on the first screen (screen number 0)\nexec openbox-session\n</code></pre> <p></p>"},{"location":"Help/FAQ/#how-do-i-make-tweetdeckother-adobe-air-apps-work-under-openbox","title":"How do I make Tweetdeck/Other Adobe Air apps work under Openbox?","text":"<p>Just put: <code> <pre><code>export GNOME_DESKTOP_SESSION_ID=\"openbox\"\n</code></pre> <p> in your autostart.sh or .xinitrc (the \"openbox\" part can be any word). You can then run tweetdeck/twhirl etc. without any problems, although you might needs some gnome keyring elements installed.</p>"},{"location":"Help/Features/","title":"Features","text":"<ul> <li>Minimalistic visual interface</li> <li>Extremely fast</li> <li>Translations to over 20 languages</li> <li>Solid and reliable look and feel</li> <li>*box style themes with a huge number of enhancements</li> <li>Advanced focus cycling dialog (with faded iconic windows)</li> <li>Focus cycling to panels and desktop windows</li> <li>Focus cycling across all desktops</li> <li>Combined client list menu (with faded iconic windows)</li> <li>Dynamically built menus with Pipe menus</li> <li>Caching pipe menus</li> <li>Auto start programs when logging in graphically</li> <li>Graphical log in options for GNOME or KDE with Openbox as the window   manager</li> <li>Supports 32-bit true transparent windows</li> <li>Extensive language rendering support</li> <li>Configurable mouse interaction with windows (Mouse bindings)</li> <li>Extensively configurable key bindings</li> <li>Dynamic desktops (add and remove desktops in any order)</li> <li>Emacs key-chain key bindings</li> <li>Key-chain on screen display</li> <li>Chrootable key bindings and key quoting</li> <li>Extensive Xinerama (TwinView) support</li> <li>Multiple screen support (Through running multiple instances of   Openbox - they cooperate with other screens)</li> <li>Actively maintained</li> <li>True partial-strut support</li> <li>Application launching notification from Openbox menus</li> <li>Keyboard shortcuts in all menus</li> <li>Show hostname in the titlebar for remote clients</li> <li>Complete EWMH support (1.4-draft2)</li> <li>Laptop power friendly (support for user-time window property)</li> <li>Animated iconify and restore</li> <li>Support for applications from all desktops and toolkits</li> <li>Synchronized window resizing</li> <li>Flexible and powerful per-window settings</li> <li>Moving maximized windows between monitors on Xinerama (TwinView)   setups</li> <li>User specified fonts</li> <li>Resize handles around the edge of window frames</li> </ul>"},{"location":"Help/GettingStarted/","title":"Getting Started","text":"<p>Openbox is included in most popular linux distributions. However if the latest version is not available to you through your distribution, you can download it from the download page. Packages are available there for a few distrubutions, as well as the source code which you can compile yourself. For help compiling Openbox, please see our compiling guide.</p> <p>Once Openbox is installed, running it is quite simple whether you log in through the graphical interface or through a text-based terminal. We'll first talk about the ways to run Openbox from a graphical log in (GDM/KDM), and then show how to run those same sessions from the command line.</p>"},{"location":"Help/GettingStarted/#starting-openbox-from-a-graphical-log-in","title":"Starting Openbox from a graphical log in","text":"<p> Openbox provides three menu options that will be in the Session Type menu when you are logging in, if they are available. The \"GNOME/Openbox\" option will only be present if you have GNOME installed, and the \"KDE/Openbox\" option will appear only if KDE is installed.</p>   ### Using Openbox in a desktop environment (GNOME and KDE)  ![](GNOME-Openbox.png \"GNOME-Openbox.png\") ![](KDE-Openbox.png \"KDE-Openbox.png\") Openbox can run inside the [GNOME](http://www.gnome.org), [KDE](http://www.kde.org), or [LXDE](http://www.lxde.org) desktop environments, giving you all the power and features of Openbox alongside everything these desktop environments have to offer. Options to run Openbox inside of these desktop environments are provided by default in the Session Type menu when logging in graphically, as seen in Figure 1. Choosing the \"GNOME/Openbox\" or \"KDE/Openbox\" option will log into the respective desktop environment with Openbox replacing the default window manager.  If you use [lxdm](http://wiki.lxde.org/en/LXDM), make sure it is version 0.3.0 or newer. Older versions had a [bug](https://bugs.launchpad.net/ubuntu/+source/lxdm/+bug/556611) which interfered with sessions other than LXDE.  See [Using Openbox in GNOME](Help:Using_Openbox_in_GNOME) for further tips and assistance.     ### Using Openbox without a desktop environment (The lightweight approach)  ![](OpenboxStandalone.jpg \"OpenboxStandalone.jpg\") By default, a third \"Openbox\" option is provided in the Session Type menu when logging in graphically, as can be seen in Figure 1. This option will run a more lightweight Openbox session without any desktop environment or session manager.  When choosing this option, the [autostart](Help:Autostart) file is executed before launching Openbox, so that you can run any applications you want to start alongside Openbox and set up the environment as neccessary. Openbox comes with a default autostart which sets up an environment for both GNOME and KDE applications to run properly in (if you have them installed), as well as providing support for SCIM language input. See the [autostart documentation](Help:Autostart) for more details on setting it up.   <p>To have a taskbar on screen, install and use a panel program like gnome-panel, pypanel, perlpanel or fbpanel. Our list of programs to use with Openbox lists a number of such programs.</p>"},{"location":"Help/GettingStarted/#starting-openbox-without-the-graphical-log-in","title":"Starting Openbox without the graphical log in","text":"<p>If you don't use a graphical log in, there are three programs included with Openbox for launching Openbox sessions similar to the three menu options discussed above.</p> <p>Most likely if you are not using a graphical log in, then you are using startx to begin an X session. In that case you need to run Openbox from your <code>~/.xinitrc</code> file. Rather than just running <code>openbox</code> however, you should choose from one of the three programs listed below:</p> <ul> <li><code>openbox-session</code></li> </ul> <p>This runs an Openbox session without any desktop environment or session manager, which is like selecting \"Openbox\" from the graphical log in. See the autostart documentation for how to easily start applications along with Openbox.</p> <ul> <li><code>openbox-gnome-session</code></li> </ul> <p>This runs a GNOME session with Openbox as the window manager, which is like selecting \"GNOME/Openbox\" from the graphical log in.</p> <ul> <li><code>openbox-kde-session</code></li> </ul> <p>This runs a KDE session with Openbox as the window manager, which is like selecting \"KDE/Openbox\" from the graphical log in.</p>"},{"location":"Help/GettingStarted/#the-default-configuration","title":"The default configuration","text":"<p>Take a look at the details of the default configuration to learn what the default keyboard bindings are.</p>"},{"location":"Help/GettingStarted/#further-reading","title":"Further reading","text":"<p>There's a lot of help documentation on the site, in the help section. Or see the FAQ for solutions to common problems.</p>"},{"location":"Help/Installing/","title":"Installing","text":""},{"location":"Help/Installing/#dependencies","title":"Dependencies","text":"<p>Compiling Openbox should be a relatively painless experience. You will need the following packages:</p> <ul> <li>C compiler (such as GCC)</li> <li>Libc library and headers (development package)</li> <li>Xlib library and headers (development package)</li> <li>Xext and Xrandr library and headers (development package) - optional   but recommended</li> </ul> <ul> <li>Glib-2 library and headers (development package)</li> <li>LibXML-2 library and headers (development package)</li> <li>Pango library and headers (development package)</li> <li>Imlib2 (development package) - optional but recommended</li> <li>Startup-notification library and headers (development package) -   optional but recommended</li> <li>XCursor library and headers (development package) - optional but   recommended</li> <li>Pkg-config</li> </ul> <p>These should all be available through your distribution.</p>"},{"location":"Help/Installing/#dependencies-in-ubuntu-and-debian","title":"Dependencies in Ubuntu and Debian","text":"<p>In Ubuntu and Debian, install the following packages:</p> <ul> <li>build-essential</li> <li>pkg-config</li> <li>libpango1.0-dev</li> <li>libglib2.0-dev</li> <li>libxml2-dev</li> <li>libxcursor-dev</li> <li>libimlib2-dev</li> <li>libstartup-notification0-dev</li> <li>xlibs-dev</li> <li>libxext-dev</li> <li>x11proto-randr-dev</li> </ul> <p>Note: 'xlibs-dev' is no longer available in in Ubuntu 8.04 LTS 'Hardy' repositories, but 'xlibs-static-dev' is.</p> <p>If you want to hook in the Debian menu, you'll also want:</p> <ul> <li>menu</li> <li>menu-xdg</li> </ul>"},{"location":"Help/Installing/#dependencies-in-fedora","title":"Dependencies in Fedora","text":"<p>In Fedora Core 6 or Fedora 7, install the following packages:</p> <ul> <li>gcc</li> <li>autoconf</li> <li>automake</li> <li>glib2-devel</li> <li>pango-devel</li> <li>imlib2-devel</li> <li>startup-notification-devel</li> <li>libXcursor-devel</li> <li>libXfixes-devel</li> <li>libSM-devel</li> <li>libxml2-devel</li> </ul>"},{"location":"Help/Installing/#building-and-installing-the-program","title":"Building and installing the program","text":"<p>Once you have the above dependancies installed, you are ready to build Openbox.</p> <p>You can obtain the source code from github.com (or as through tar archives (eg. linux from scratch)): <code> <pre><code>  % git clone https://github.com/Mikachu/openbox.git\n</code></pre> <p></p> <p>Run bootstrap script to obtain configuration scripts <code> <pre><code>  % ./bootstrap\n</code></pre> <p></p> <p>Then run: <code> <pre><code>  % ./configure --prefix=/usr --sysconfdir=/etc\n    ...configure detects the build evironment...\n  % make\n    ...openbox builds...\n  % sudo make install\n    ...openbox installs...\n</code></pre> <p></p> <p>If you do not want to install to <code>/usr</code>, then you should use <code>./configure --prefix=</code><code>--sysconfdir=/etc --datarootdir=/usr/share</code>. If you don't do this, the Openbox log in options will not be available, because they need to be installed to <code>/usr/share/xsessions</code>. <p>If the configure command fails and the reason is not obvious, you should look in the generated <code>config.log</code> file to discover the cause of the problem.</p>"},{"location":"Help/Installing/#for-64-bit-distributions","title":"For 64-bit distributions","text":"<p>When building Openbox on the 64-bit versions of Debian or Fedora, use: <code> <pre><code>  % ./configure --prefix=/usr --sysconfdir=/etc --libdir=/usr/lib64\n  % make\n  % sudo make install\n</code></pre> <p></p>"},{"location":"Help/Installing/#for-centos-53","title":"For CentOS 5.3","text":"<p><code> <pre><code># yum install automake autoconf glib2-devel pango-devel startup-notification-devel libXcursor-devel libXfixes-devel libSM-devel libxml2-devel gcc-c++.i386 gcc.i386\n\n# ./configure --prefix=/usr --sysconfdir=/etc\n\n# make\n\n# make install\n</code></pre> <p></p>"},{"location":"Help/Installing/#tips-for-developing-and-using-openbox-at-the-same-time","title":"Tips for Developing and Using Openbox at the Same Time","text":"<p>There are several ways of having two xserver sessions at once.</p> <p>One of these is using Xephyr to create a nested window:</p> <p><code> <pre><code>  % Xephyr -br -ac -noreset -screen 640x320 :1\n</code></pre> <p></p> <p>And then running your second ammended openbox in this display:</p> <p><code> <pre><code>  % DISPLAY=:1 ./openbox\n</code></pre> <p></p> <p>(the line above assumes you're in the directory of where the openbox binaries lie)</p>"},{"location":"Help/Session/","title":"Session","text":"<p>It is entirely possible to run Openbox as a standalone window manager alongside modular components to completely replicate the functionality of more heavyweight/resource intensive Desktop Environments such as Gnome, KDE or XFCE. There is even a Desktop Environment (LXDE) built around Openbox.</p>"},{"location":"Help/Session/#power-management","title":"Power management","text":"<p>Tips for Power management and Suspend and Hibernate.</p>"},{"location":"Help/Session/#menu-generation","title":"Menu Generation","text":"<p>Pipe menus are applications that dynamically generate your Openbox menu. They can provide a dynamic applications menu, system information, amongst other fun things. See here for more information, and to download them.</p>"},{"location":"Help/Session/#panels-widgets-desktops-pagers-etc","title":"Panels, widgets, desktops, pagers, etc..","text":"<p>Besides the programs included in GNOME and KDE...</p> <ul> <li>Avant Window Navigator \"(AWN/Awn) is     a dock-like navigation bar for the linux desktop that positions     itself at the bottom of the screen. It can be used to keep track of     open windows and behaves like a normal window list.\"</li> </ul> <ul> <li>BBDock \"BBDock is an application     launcher for Blackbox (and others) that allows you to create     application buttons in the slit/dock. It works with PNG files rather     than XPM images. It supports alpha blending at 16, 24 and 32 bits     color-depth. Also, the raise-window function is available to window     managers which implement the EWMH specification.\" (untested. EWMH     capable) Tested by CrossWind, Fully operational!</li> </ul> <ul> <li>bbtools \"BB-tools are a number of     simple X-Window programs to display the status of different     resources. The style and part of the code is copied from Blackbox a     small and extremely fast X11-Windowmanager.\"</li> </ul> <ul> <li>bmpanel2 \"Nice     NETWM-compatible panel for X11.\"</li> </ul> <ul> <li>conky \"Conky is a free,     light-weight system monitor for X, that displays any information on     your desktop. Conky is licensed under the GPL and runs on Linux and     BSD.\"</li> </ul> <ul> <li>fbpanel \"fbpanel is a     lightweight, NETWM compliant desktop panel. It works with any NETWM     compliant window manager (e.g. xfwm4, sawfish, openbox, metacity,     kde wm)\"</li> </ul> <ul> <li>feh An image viewer with many     features.</li> </ul> <ul> <li>flauncher \"The project     is intendent to replace the common panels (top panel and bottom     panel in Gnome). It gives speedup of application management reducing     the distance of mouse movements.\" (An attempt to get the panel     functionality into a separate window.)</li> </ul> <ul> <li>gDesklets \"gDesklets is a system for     bringing mini programs (desklets), such as weather forecasts, news     tickers, system information displays, or music player controls, onto     your desktop, where they are sitting there in a symbiotic     relationship of eye candy and usefulness. The possibilities are     really endless and they are always there to serve you whenever you     need them, just one key-press away. The system is not restricted to     one desktop environment, but currently works on most of the modern     Unix desktops (including GNOME, KDE, Xfce).\"</li> </ul> <ul> <li>iDesk \"iDesk gives users of minimal     wm's (fluxbox, blackbox, openbox, windowmaker...) icons on their     desktop. The icon graphics are either from a png or svg (vector)     file and support some eyecandy effects like transparency. Each icon     can be confgured to run one or more shell commands and the actions     which run those commands are completely configurable. In a nutshell     if you want icons on your desktop and you don't have or dont't want     KDE or gnome doing it, you can use iDesk.\"</li> </ul> <ul> <li>kooldock     \"A kool dock for KDE. It attemps to resemble the Mac OSX dock.\"</li> </ul> <ul> <li>LXPanel</li> </ul> <ul> <li>nitrogen \"Nitrogen is a     background browser and setter for X windows. It is written in C++     using the gtkmm toolkit. It can be used in two modes: browser and     recall. Nitrogen has been in development for over 2 years, due to     real life and laziness. For more info, check out the features     section.\"</li> </ul> <ul> <li>Oboinus \"X11 background     previewer and setter.\"</li> </ul> <ul> <li>ObPager \"OBPager is a lightweight     pager designed to be used with NetWM-compliant window managers like     OpenBox. Unlike many other pagers out there, OBPager has very few     dependencies, requiring only Xlib and glibc++ (no Gnome or KDE     necessary).\"</li> </ul> <ul> <li>perlpanel \"PerlPanel is     an attempt to build a useable, lean panel program (like Gnome's     gnome-panel and KDE's Kicker) in Perl, using GTK 2. It has an     object-oriented design for easy customisation and extension, and an     applet architecture that means that you can create an applet in a     matter of minutes.\"</li> </ul> <ul> <li>pypanel \"PyPanel is a lightweight     panel/taskbar written in Python and C for X11 window managers. It     can be easily customized to match any desktop theme or taste.     PyPanel works with EWMH compliant WMs (Openbox, PekWM, FVWM, etc.)     and is distributed under the GNU General Public License v2.\"</li> </ul> <ul> <li>PyTyle \"PyTyle is a manual tiling manager that     can slide into any EWMH compliant window manager, inspired by     XMonad. It will allow you to enable/disable tiling on a per screen     per workspace basis, and continually tile your windows.\"</li> </ul> <ul> <li>ROX Desktop \"ROX     is a fast, user friendly desktop which makes extensive use of     drag-and-drop. The interface revolves around the file manager, or     filer, following the traditional Unix view that `everything is a     file' rather than trying to hide the filesystem beneath start menus,     wizards, or druids. The aim is to make a system that is well     designed and clearly presented. The ROX style favours using several     small programs together instead of creating all-in-one     mega-applications.\"</li> </ul> <ul> <li>Screenlets \"Screenlets are small     owner-drawn applications (written in Python) that can be described     as \"the virtual representation of things lying/standing around on     your desk\". Sticknotes, clocks, rulers, ... the possibilities are     endless.\"</li> </ul> <ul> <li>Screenpager \"Screenpager is a     screenwise pager for X workstations running Xinerama. It works like     a desktop pager, but acts at the level of screens. Instead of paging     the desktop as a whole, it can page each screen independently, or     move pages from screen to screen.\"</li> </ul> <ul> <li>Set Layout A small     program to set your desktops into a grid if you do not use a pager.</li> </ul> <ul> <li>stalonetray \"Stalonetray is a     stand-alone freedesktop.org and KDE system tray (notification area)     for X Window System/X11 (e.g. X.Org or XFree86). It has full XEMBED     support and minimal dependencies: an X11 lib only. Stalonetray works     with virtually any EWMH-compliant window manager.\"</li> </ul> <ul> <li>Super Karamba     \"SuperKaramba is, in simple terms, a tool that allows you to easily     create interactive eye-candy on your KDE desktop.\"</li> </ul> <ul> <li>SuperSwitcher     \"SuperSwitcher is a (more feature-ful) replacement for the Alt-Tab     window switching behavior and Ctrl-Alt-Left/Right/Up/Down workspace     switching behavior that is currently provided by Metacity.\"</li> </ul> <ul> <li>tint2 panel/taskbar \"tint2 is a     simple panel/taskbar unintrusive and light (memory / cpu /     aestetic).\"</li> </ul> <ul> <li>visibility-python     \"gtk2 x11 pager / window list.\" (click snapshot to download a     .tar.gz)</li> </ul> <ul> <li>wbar \"wbar is a quick launch     bar. It's developed with speed in mind and is highly tweakable.\"</li> </ul> <ul> <li> <p>wmctrl \"wmctrl is a UNIX/Linux     command line tool to interact with an EWMH/NetWM compatible X Window     Manager\". Example of changing number of desktops:<code>         wmctrl -n 4 <p></p> <ul> <li>xfce4-panel \"The Xfce panel supports     multiple panels, with many options for their position, appearance,     transparency and behavior. There are many items available by default     to customize your panels, like application launchers with detachable     menus, a graphical pager, a tasklist, a clock, a system tray, a     show/hide desktop switcher, and even more.\"</li> </ul> <ul> <li>xprop     is utility for displaying and changing X server window and font     properties. To change number of columns and rows of desktops grid     layout run:</li> </ul> <p><code> <pre><code>xprop \\\n  -root \\\n  -format _NET_DESKTOP_LAYOUT 32c \\\n  -set _NET_DESKTOP_LAYOUT &lt;orientation&gt;,&lt;columns&gt;,&lt;rows&gt;,&lt;starting_corner&gt;\n</code></pre> <p></p> <p>where  is \u00ab0\u00bb or \u00ab1\u00bb;  is \u00ab0\u00bb, \u00ab1\u00bb, \u00ab2\u00bb or \u00ab3\u00bb; ,  - number of columns and rows respectively (more). Example: <p><code> <pre><code>xprop \\\n  -root \\\n  -format _NET_DESKTOP_LAYOUT 32c \\\n  -set _NET_DESKTOP_LAYOUT 0,2,2,0\n</code></pre> <p></p> <ul> <li>ksuperkey (daemon) uses     XTEST extension to bind the modifier key (like ctrl, alt (meta),     windows (super)) to any shortcut (like Alt+F1).</li> </ul> <p><code> <pre><code>~/.config/openbox/rc.xml\n\n&lt;keybind key=\"A-F1\"&gt;\n   &lt;action name=\"ShowMenu\"&gt;\n      &lt;menu&gt;root-menu&lt;/menu&gt;\n   &lt;/action&gt;\n&lt;/keybind&gt;\n\n~/.config/openbox/autostart\n\nksuperkey -e 'Super_L=Alt_L|F1' &amp;\n</code></pre> <p></p> <p>This allow you to open Openbox menu using super (windows) key.</p> <ul> <li>xdotool \"lets     you simulate keyboard input and mouse activity, move and resize     windows, etc. It does this using X11's XTEST extension and other     Xlib functions\".</li> </ul> <p><code> <pre><code># focus and raise xterm window\nxdotool \\\n   search \\\n      --maxdepth 2 \\\n      --onlyvisible \\\n      --all \\\n      --name xterm \\\n   windowfocus \\\n   windowraise\n\n# open Openbox menu, when mouse in top-left corner\n# (Alt+F1 must be bind to open root-menu)\nxdotool \\\n   behave_screen_edge \\\n      --delay 300 \\\n      --quiesce 3000 \\\n      top-left \\\n   key \"Alt_L+F1\"\n</code></pre> <p></p> <ul> <li>xkb-switch \"is a C++ program     that allows to query and change the XKB layout state\". Example of     using \"Win+space\" to switch keyboard layout:</li> </ul> <p><code> <pre><code>~/.config/openbox/rc.xml\n\n&lt;keybind key=\"W-space\"&gt;\n   &lt;action name=\"Execute\"&gt;\n      &lt;command&gt;xkb-switch --next&lt;/command&gt;\n   &lt;/action&gt;\n&lt;/keybind&gt;\n</code></pre> <p></p>"},{"location":"Help/Session/#other-links","title":"Other links","text":"<p>You can find lots of dockapps at dockapps.windowmaker.org. Some nice ones are \u00abwmCalClock\u00bb, \u00abwmnd\u00bb, \u00abwmix\u00bb and \u00abwmpinboard\u00bb.</p> <p>There are other programs of interest in the community portal.</p>"},{"location":"Help/Themes/","title":"Themes","text":"<p>Openbox 3 themes are written as an X resource database, in a file named <code>themerc</code>. The format is quite simple to learn, but there are an enormous number of options available to you.</p> <p>Each and every option has been documented, with details such as their default values, and which values are or are not valid for them. But to try make it a little more accessible, we'll start with an example theme, which uses every possible option within it. Each of the options can be clicked to read the details about it.</p>"},{"location":"Help/Themes/#theme-installation","title":"Theme installation","text":"<p>Openbox themes are stored in one of the following places:</p> <ul> <li>System-wide themes are installed in <code>/usr/share/themes</code>.</li> <li>User-specific themes can be installed in <code>~/.local/share/themes</code> or in   <code>~/.themes</code>.</li> </ul>"},{"location":"Help/Themes/#theme-selection","title":"Theme selection","text":"<p>Choosing a theme to use is simple with the ObConf tool. Alternatively, there are a number of Pipe menus which can perform this function for you.</p> <p>If you wish to set the theme by hand, you need to edit the  key in the  section of your <code>rc.xml</code> file. The Configuration guide is a good place to start."},{"location":"Help/Themes/#theme-file-structure","title":"Theme file structure","text":"<p>The file structure goes like this:</p> <p><code>ThemesDirectory\u00a0\u00a0(such\u00a0as\u00a0/usr/share/themes)</code> <code>|</code> <code>+-&gt;\u00a0ThemeName\u00a0\u00a0(This\u00a0is\u00a0the\u00a0name\u00a0of\u00a0the\u00a0theme,\u00a0such\u00a0as\u00a0Clearlooks)</code> <code>|</code> <code>+-&gt;\u00a0openbox-3\u00a0\u00a0(This\u00a0the\u00a0type\u00a0of\u00a0the\u00a0theme\u00a0-\u00a0it's\u00a0for\u00a0Openbox\u00a03!)</code> <code>|</code> <code>|-&gt;\u00a0themerc\u00a0\u00a0(This\u00a0is\u00a0the\u00a0main\u00a0theme\u00a0file,\u00a0documented\u00a0in\u00a0this\u00a0page)</code> <code>|</code> <code>|-&gt;\u00a0max.xbm\u00a0\u00a0(These\u00a0are\u00a0optional\u00a0xbm\u00a0masks\u00a0for\u00a0the\u00a0titlebar\u00a0buttons)</code> <code>|-&gt;\u00a0close.xbm</code> <code>...</code> <code>+-&gt;\u00a0shade.xbm</code></p> <p> ObConf can create a <code>.obt</code> Openbox Theme Archive file out of a theme for distribution, and can also install <code>.obt</code> files very easily.</p>"},{"location":"Help/Themes/#example","title":"Example","text":"<p>This is not a real theme, and if you used it, there is no guarantee it will look good in any way. It is just meant to show all of the options and how they relate to eachother.</p> <p><code> <p><code>#\u00a0Window\u00a0geometry</code> <code>padding.width</code><code>:\u00a02</code> <code>padding.height</code><code>:\u00a02</code> <code>border.width</code><code>:\u00a01</code> <code>window.client.padding.width</code><code>:\u00a01</code> <code>window.client.padding.height</code><code>:\u00a00</code> <code>window.handle.width</code><code>:\u00a03</code></p> <p><code>#Menu\u00a0geometry</code> <code>menu.border.width</code><code>:\u00a01</code> <code>menu.overlap.x</code><code>:\u00a00</code> <code>menu.overlap.y</code><code>:\u00a00</code></p> <p><code>#\u00a0Border\u00a0colors</code> <code>window.active.border.color</code><code>:\u00a0#000000</code> <code>window.inactive.border.color</code><code>:\u00a0#000000</code> <code>menu.border.color</code><code>:\u00a0#000000</code> <code>window.active.client.color</code><code>:\u00a0#ffffff</code> <code>window.inactive.client.color</code><code>:\u00a0#cccccc</code></p> <p><code>#\u00a0Text\u00a0shadows</code> <code>window.active.label.text.font</code><code>:\u00a0shadow=y:shadowtint=70:shadowoffset=1</code> <code>window.inactive.label.text.font</code><code>:\u00a0shadow=y:shadowtint=20:shadowoffset=1</code> <code>menu.items.font</code><code>:\u00a0shadow=n</code> <code>menu.title.text.font</code><code>:\u00a0shadow=y:shadowtint=70:shadowoffset=1</code></p> <p><code>#\u00a0Window\u00a0title\u00a0justification</code> <code>window.label.text.justify</code><code>:\u00a0Center</code></p> <p><code>#\u00a0Active\u00a0window</code> <code>window.active.title.bg</code><code>:\u00a0Raised\u00a0Gradient\u00a0Vertical\u00a0Interlaced</code> <code>window.active.title.bg</code><code>.color:\u00a0#658fb5</code> <code>window.active.title.bg</code><code>.colorTo:\u00a0#4d6982</code> <code>window.active.title.bg</code><code>.interlace.color:\u00a0#7788cc</code></p> <p><code>window.active.label.bg</code><code>:\u00a0Parentrelative</code> <code>window.active.label.text.color</code><code>:\u00a0#ffffff</code></p> <p><code>window.active.handle.bg</code><code>:\u00a0Raised\u00a0Gradient\u00a0Vertical</code> <code>window.active.handle.bg</code><code>.color:\u00a0#658fb5</code> <code>window.active.handle.bg</code><code>.colorTo:\u00a0#4d6982</code></p> <p><code>window.active.grip.bg</code><code>:\u00a0Raised\u00a0Gradient\u00a0Vertical</code> <code>window.active.grip.bg</code><code>.color:\u00a0#658fb5</code> <code>window.active.grip.bg</code><code>.colorTo:\u00a0#4d6982</code></p> <p><code>window.active.button.unpressed.bg</code><code>:\u00a0Flat\u00a0Gradient\u00a0Vertical\u00a0Border</code> <code>window.active.button.unpressed.bg</code><code>.color:\u00a0#6993b9</code> <code>window.active.button.unpressed.bg</code><code>.colorTo:\u00a0#55799a</code> <code>window.active.button.unpressed.bg</code><code>.border.color:\u00a0#3d4c5a</code> <code>window.active.button.unpressed.image.color</code><code>:\u00a0#ffffff</code></p> <p><code>window.active.button.pressed.bg</code><code>:\u00a0Flat\u00a0Gradient\u00a0Vertical\u00a0Border</code> <code>window.active.button.pressed.bg</code><code>.color:\u00a0#537797</code> <code>window.active.button.pressed.bg</code><code>.colorTo:\u00a0#50708e</code> <code>window.active.button.pressed.bg</code><code>.border.color:\u00a0#3d4c5a</code> <code>window.active.button.pressed.image.color</code><code>:\u00a0#ffffff</code></p> <p><code>window.active.button.disabled.bg</code><code>:\u00a0Flat\u00a0Gradient\u00a0Vertical\u00a0Border</code> <code>window.active.button.disabled.bg</code><code>.color:\u00a0#537797</code> <code>window.active.button.disabled.bg</code><code>.colorTo:\u00a0#50708e</code> <code>window.active.button.disabled.bg</code><code>.border.color:\u00a0#3d4c5a</code> <code>window.active.button.disabled.image.color</code><code>:\u00a0#3d4c5a</code></p> <p><code>window.active.button.hover.bg</code><code>:\u00a0Flat\u00a0Gradient\u00a0Vertical\u00a0Border</code> <code>window.active.button.hover.bg</code><code>.color:\u00a0#6993b9</code> <code>window.active.button.hover.bg</code><code>.colorTo:\u00a0#55799a</code> <code>window.active.button.hover.bg</code><code>.border.color:\u00a0#3d4c5a</code> <code>window.active.button.hover.image.color</code><code>:\u00a0#ffffff</code></p> <p><code>window.active.button.toggled.unpressed.bg</code><code>:\u00a0Flat\u00a0Gradient\u00a0Vertical\u00a0Border</code> <code>window.active.button.toggled.unpressed.bg</code><code>.color:\u00a0#6993b9</code> <code>window.active.button.toggled.unpressed.bg</code><code>.colorTo:\u00a0#55799a</code> <code>window.active.button.toggled.unpressed.bg</code><code>.border.color:\u00a0#3d4c5a</code> <code>window.active.button.toggled.unpressed.image.color</code><code>:\u00a0#cccccc</code></p> <p><code>window.active.button.toggled.pressed.bg</code><code>:\u00a0Flat\u00a0Gradient\u00a0Vertical\u00a0Border</code> <code>window.active.button.toggled.pressed.bg</code><code>.color:\u00a0#537797</code> <code>window.active.button.toggled.pressed.bg</code><code>.colorTo:\u00a0#50708e</code> <code>window.active.button.toggled.pressed.bg</code><code>.border.color:\u00a0#3d4c5a</code> <code>window.active.button.toggled.pressed.image.color</code><code>:\u00a0#ffffff</code></p> <p><code>window.active.button.toggled.hover.bg</code><code>:\u00a0Flat\u00a0Gradient\u00a0Vertical\u00a0Border</code> <code>window.active.button.toggled.hover.bg</code><code>.color:\u00a0#6993b9</code> <code>window.active.button.toggled.hover.bg</code><code>.colorTo:\u00a0#55799a</code> <code>window.active.button.toggled.hover.bg</code><code>.border.color:\u00a0#3d4c5a</code> <code>window.active.button.toggled.hover.image.color</code><code>:\u00a0#ffffff</code></p> <p><code>#\u00a0Inactive\u00a0windows</code> <code>window.inactive.title.bg</code><code>:\u00a0Raised\u00a0Gradient\u00a0Vertical</code> <code>window.inactive.title.bg</code><code>.color:\u00a0#f1eeea</code> <code>window.inactive.title.bg</code><code>.colorTo:\u00a0#d8cfc7</code></p> <p><code>window.inactive.label.bg</code><code>:\u00a0Parentrelative</code> <code>window.inactive.label.text.color</code><code>:\u00a0#000000</code></p> <p><code>window.inactive.handle.bg</code><code>:\u00a0Raised\u00a0Gradient\u00a0Vertical</code> <code>window.inactive.handle.bg</code><code>.color:\u00a0#f1eeea</code> <code>window.inactive.handle.bg</code><code>.colorTo:\u00a0#d8cfc7</code></p> <p><code>window.inactive.grip.bg</code><code>:\u00a0Raised\u00a0Gradient\u00a0Vertical</code> <code>window.inactive.grip.bg</code><code>.color:\u00a0#f1eeea</code> <code>window.inactive.grip.bg</code><code>.colorTo:\u00a0#d8cfc7</code></p> <p><code>window.inactive.button.unpressed.bg</code><code>:\u00a0Flat\u00a0Gradient\u00a0Vertical\u00a0Border</code> <code>window.inactive.button.unpressed.bg</code><code>.color:\u00a0#efebe7</code> <code>window.inactive.button.unpressed.bg</code><code>.colorTo:\u00a0#ddd6ce</code> <code>window.inactive.button.unpressed.bg</code><code>.border.color:\u00a0#8f8173</code> <code>window.inactive.button.unpressed.image.color</code><code>:\u00a0#000000</code></p> <p><code>window.inactive.button.pressed.bg</code><code>:\u00a0Flat\u00a0Gradient\u00a0Vertical\u00a0Border</code> <code>window.inactive.button.pressed.bg</code><code>.color:\u00a0#efebe7</code> <code>window.inactive.button.pressed.bg</code><code>.colorTo:\u00a0#ddd6ce</code> <code>window.inactive.button.pressed.bg</code><code>.border.color:\u00a0#8f8173</code> <code>window.inactive.button.pressed.image.color</code><code>:\u00a0#000000</code></p> <p><code>window.inactive.button.disabled.bg</code><code>:\u00a0Flat\u00a0Gradient\u00a0Vertical\u00a0Border</code> <code>window.inactive.button.disabled.bg</code><code>.color:\u00a0#efebe7</code> <code>window.inactive.button.disabled.bg</code><code>.colorTo:\u00a0#ddd6ce</code> <code>window.inactive.button.disabled.bg</code><code>.border.color:\u00a0#8f8173</code> <code>window.inactive.button.disabled.image.color</code><code>:\u00a0#8f8173</code></p> <p><code>window.inactive.button.toggled.bg</code><code>:\u00a0Flat\u00a0Gradient\u00a0Vertical\u00a0Border</code> <code>window.inactive.button.toggled.bg</code><code>.color:\u00a0#efebe7</code> <code>window.inactive.button.toggled.bg</code><code>.colorTo:\u00a0#ddd6ce</code> <code>window.inactive.button.toggled.bg</code><code>.border.color:\u00a0#8f8173</code> <code>window.inactive.button.toggled.image.color</code><code>:\u00a0#000000</code></p> <p><code>window.inactive.button.hover.bg</code><code>:\u00a0Flat\u00a0Gradient\u00a0Vertical\u00a0Border</code> <code>window.inactive.button.hover.bg</code><code>.color:\u00a0#efebe7</code> <code>window.inactive.button.hover.bg</code><code>.colorTo:\u00a0#ddd6ce</code> <code>window.inactive.button.hover.bg</code><code>.border.color:\u00a0#8f8173</code> <code>window.inactive.button.hover.image.color</code><code>:\u00a0#000000</code></p> <p><code>window.inactive.button.toggled.unpressed.bg</code><code>:\u00a0Flat\u00a0Gradient\u00a0Vertical\u00a0Border</code> <code>window.inactive.button.toggled.unpressed.bg</code><code>.color:\u00a0#efebe7</code> <code>window.inactive.button.toggled.unpressed.bg</code><code>.colorTo:\u00a0#ddd6ce</code> <code>window.inactive.button.toggled.unpressed.bg</code><code>.border.color:\u00a0#8f8173</code> <code>window.inactive.button.toggled.unpressed.image.color</code><code>:\u00a0#000000</code></p> <p><code>window.inactive.button.toggled.pressed.bg</code><code>:\u00a0Flat\u00a0Gradient\u00a0Vertical\u00a0Border</code> <code>window.inactive.button.toggled.pressed.bg</code><code>.color:\u00a0#efebe7</code> <code>window.inactive.button.toggled.pressed.bg</code><code>.colorTo:\u00a0#ddd6ce</code> <code>window.inactive.button.toggled.pressed.bg</code><code>.border.color:\u00a0#8f8173</code> <code>window.inactive.button.pressed.toggled.image.color</code><code>:\u00a0#000000</code></p> <p><code>window.inactive.button.toggled.hover.bg</code><code>:\u00a0Flat\u00a0Gradient\u00a0Vertical\u00a0Border</code> <code>window.inactive.button.toggled.hover.bg</code><code>.color:\u00a0#efebe7</code> <code>window.inactive.button.toggled.hover.bg</code><code>.colorTo:\u00a0#ddd6ce</code> <code>window.inactive.button.toggled.hover.bg</code><code>.border.color:\u00a0#8f8173</code> <code>window.inactive.button.toggled.hover.image.color</code><code>:\u00a0#000000</code></p> <p><code>#\u00a0Menus</code> <code>menu.title.bg</code><code>:\u00a0Raised\u00a0Gradient\u00a0Vertical</code> <code>menu.title.bg</code><code>.color:\u00a0#658fb5</code> <code>menu.title.bg</code><code>.colorTo:\u00a0#4d6982</code> <code>menu.title.text.color</code><code>:\u00a0#ffffff</code> <code>menu.title.text.justify</code><code>:\u00a0Left</code></p> <p><code>menu.separator.color</code><code>:\u00a0#444444</code> <code>menu.separator.width</code><code>:\u00a01</code> <code>menu.separator.padding.width</code><code>:\u00a06</code> <code>menu.separator.padding.height</code><code>:\u00a03</code></p> <p><code>menu.items.bg</code><code>:\u00a0Flat\u00a0Solid</code> <code>menu.items.bg</code><code>.color:\u00a0#f8f5f2</code> <code>menu.items.text.color</code><code>:\u00a0#000000</code> <code>menu.items.disabled.text.color</code><code>:\u00a0#aaaaaa</code></p> <p><code>menu.items.active.bg</code><code>:\u00a0Flat\u00a0Gradient\u00a0Vertical</code> <code>menu.items.active.bg</code><code>.color:\u00a0#628cb2</code> <code>menu.items.active.bg</code><code>.colorTo:\u00a0#50708d</code> <code>menu.items.active.text.color</code><code>:\u00a0#ffffff</code> <code>menu.items.active.disabled.text.color</code><code>:\u00a0#aaaaaa</code></p> <p></p>"},{"location":"Help/Themes/#data-types","title":"Data types","text":""},{"location":"Help/Themes/#integers","title":"Integers","text":"<p>These are simply numbers like <code>1</code> or <code>42</code>. They can be prime, composite, or zero.</p> <p>Example: <code> <pre><code>window.handle.width: 3\n</code></pre> <p></p>"},{"location":"Help/Themes/#justification","title":"Justification","text":"<p>These determines how to justify text. Valid options are <code>Left</code>, <code>Center</code> and <code>Right</code>.</p> <p>Example: <code> <pre><code>menu.title.text.justify: Left\n</code></pre> <p></p>"},{"location":"Help/Themes/#textures","title":"Textures","text":"<p>These determine the visual look of an element. They are the most complicated part of a theme file, but they are still not too tricky.</p> <p>Textures are specified through a text string with a number of fields. Capitalization is not significant. The format is as follows (<code>|</code> stands for \"or\" and <code>[]</code> surround optional fields):</p> <pre><code>parentrelative | ((solid | gradient gradient-type) [border] [interlaced])\n</code></pre> <p>We'll dissect what that means exactly.</p>"},{"location":"Help/Themes/#parentrelative","title":"Parentrelative","text":"<p>Parentrelative means that the element inherits its colors from the textures behind it. It is, in essence, completely transparent . Some theme elements can be parentrelative, and some can not. The documentation for each one will tell you if you can use parentrelative for it or not.</p> <p>Example: <code> <pre><code>window.active.label.bg: Parentrelative\nwindow.inactive.label.bg: Parentrelative Raised\n</code></pre> <p></p>"},{"location":"Help/Themes/#solid","title":"Solid","text":"<p>Solid means that the background of the texture is filled with a single color. The texture must be accompanied by a single color field.</p> <p>Example: <code> <pre><code>menu.items.bg:       Solid Flat\nmenu.items.bg.color: #f8f5f2\n</code></pre> <p></p>"},{"location":"Help/Themes/#gradients","title":"Gradients","text":"<p>When a gradient is specified, it must be followed by the gradient's type. Gradients all use two color fields: <code>color</code> and <code>colorTo</code> and must also be accompanied by these.</p> <p>Valid gradient types are:</p> <ul> <li>Diagonal - A gradient from the top left corner to the bottom right   corner</li> <li>CrossDiagonal - A gradient from the top right corner to the bottom   left corner</li> <li>Pyramid - A gradient that starts in all four corners and smooths to   the center of the texture</li> <li>Horizontal - A gradient from the left edge to the right</li> <li>MirrorHorizontal - A gradient from the left edge to the middle, and   then reversed to the right edge</li> <li>Vertical - A gradient from the top edge to the bottom</li> <li>SplitVertical - A gradient split in the middle that goes out toward   the top and bottom edges</li> </ul> <p>Example: <code> <pre><code>menu.title.bg:         Gradient Vertical Raised\nmenu.title.bg.color:   #658fb5\nmenu.title.bg.colorTo: #4d6982\n</code></pre> <p></p>"},{"location":"Help/Themes/#splitvertical-gradients","title":"SplitVertical gradients","text":"<p>SplitVertical gradients have 2 optional, addition color fields: <code>color.splitTo</code> and <code>colorTo.splitTo</code>. These colors are the light colors used on the far top and bottom of the SplitVertical gradient. When these are omitted, then the default values for these are <code>color</code> * 5/4, and <code>colorTo</code> * 17/16.</p> <p>Example: <code> <pre><code>menu.title.bg:                 Gradient SplitVertical Raised\nmenu.title.bg.color:           #658fb5\nmenu.title.bg.color.splitTo:   #7595b9\nmenu.title.bg.colorTo:         #4d6982\nmenu.title.bg.colorTo.splitTo: #557485\n</code></pre> <p></p>"},{"location":"Help/Themes/#border","title":"Border","text":"<p>Borders can be used on both solid and gradient textures. Valid options for the border are <code>Flat</code>, <code>Raised</code> and <code>Sunken</code>. When a border is not specified, <code>Raised</code> is assumed.</p> <p>Flat, by default, means no border at all. To add a flat solid border, use <code>Flat Border</code>. When using a flat border, the texture must be accompanied by a border color.</p> <p>Example: <code> <pre><code>window.active.button.unpressed.bg:              Gradient Vertical Flat Border\nwindow.active.button.unpressed.bg.border.color: #3d4c5a\n</code></pre> <p></p> <p>Raised and Sunken have two bevel options available to them. By default, a bevel is drawn around the very outside of the texture. If <code>Bevel2</code> is specified, then the bevel is drawn slightly in from the edge. This can be used to animate button presses/toggled states.</p> <p>The strength of the bevel highlights can also be determined by the theme, by using the <code>highlight</code> and <code>shadow</code> fields:</p> <p>The <code>highlight</code> field specifies the strength of the light bevel. It is a value above or equal to 0, where 0 makes no highlight at all, 256 makes the highlight color 100% brighter, 512 makes the highlight color 200% brighter, and so on. The default <code>highlight</code> is 128 (which is a 50% increase in brightness).</p> <p>The <code>shadow</code> field specifies the strength of the dark bevel. It is a value between 0 and 256, where 0 makes no shadow at all, and 256 makes a completely black shadow (100% decreased brightness). The default <code>shadow</code> is 64 (which is a 25% decrease in brightness).</p> <p>Example: <code> <pre><code>window.inactive.button.disabled.bg:           Gradient Diagonal Raised\nwindow.inactive.button.disabled.bg.color:     rgb:50/54/58\nwindow.inactive.button.disabled.bg.colorTo:   black\nwindow.inactive.button.disabled.bg.highlight: 128\nwindow.inactive.button.disabled.bg.shadow:    64\n\nwindow.inactive.button.toggled.pressed.bg:          Gradient Diagonal Raised Bevel2\nwindow.inactive.button.toggled.pressed.bg.color:    rgb:50/54/58\nwindow.inactive.button.toggled.pressed.bg.colorTo:  black\n</code></pre> <p></p>"},{"location":"Help/Themes/#interlaced","title":"Interlaced","text":"<p>Interlaced textures have a solid line drawn horizontally every second row. When you specify <code>interlaced</code>, the texture must be accompanied by an interlaced color.</p> <p>Example: <code> <pre><code>window.inactive.title.bg: Solid Flat Interlaced\nwindow.inactive.title.bg.color: #f5f5f5\nwindow.inactive.title.bg.interlace.color: #f6f6f6\n</code></pre> <p></p>"},{"location":"Help/Themes/#colors","title":"Colors","text":"<p>Colors can be specified by name or by their hexadecimal RGB value.</p>"},{"location":"Help/Themes/#color-names","title":"Color names","text":"<p>Wikipedia has a list of X11 color names, and further details here.</p> <p>Example: <code> <pre><code>menu.items.active.text.color: white\nwindow.active.grip.bg.color: grey40\n</code></pre> <p></p>"},{"location":"Help/Themes/#rgb-values","title":"RGB values","text":"<p>Colors can be specified by hexadecimal RGB values in two ways. The most familiar is through syntax similar to HTML, <code>#rrggbb</code>. However you may also use the format <code>rgb:rr/bb/gg</code>. What goes inside them for the <code>rr</code>, <code>gg</code> and <code>bb</code> values is identical.</p> <p>Example: <code> <pre><code>window.active.grip.bg.color: #658fb5\nwindow.active.label.text.color: #fff\nmenu.items.active.bg.color: rgb:90/94/98\nwindow.active.title.bg.color: rgb:6/9/c\n</code></pre> <p></p> <p>Note that <code>#fff</code> is equivalent to <code>#f0f0f0</code>, not to <code>#ffffff</code>.</p>"},{"location":"Help/Themes/#text-shadow-strings","title":"Text shadow strings","text":"<p>Text shadows are specified through a specially formatted text string.</p> <p>There are three properties that can be placed in the string: <code>shadow</code>, <code>shadowtint</code> and <code>shadowoffset</code>.</p> <p>Shadow is a boolean value. It defaults to no. You can enable a shadow for text by using <code>shadow=y</code>.</p> <p>Shadowtint specifies the alpha value for the shadow as well as its color (black or white). It defaults to black and 50% opacity. You can specify the shadowtint by using <code>shadowtint=70</code>. The tint can be any integer between -100 and 100. 0 means 0% opacity (invisible), 100 means 100% opacity and black, -100 means 100% opacity and white.</p> <p>Shadowoffset specifies how far the shadow is should be offset from the text. It defaults to 1. It can be positive to move the shadow and and right from the text, or negative to move it up and left from the text. You can set the shadowoffset by using <code>shadowoffset=2</code>. A shadowoffset of 0 will place it exactly behind the text and it will not be visible.</p> <p>The text shadow string used to be for choosing a font for the theme as well. Any other properties in the string, such as those for choosing a font, are ignored.</p> <p>Example: <code> <pre><code>window.active.label.text.font:shadow=y:shadowtint=70:shadowoffset=1\n</code></pre> <p></p>"},{"location":"Help/Themes/#theme-elements","title":"Theme elements","text":"<p>Each theme element corresponds to one part of a window or a menu. We'll start be discussing the elements that let you change the size and placement of things, and then talk about how to change the textures used to render everything.</p> <p>We're going to use a table such as this to describe each element:</p> Type: integer Default: 1 Valid: 0-100 Parentrelative: no <p>Type shows the type of the value for the element.</p> <p>Default gives the default value for the element if it is not listed in the theme. When Default refers to another theme element, then it means that element's values are used.</p> <p>Valid gives valid ranges for elements that this is applicable for, such as integer values.</p> <p>Parentrelative specifies if a given texture may use the Parentrelative visual type, when applicable.</p>"},{"location":"Help/Themes/#geometry","title":"Geometry","text":""},{"location":"Help/Themes/#borderwidth","title":"border.width","text":"Type: integer Default: 1 Valid: 0 - 100 <p>Specifies the size of the border drawn around window frames.</p> <p>See also: window.active.border.color, window.inactive.border.color</p>"},{"location":"Help/Themes/#menuborderwidth","title":"menu.border.width","text":"Type: integer Default: border.width Valid: 0 - 100 <p>Specifies the size of the border drawn around menus.</p> <p>See also: menu.border.color</p>"},{"location":"Help/Themes/#menuseparatorwidth","title":"menu.separator.width","text":"Type: integer Default: 1 Valid: 1 - 100 <p>Specifies the size of menu line separators. (As of version 3.4.7)</p>"},{"location":"Help/Themes/#menuseparatorpaddingwidth","title":"menu.separator.padding.width","text":"Type: integer Default: 6 Valid: 0 - 100 <p>Specifies the space on the left and right side of menu line separators. (As of version 3.4.7)</p> <p>See also: menu.separator.padding.height</p>"},{"location":"Help/Themes/#menuseparatorpaddingheight","title":"menu.separator.padding.height","text":"Type: integer Default: 3 Valid: 0 - 100 <p>Specifies the space on the top and bottom of menu line separators. (As of version 3.4.7)</p> <p>See also: menu.separator.padding.width</p>"},{"location":"Help/Themes/#osdborderwidth","title":"osd.border.width","text":"Type: integer Default: border.width Valid: 0 - 100 <p>Specifies the size of the border drawn on-screen-dialogs, such as the focus cycling (Alt-Tab) dialog.</p> <p>See also: osd.border.color</p>"},{"location":"Help/Themes/#windowclientpaddingwidth","title":"window.client.padding.width","text":"Type: integer Default: padding.width Valid: 0 - 100 <p>Specifies the size of the left and right sides of the inner border. The inner border is drawn around the window, but inside the other decorations.</p> <p>See also: window.active.client.color, window.inactive.client.color window.client.padding.height</p>"},{"location":"Help/Themes/#windowclientpaddingheight","title":"window.client.padding.height","text":"Type: integer Default: window.client.padding.width Valid: 0 - 100 <p>Specifies the size of the top and bottom sides of the inner border. The inner border is drawn around the window, but inside the other decorations.</p> <p>See also: window.active.client.color, window.inactive.client.color window.client.padding.width</p>"},{"location":"Help/Themes/#windowhandlewidth","title":"window.handle.width","text":"Type: integer Default: 6 Valid: 0 - 100 <p>Specifies the size of the window handle. The window handle is the piece of decorations on the bottom of windows. A value of 0 means that no handle is shown.</p> <p>See also: window.active.handle.bg, window.inactive.handle.bg, window.active.grip.bg, window.inactive.grip.bg</p>"},{"location":"Help/Themes/#paddingwidth","title":"padding.width","text":"Type: integer Default: 3 Valid: 0 - 100 <p>Specifies the padding size, used for spacing out elements in the window decorations. This can be used to give a theme a more compact or a more relaxed feel. This specifies padding in the horizontal direction (and vertical direction if padding.height is not explicitly set).</p> <p>See also: padding.height</p>"},{"location":"Help/Themes/#paddingheight","title":"padding.height","text":"Type: integer Default: padding.width Valid: 0 - 100 <p>Specifies the padding size, used for spacing out elements in the window decorations. This can be used to give a theme a more compact or a more relaxed feel. This specifies padding in only the vertical direction.</p> <p>See also: padding.width</p>"},{"location":"Help/Themes/#menuoverlapx","title":"menu.overlap.x","text":"Type: integer Default: menu.overlap Valid: -100 - 100 <p>Specifies how sub menus should overlap their parents. A positive value moves the submenu over top of their parent by that amount. A negative value moves the submenu away from their parent by that amount. (As of version 3.4.7)</p> <p>See also: menu.overlap.y</p>"},{"location":"Help/Themes/#menuoverlapy","title":"menu.overlap.y","text":"Type: integer Default: menu.overlap Valid: -100 - 100 <p>Specifies how sub menus should be positioned relative to their parents. A positive value moves the submenu vertically down by that amount, a negative value moves it up by that amount. (As of version 3.4.7)</p> <p>See also: menu.overlap.x</p>"},{"location":"Help/Themes/#menuoverlap","title":"menu.overlap","text":"Type: integer Default: 0 Valid: -100 - 100 <p>This property is obsolete and only present for backwards compatibility.</p> <p>See also: menu.overlap.x, menu.overlap.y</p>"},{"location":"Help/Themes/#border-colors","title":"Border colors","text":""},{"location":"Help/Themes/#windowactivebordercolor","title":"window.active.border.color","text":"Type: color Default: border.color <p>Specifies the border color for the focused window.</p> <p>See also: border.width, window.inactive.border.color</p>"},{"location":"Help/Themes/#windowactivetitleseparatorcolor","title":"window.active.title.separator.color","text":"Type: color Default: window.active.border.color <p>Specifies the border color for the border between the titlebar and the window, for the focused window.</p> <p>See also: window.inactive.title.separator.color</p>"},{"location":"Help/Themes/#windowinactivebordercolor","title":"window.inactive.border.color","text":"Type: color Default: window.active.border.color <p>Specifies the border color for all non-focused windows.</p> <p>See also: border.width, window.active.border.color</p>"},{"location":"Help/Themes/#windowinactivetitleseparatorcolor","title":"window.inactive.title.separator.color","text":"Type: color Default: window.inactive.border.color <p>Specifies the border color for the border between the titlebar and the window, for non-focused windows.</p> <p>See also: window.active.title.separator.color</p>"},{"location":"Help/Themes/#bordercolor","title":"border.color","text":"Type: color Default: black <p>This property is obsolete and only present for backwards compatibility.</p> <p>See also: window.active.border.color, window.inactive.border.color, menu.border.color</p>"},{"location":"Help/Themes/#windowactiveclientcolor","title":"window.active.client.color","text":"Type: color Default: white <p>Specifies the color of the inner border for the focused window, drawn around the window but inside the other decorations.</p> <p>See also: window.client.padding.width, window.inactive.client.color</p>"},{"location":"Help/Themes/#windowinactiveclientcolor","title":"window.inactive.client.color","text":"Type: color Default: white <p>Specifies the color of the inner border for non-focused windows, drawn around the window but inside the other decorations.</p> <p>See also: window.client.padding.width, window.active.client.color</p>"},{"location":"Help/Themes/#menubordercolor","title":"menu.border.color","text":"Type: color Default: window.active.border.color <p>Specifies the border color for menus.</p> <p>See also: menu.border.width</p>"},{"location":"Help/Themes/#osdbordercolor","title":"osd.border.color","text":"Type: color Default: window.active.border.color <p>Specifies the border color for on-screen-dialogs, such as the focus cycling (Alt-Tab) dialog.</p> <p>See also: osd.border.width</p>"},{"location":"Help/Themes/#titlebar-colors","title":"Titlebar colors","text":""},{"location":"Help/Themes/#windowactivelabeltextcolor","title":"window.active.label.text.color","text":"Type: color Default: black <p>Specifies the color of the titlebar text for the focused window.</p> <p>See also: window.inactive.label.text.color</p>"},{"location":"Help/Themes/#windowinactivelabeltextcolor","title":"window.inactive.label.text.color","text":"Type: color Default: white <p>Specifies the color of the titlebar text for non-focused windows.</p> <p>See also: window.active.label.text.color</p>"},{"location":"Help/Themes/#windowactivebuttonunpressedimagecolor","title":"window.active.button.unpressed.image.color","text":"Type: color Default: black <p>Specifies the color of the images in titlebar buttons in their default, unpressed, state. This element is for the focused window.</p> <p>See also: window.inactive.button.unpressed.image.color</p>"},{"location":"Help/Themes/#windowactivebuttonpressedimagecolor","title":"window.active.button.pressed.image.color","text":"Type: color Default: window.active.button.unpressed.image.color <p>Specifies the color of the images in titlebar buttons when they are being pressed by the user. This element is for the focused window.</p> <p>See also: window.inactive.button.pressed.image.color</p>"},{"location":"Help/Themes/#windowactivebuttondisabledimagecolor","title":"window.active.button.disabled.image.color","text":"Type: color Default: white <p>Specifies the color of the images in titlebar buttons when they are disabled for the window. This element is for the focused window.</p> <p>See also: window.inactive.button.disabled.image.color</p>"},{"location":"Help/Themes/#windowactivebuttonhoverimagecolor","title":"window.active.button.hover.image.color","text":"Type: color Default: window.active.button.unpressed.image.color <p>Specifies the color of the images in titlebar buttons when the mouse is over top of the button. This element is for the focused window.</p> <p>See also: window.inactive.button.hover.image.color</p>"},{"location":"Help/Themes/#windowactivebuttontoggledunpressedimagecolor","title":"window.active.button.toggled.unpressed.image.color","text":"Type: color Default: window.active.button.toggled.image.color <p>Specifies the color of the images in titlebar buttons when the button is toggled - such as when a window is maximized. This element is for the focused window.</p> <p>See also: window.inactive.button.toggled.unpressed.image.color</p>"},{"location":"Help/Themes/#windowactivebuttontoggledpressedimagecolor","title":"window.active.button.toggled.pressed.image.color","text":"Type: color Default: window.active.button.pressed.image.color <p>Specifies the color of the images in the titlebar buttons if they are pressed on with the mouse while they are in the toggled state - such as when a window is maximized. This element is for the focused window.</p> <p>See also: window.inactive.button.toggled.pressed.image.color</p>"},{"location":"Help/Themes/#windowactivebuttontoggledhoverimagecolor","title":"window.active.button.toggled.hover.image.color","text":"Type: color Default: window.active.button.toggled.unpressed.image.color <p>Specifies the color of the images in the titlebar buttons when the mouse is hovered over them while they are in the toggled state - such as when a window is maximized. This element is for the focused window.</p> <p>See also: window.inactive.button.toggled.hover.image.color</p>"},{"location":"Help/Themes/#windowactivebuttontoggledimagecolor","title":"window.active.button.toggled.image.color","text":"Type: color Default: window.active.button.pressed.image.color <p>This property is obsolete and only present for backwards compatibility.</p>"},{"location":"Help/Themes/#windowinactivebuttonunpressedimagecolor","title":"window.inactive.button.unpressed.image.color","text":"Type: color Default: white <p>Specifies the color of the images in titlebar buttons in their default, unpressed, state. This element is for non-focused windows.</p> <p>See also: window.active.button.unpressed.image.color</p>"},{"location":"Help/Themes/#windowinactivebuttonpressedimagecolor","title":"window.inactive.button.pressed.image.color","text":"Type: color Default: window.inactive.button.unpressed.image.color <p>Specifies the color of the images in titlebar buttons when they are being pressed by the user. This element is for non-focused windows.</p> <p>This color is also used for pressed color when the button is toggled.</p> <p>See also: window.active.button.pressed.image.color</p>"},{"location":"Help/Themes/#windowinactivebuttondisabledimagecolor","title":"window.inactive.button.disabled.image.color","text":"Type: color Default: black <p>Specifies the color of the images in titlebar buttons when they are disabled for the window. This element is for non-focused windows.</p> <p>See also: window.active.button.disabled.image.color</p>"},{"location":"Help/Themes/#windowinactivebuttonhoverimagecolor","title":"window.inactive.button.hover.image.color","text":"Type: color Default: window.inactive.button.unpressed.image.color <p>Specifies the color of the images in titlebar buttons when the mouse is over top of the button. This element is for non-focused windows.</p> <p>See also: window.active.button.hover.image.color</p>"},{"location":"Help/Themes/#windowinactivebuttontoggledunpressedimagecolor","title":"window.inactive.button.toggled.unpressed.image.color","text":"Type: color Default: window.inactive.button.toggled.image.color <p>Specifies the color of the images in titlebar buttons when the button is toggled - such as when a window is maximized. This element is for non-focused windows.</p> <p>See also: window.active.button.toggled.unpressed.image.color</p>"},{"location":"Help/Themes/#windowinactivebuttontoggledpressedimagecolor","title":"window.inactive.button.toggled.pressed.image.color","text":"Type: color Default: window.inactive.button.pressed.image.color <p>Specifies the color of the images in the titlebar buttons if they are pressed on with the mouse while they are in the toggled state - such as when a window is maximized. This element is for non-focused windows.</p> <p>See also: window.active.button.toggled.pressed.image.color</p>"},{"location":"Help/Themes/#windowinactivebuttontoggledhoverimagecolor","title":"window.inactive.button.toggled.hover.image.color","text":"Type: color Default: window.inactive.button.toggled.unpressed.image.color <p>Specifies the color of the images in the titlebar buttons when the mouse is hovered over them while they are in the toggled state - such as when a window is maximized. This element is for non-focused windows.</p> <p>See also: window.active.button.toggled.hover.image.color</p>"},{"location":"Help/Themes/#windowinactivebuttontoggledimagecolor","title":"window.inactive.button.toggled.image.color","text":"Type: color Default: window.active.button.pressed.image.color <p>This property is obsolete and only present for backwards compatibility.</p>"},{"location":"Help/Themes/#active-window-textures","title":"Active window textures","text":""},{"location":"Help/Themes/#windowactivetitlebg","title":"window.active.title.bg","text":"Type: texture Default: none Parentrelative: no <p>Specifies the background for the focused window's titlebar.</p> <p>See also: window.inactive.title.bg</p>"},{"location":"Help/Themes/#windowactivelabelbg","title":"window.active.label.bg","text":"Type: texture Default: none Parentrelative: yes <p>Specifies the background for the focused window's titlebar label. The label is the container for the window title. When it is parentrelative, then it uses the window.active.title.bg which is underneath it.</p> <p>See also: titlebar colors, window.inactive.label.bg, window.active.title.bg</p>"},{"location":"Help/Themes/#windowactivehandlebg","title":"window.active.handle.bg","text":"Type: texture Default: none Parentrelative: no <p>Specifies the background for the focused window's handle. The handle is the window decorations placed on the bottom of windows.</p> <p>See also: window.handle.width, window.inactive.handle.bg</p>"},{"location":"Help/Themes/#windowactivegripbg","title":"window.active.grip.bg","text":"Type: texture Default: none Parentrelative: yes <p>Specifies the background for the focused window's grips. The grips are located at the left and right sides of the window's handle. When it is parentrelative, then it uses the window.active.handle.bg which is underneath it.</p> <p>See also: window.handle.width, window.inactive.grip.bg, window.active.handle.bg</p>"},{"location":"Help/Themes/#inactive-window-textures","title":"Inactive window textures","text":""},{"location":"Help/Themes/#windowinactivetitlebg","title":"window.inactive.title.bg","text":"Type: texture Default: none Parentrelative: no <p>Specifies the background for non-focused windows' titlebars.</p> <p>See also: window.active.title.bg</p>"},{"location":"Help/Themes/#windowinactivelabelbg","title":"window.inactive.label.bg","text":"Type: texture Default: none Parentrelative: yes <p>Specifies the background for non-focused windows' titlebar labels. The label is the container for the window title. When it is parentrelative, then it uses the window.inactive.title.bg which is underneath it.</p> <p>See also: titlebar colors, window.active.label.bg, window.inactive.title.bg</p>"},{"location":"Help/Themes/#windowinactivehandlebg","title":"window.inactive.handle.bg","text":"Type: texture Default: none Parentrelative: no <p>Specifies the background for non-focused windows' handles. The handle is the window decorations placed on the bottom of windows.</p> <p>See also: window.handle.width, window.active.handle.bg</p>"},{"location":"Help/Themes/#windowinactivegripbg","title":"window.inactive.grip.bg","text":"Type: texture Default: none Parentrelative: yes <p>Specifies the background for non-focused windows' grips. The grips are located at the left and right sides of the window's handle. When it is parentrelative, then it uses the window.inactive.handle.bg which is underneath it.</p> <p>See also: window.handle.width, window.active.grip.bg, window.inactive.handle.bg</p>"},{"location":"Help/Themes/#active-window-button-textures","title":"Active window button textures","text":""},{"location":"Help/Themes/#windowactivebuttonunpressedbg","title":"window.active.button.unpressed.bg","text":"Type: texture Default: none Parentrelative: yes <p>Specifies the background for titlebar buttons in their default, unpressed, state. This element is for the focused window. When it is parentrelative, then it uses the window.active.title.bg which is underneath it.</p> <p>See also: titlebar colors, window.active.title.bg, window.inactive.button.unpressed.bg</p>"},{"location":"Help/Themes/#windowactivebuttonpressedbg","title":"window.active.button.pressed.bg","text":"Type: texture Default: none Parentrelative: yes <p>Specifies the background for titlebar buttons when they are being pressed by the user. This element is for the focused window. When it is parentrelative, then it uses the window.active.title.bg which is underneath it.</p> <p>See also: titlebar colors, window.active.title.bg, window.inactive.button.pressed.bg</p>"},{"location":"Help/Themes/#windowactivebuttonhoverbg","title":"window.active.button.hover.bg","text":"Type: texture Default: window.active.button.unpressed.bg Parentrelative: yes <p>Specifies the background for titlebar buttons when the mouse is over them. This element is for the focused window. When it is parentrelative, then it uses the window.active.title.bg which is underneath it.</p> <p>See also: titlebar colors, window.active.title.bg, window.inactive.button.hover.bg</p>"},{"location":"Help/Themes/#windowactivebuttondisabledbg","title":"window.active.button.disabled.bg","text":"Type: texture Default: none Parentrelative: yes <p>Specifies the background for titlebar buttons when they are disabled for the window. This element is for the focused window. When it is parentrelative, then it uses the window.active.title.bg which is underneath it.</p> <p>See also: titlebar colors, window.active.title.bg, window.inactive.button.disabled.bg</p>"},{"location":"Help/Themes/#windowactivebuttontoggledunpressedbg","title":"window.active.button.toggled.unpressed.bg","text":"Type: texture Default: window.active.button.toggled.bg Parentrelative: yes <p>Specifies the default background for titlebar buttons when they are toggled - such as when a window is maximized. This element is for the focused window. When it is parentrelative, then it uses the window.inactive.title.bg which is underneath it.</p> <p>See also: titlebar colors, window.active.title.bg, window.inactive.button.toggled.unpressed.bg</p>"},{"location":"Help/Themes/#windowactivebuttontoggledpressedbg","title":"window.active.button.toggled.pressed.bg","text":"Type: texture Default: window.active.button.pressed.bg Parentrelative: yes <p>Specifies the default background for titlebar buttons if the user is pressing them with the mouse while they are toggled - such as when a window is maximized. This element is for the focused window. When it is parentrelative, then it uses the window.inactive.title.bg which is underneath it.</p> <p>See also: titlebar colors, window.active.title.bg, window.inactive.button.toggled.pressed.bg</p>"},{"location":"Help/Themes/#windowactivebuttontoggledhoverbg","title":"window.active.button.toggled.hover.bg","text":"Type: texture Default: window.active.button.toggled.unpressed.bg Parentrelative: yes <p>Specifies the default background for titlebar buttons if the user is pressing them with the mouse while they are toggled - such as when a window is maximized. This element is for the focused window. When it is parentrelative, then it uses the window.inactive.title.bg which is underneath it.</p> <p>See also: titlebar colors, window.active.title.bg, window.inactive.button.toggled.hover.bg</p>"},{"location":"Help/Themes/#windowactivebuttontoggledbg","title":"window.active.button.toggled.bg","text":"Type: texture Default: window.active.button.pressed.bg Parentrelative: yes <p>This property is obsolete and only present for backwards compatibility.</p>"},{"location":"Help/Themes/#inactive-window-button-textures","title":"Inactive window button textures","text":""},{"location":"Help/Themes/#windowinactivebuttonunpressedbg","title":"window.inactive.button.unpressed.bg","text":"Type: texture Default: none Parentrelative: yes <p>Specifies the background for titlebar buttons in their default, unpressed, state. This element is for non-focused windows. When it is parentrelative, then it uses the window.inactive.title.bg which is underneath it.</p> <p>See also: titlebar colors, window.inactive.title.bg, window.active.button.unpressed.bg</p>"},{"location":"Help/Themes/#windowinactivebuttonpressedbg","title":"window.inactive.button.pressed.bg","text":"Type: texture Default: none Parentrelative: yes <p>Specifies the background for titlebar buttons when they are being pressed by the user. This element is for non-focused windows. When it is parentrelative, then it uses the window.inactive.title.bg which is underneath it.</p> <p>See also: titlebar colors, window.inactive.title.bg, window.active.button.pressed.bg</p>"},{"location":"Help/Themes/#windowinactivebuttonhoverbg","title":"window.inactive.button.hover.bg","text":"Type: texture Default: window.inactive.button.unpressed.bg Parentrelative: yes <p>Specifies the background for titlebar buttons when the mouse is over them. This element is for non-focused windows. When it is parentrelative, then it uses the window.inactive.title.bg which is underneath it.</p> <p>See also: titlebar colors, window.inactive.title.bg, window.active.button.hover.bg</p>"},{"location":"Help/Themes/#windowinactivebuttondisabledbg","title":"window.inactive.button.disabled.bg","text":"Type: texture Default: none Parentrelative: yes <p>Specifies the background for titlebar buttons when they are disabled for the window. This element is for non-focused windows. When it is parentrelative, then it uses the window.inactive.title.bg which is underneath it.</p> <p>See also: titlebar colors, window.inactive.title.bg, window.active.button.disabled.bg</p>"},{"location":"Help/Themes/#windowinactivebuttontoggledunpressedbg","title":"window.inactive.button.toggled.unpressed.bg","text":"Type: texture Default: window.inactive.button.toggled.bg Parentrelative: yes <p>Specifies the default background for titlebar buttons when they are toggled - such as when a window is maximized. This element is for non-focused windows. When it is parentrelative, then it uses the window.inactive.title.bg which is underneath it.</p> <p>See also: titlebar colors, window.inactive.title.bg, window.active.button.toggled.unpressed.bg</p>"},{"location":"Help/Themes/#windowinactivebuttontoggledpressedbg","title":"window.inactive.button.toggled.pressed.bg","text":"Type: texture Default: window.inactive.button.pressed.bg Parentrelative: yes <p>Specifies the default background for titlebar buttons if the user is pressing them with the mouse while they are toggled - such as when a window is maximized. This element is for non-focused windows. When it is parentrelative, then it uses the window.inactive.title.bg which is underneath it.</p> <p>See also: titlebar colors, window.inactive.title.bg, window.active.button.toggled.pressed.bg</p>"},{"location":"Help/Themes/#windowinactivebuttontoggledhoverbg","title":"window.inactive.button.toggled.hover.bg","text":"Type: texture Default: window.inactive.button.toggled.unpressed.bg Parentrelative: yes <p>Specifies the default background for titlebar buttons if the user is pressing them with the mouse while they are toggled - such as when a window is maximized. This element is for non-focused windows. When it is parentrelative, then it uses the window.inactive.title.bg which is underneath it.</p> <p>See also: titlebar colors, window.inactive.title.bg, window.active.button.toggled.hover.bg</p>"},{"location":"Help/Themes/#windowinactivebuttontoggledbg","title":"window.inactive.button.toggled.bg","text":"Type: texture Default: window.inactive.button.pressed.bg Parentrelative: yes <p>This property is obsolete and only present for backwards compatibility.</p>"},{"location":"Help/Themes/#menu-colors","title":"Menu colors","text":""},{"location":"Help/Themes/#menutitletextcolor","title":"menu.title.text.color","text":"Type: color Default: black <p>Specifies the text color for menu headers.</p>"},{"location":"Help/Themes/#menuitemstextcolor","title":"menu.items.text.color","text":"Type: color Default: white <p>Specifies the text color for normal menu entries.</p>"},{"location":"Help/Themes/#menuitemsdisabledtextcolor","title":"menu.items.disabled.text.color","text":"Type: color Default: black <p>Specifies the text color for disabled menu entries.</p>"},{"location":"Help/Themes/#menuitemsactivetextcolor","title":"menu.items.active.text.color","text":"Type: color Default: black <p>Specifies the text color for normal menu entries when they are selected.</p>"},{"location":"Help/Themes/#menuitemsactivedisabledtextcolor","title":"menu.items.active.disabled.text.color","text":"Type: color Default: menu.items.disabled.text.color <p>Specifies the text color for disabled menu entries when they are selected.</p>"},{"location":"Help/Themes/#menuseparatorcolor","title":"menu.separator.color","text":"Type: color Default: menu.items.text.color <p>The color of menu line separators. (As of version 3.4.7)</p> <p>See also: menu.items.text.color</p>"},{"location":"Help/Themes/#menu-textures","title":"Menu textures","text":""},{"location":"Help/Themes/#menuitemsbg","title":"menu.items.bg","text":"Type: texture Default: none Parentrelative: no <p>Specifies the background for menus.</p> <p>See also: menu.items.active.bg</p>"},{"location":"Help/Themes/#menuitemsactivebg","title":"menu.items.active.bg","text":"Type: texture Default: none Parentrelative: yes <p>Specifies the background for the selected menu entry (whether or not it is disabled). When it is parentrelative, then it uses the menu.items.bg which is underneath it.</p> <p>See also: menu.items.bg</p>"},{"location":"Help/Themes/#menutitlebg","title":"menu.title.bg","text":"Type: texture Default: none Parentrelative: yes <p>Specifies the background for menu headers. When it is parentrelative, then it uses the menu.items.bg which is underneath it.</p> <p>See also: menu.items.bg</p>"},{"location":"Help/Themes/#osd-textures","title":"OSD textures","text":""},{"location":"Help/Themes/#osdbg","title":"osd.bg","text":"Type: texture Default: window.active.title.bg Parentrelative: no <p>Specifies the background for on-screen-dialogs, such as the focus cycling (Alt-Tab) dialog.</p>"},{"location":"Help/Themes/#osdlabelbg","title":"osd.label.bg","text":"Type: texture Default: window.active.label.bg Parentrelative: yes <p>Specifies the background for text in on-screen-dialogs, such as the focus cycling (Alt-Tab) dialog.</p>"},{"location":"Help/Themes/#osdhilightbg","title":"osd.hilight.bg","text":"Type: texture Default: window.active.label.bg, if it is not parentrelative. Otherwise, window.active.title.bg Parentrelative: no <p>Specifies the texture for the selected desktop in the desktop cycling (pager) dialog.</p>"},{"location":"Help/Themes/#osdunhilightbg","title":"osd.unhilight.bg","text":"Type: texture Default: window.inactive.label.bg, if it is not parentrelative. Otherwise, window.inactive.title.bg Parentrelative: no <p>Specifies the texture for unselected desktops in the desktop cycling (pager) dialog.</p>"},{"location":"Help/Themes/#osd-colors","title":"OSD colors","text":""},{"location":"Help/Themes/#osdlabeltextcolor","title":"osd.label.text.color","text":"Type: color Default: black <p>Specifies the text color for on-screen-dialogs, such as the focus cycling (Alt-Tab) dialog.</p>"},{"location":"Help/Themes/#osdhilightbgcolor","title":"osd.hilight.bg.color","text":"Type: color Default: black <p>Specifies the color for selected desktops in the desktop cycling (pager) dialog.</p>"},{"location":"Help/Themes/#osdunhilightbgcolor","title":"osd.unhilight.bg.color","text":"Type: color Default: black <p>Specifies the color for unselected desktops in the desktop cycling (pager) dialog.</p>"},{"location":"Help/Themes/#text-justification","title":"Text justification","text":""},{"location":"Help/Themes/#windowlabeltextjustify","title":"window.label.text.justify","text":"Type: justification Default: Left <p>Specifies how window titles are aligned in the titlebar for both the focused and non-focused windows.</p>"},{"location":"Help/Themes/#menutitletextjustify","title":"menu.title.text.justify","text":"Type: justification Default: Left <p>Specifies how text is aligned in all menu headers.</p>"},{"location":"Help/Themes/#text-shadows","title":"Text shadows","text":""},{"location":"Help/Themes/#windowactivelabeltextfont","title":"window.active.label.text.font","text":"Type: text shadow string Default: no shadow <p>Specifies the shadow for the focused window's title.</p> <p>See also: window.inactive.label.text.font</p>"},{"location":"Help/Themes/#windowinactivelabeltextfont","title":"window.inactive.label.text.font","text":"Type: text shadow string Default: no shadow <p>Specifies the shadow for non-focused windows' titles.</p> <p>See also: window.active.label.text.font</p>"},{"location":"Help/Themes/#menuitemsfont","title":"menu.items.font","text":"Type: text shadow string Default: no shadow <p>Specifies the shadow for all menu entries.</p>"},{"location":"Help/Themes/#menutitletextfont","title":"menu.title.text.font","text":"Type: text shadow string Default: no shadow <p>Specifies the shadow for all menu headers.</p>"},{"location":"Help/Themes/#osdlabeltextfont","title":"osd.label.text.font","text":"Type: text shadow string Default: no shadow <p>Specifies the text shadow for on-screen-dialogs, such as the focus cycling (Alt-Tab) dialog.</p>"},{"location":"Help/Themes/#dialogs","title":"Dialogs","text":"<p>Openbox shows dialog boxes in some situations. Two examples are:</p> <ul> <li>The exit dialog window that appears when the exit   action is called.</li> <li>When closing a window for a program that is not responding.</li> </ul> <p>These dialogs have buttons, such as Cancel and Exit. These buttons get their background information from window.active.button.*.bg. The buttons' text color comes from window.active.button.*.image.color.</p>"},{"location":"Help/Themes/#button-images","title":"Button images","text":"<p>The images used for the titlebar buttons and the submenu bullet are 1-bit xbm (X Bitmaps). These are masks where 0 = clear and 1 = colored.</p> <p>The xbm image files are placed in the same directory within your theme as the <code>themerc</code> file, as shown in the file structure discussion.</p> <p>The xbm's which Openbox uses as its internal defaults are distributed with Openbox and installed to <code>/usr/share/doc/openbox/xbm</code>.</p> <p>Here are all the possible xbm files which Openbox looks for.</p>"},{"location":"Help/Themes/#maximized-button","title":"Maximized button","text":""},{"location":"Help/Themes/#maxxbm","title":"max.xbm","text":"Default: Internal default <p>Maximize button in its default, unpressed state.</p>"},{"location":"Help/Themes/#max_toggledxbm","title":"max_toggled.xbm","text":"Default: If max.xbm is present, it uses that. If not, it has a separate internal default <p>Maximize button when it is in toggled state.</p>"},{"location":"Help/Themes/#max_pressedxbm","title":"max_pressed.xbm","text":"Default: max.xbm, or its internal default <p>Maximized button when pressed.</p>"},{"location":"Help/Themes/#max_disabledxbm","title":"max_disabled.xbm","text":"Default: max.xbm, or its internal default <p>Maximized button when disabled.</p>"},{"location":"Help/Themes/#max_hoverxbm","title":"max_hover.xbm","text":"Default: max.xbm, or its internal default <p>Maximized button when mouse is over it.</p>"},{"location":"Help/Themes/#max_toggled_pressedxbm","title":"max_toggled_pressed.xbm","text":"Default: max_toggled.xbm, or max.xbm, or its internal default <p>Maximized button when pressed, in toggled state.</p>"},{"location":"Help/Themes/#max_toggled_hoverxbm","title":"max_toggled_hover.xbm","text":"Default: max_toggled.xbm, or max.xbm, or its internal default <p>Maximized button when mouse is over it, in toggled state.</p>"},{"location":"Help/Themes/#iconify-button","title":"Iconify button","text":""},{"location":"Help/Themes/#iconifyxbm","title":"iconify.xbm","text":"Default: Internal default <p>Iconify button in its default, unpressed state.</p>"},{"location":"Help/Themes/#iconify_pressedxbm","title":"iconify_pressed.xbm","text":"Default: iconify.xbm, or its internal default <p>Iconify button when pressed.</p>"},{"location":"Help/Themes/#iconify_disabledxbm","title":"iconify_disabled.xbm","text":"Default: iconify.xbm, or its internal default <p>Iconify button when disabled.</p>"},{"location":"Help/Themes/#iconify_hoverxbm","title":"iconify_hover.xbm","text":"Default: iconify.xbm, or its internal default <p>Iconify button when mouse is over it.</p>"},{"location":"Help/Themes/#close-button","title":"Close button","text":""},{"location":"Help/Themes/#closexbm","title":"close.xbm","text":"Default: Internal default <p>Close button in its default, unpressed state.</p>"},{"location":"Help/Themes/#close_pressedxbm","title":"close_pressed.xbm","text":"Default: close.xbm, or its internal default <p>Close button when pressed.</p>"},{"location":"Help/Themes/#close_disabledxbm","title":"close_disabled.xbm","text":"Default: close.xbm, or its internal default <p>Close button when disabled.</p>"},{"location":"Help/Themes/#close_hoverxbm","title":"close_hover.xbm","text":"Default: close.xbm, or its internal default <p>Close button when mouse is over it.</p>"},{"location":"Help/Themes/#all-desktops-button","title":"All-desktops button","text":""},{"location":"Help/Themes/#deskxbm","title":"desk.xbm","text":"Default: Internal default <p>All-desktops button in its default, unpressed state.</p>"},{"location":"Help/Themes/#desk_toggledxbm","title":"desk_toggled.xbm","text":"Default: If desk.xbm is present, it uses that. If not, it has a separate internal default <p>All-desktops button when it is in toggled state.</p>"},{"location":"Help/Themes/#desk_pressedxbm","title":"desk_pressed.xbm","text":"Default: desk.xbm, or its internal default <p>All-desktops button when pressed.</p>"},{"location":"Help/Themes/#desk_disabledxbm","title":"desk_disabled.xbm","text":"Default: desk.xbm, or its internal default <p>All-desktops button when disabled.</p>"},{"location":"Help/Themes/#desk_hoverxbm","title":"desk_hover.xbm","text":"Default: desk.xbm, or its internal default <p>All-desktops button when mouse is over it.</p>"},{"location":"Help/Themes/#desk_toggled_pressedxbm","title":"desk_toggled_pressed.xbm","text":"Default: desk_toggled.xbm, or desk.xbm, or its internal default <p>All-desktops button when pressed, in toggled state.</p>"},{"location":"Help/Themes/#desk_toggled_hoverxbm","title":"desk_toggled_hover.xbm","text":"Default: desk_toggled.xbm, or desk.xbm, or its internal default <p>All-desktops button when mouse is over it, in toggled state.</p>"},{"location":"Help/Themes/#shade-button","title":"Shade button","text":""},{"location":"Help/Themes/#shadexbm","title":"shade.xbm","text":"Default: Internal default <p>Shade button in its default, unpressed state.</p>"},{"location":"Help/Themes/#shade_toggledxbm","title":"shade_toggled.xbm","text":"Default: If shade.xbm is present, it uses that. If not, it has a separate internal default <p>Shade button when it is in toggled state.</p>"},{"location":"Help/Themes/#shade_pressedxbm","title":"shade_pressed.xbm","text":"Default: shade.xbm, or its internal default <p>Shade button when pressed.</p>"},{"location":"Help/Themes/#shade_disabledxbm","title":"shade_disabled.xbm","text":"Default: shade.xbm, or its internal default <p>Shade button when disabled.</p>"},{"location":"Help/Themes/#shade_hoverxbm","title":"shade_hover.xbm","text":"Default: shade.xbm, or its internal default <p>Shade button when mouse is over it.</p>"},{"location":"Help/Themes/#shade_toggled_pressedxbm","title":"shade_toggled_pressed.xbm","text":"Default: shade_toggled.xbm, or shade.xbm, or its internal default <p>Shade button when pressed, in toggled state.</p>"},{"location":"Help/Themes/#shade_toggled_hoverxbm","title":"shade_toggled_hover.xbm","text":"Default: shade_toggled.xbm, or shade.xbm, or its internal default <p>Shade button when mouse is over it, in toggled state.</p>"},{"location":"Help/Themes/#submenu-bullet","title":"Submenu bullet","text":""},{"location":"Help/Themes/#bulletxbm","title":"bullet.xbm","text":"Default: Internal default <p>The bullet shown in a menu for submenu entries.</p>"},{"location":"Help/UpgradingTo3.4/","title":"Upgrading to 3.4","text":"<p>Openbox 3.4 looks a lot like previous versions, but once you start using it, you will see that it is not. There are a huge number of improvements and changes made in our 3.4 release. This guide goes through all these changes and what they mean for users, themers, and developers.</p> <p>.]]</p>"},{"location":"Help/UpgradingTo3.4/#the-i-dont-have-time-give-me-something-fast-approach","title":"The \"I don't have time give me something fast\" approach","text":"<p>There are a number of new things that you won't be able to take advantage of without updating your configuration file. One quick and easy way to get these features is to just delete your <code>~/.config/openbox/rc.xml</code> configuration file and set your config back up from there with Obconf or by hand.</p> <p>You can use the default configuration file, installed to <code>/etc/xdg/openbox/rc.xml</code> if you use click-to-focus. However if you use focus-follows-mouse, the <code>/usr/share/doc/openbox/rc-mouse-focus.xml</code> file may make a better template for you to work with.</p> <p>Take a look at the details of the default configuration to learn what the default keyboard bindings are.</p>"},{"location":"Help/UpgradingTo3.4/#whats-new-in-version-34","title":"What's new in version 3.4 ?","text":"<p>Our getting started guide is a great place to start learning the best ways to start an Openbox session. If you've been running a previous version of Openbox, you can keep using the methods you have been and everything will work, but there are also some new features that you may wish to take advantage of, especially in terms of how you log into or run an Openbox session.</p> <p>During the development cycle for Openbox 3.4, we fixed and closed every bug listed in the bug tracker from previous versions. There's a big list of the bugs in the Openbox:Changelog, and we're not going to go through them all here. We're going to talk about the new things.</p>   ## Usability  ### New log-in options  Openbox now provides three ways to start an Openbox session through a graphical login manager, or through the command line. These new methods to start Openbox are detailed in the [getting started guide](Help:Getting_started) which you should definitely take a look at.  When logging in through KDM, GDM or some other graphical log-in system, you no longer have to set up a `~/.xsession` file to get a usable Openbox session. You can select the \"Openbox\" entry in the Session Type menu, and support for various applications, as well as [SCIM](#SCIM_support) are automatically included in your log in. The `openbox-session` provides these same capabilities from the command line. See the [autostart documentation](Help:Autostart) to see how Openbox does this, and how to launch your own choice applications along with Openbox when you log in.  Other new log-in options are the \"KDE/Openbox\" option, which opens a KDE session with Openbox as your window manager and the \"GNOME/Openbox\" option which opens a GNOME session with Openbox as your window manager. These can also be accessed through the `openbox-kde-session` and `openbox-gnome-session` commands.  See the [getting started guide](Help:Getting_started), even if Openbox is not new to you, to see more \\[Dr Susan Lim\\] about these startup options and what they provide - especially the new \"Openbox\" (from graphical login) or `openbox-session` option.  ### New \"Alt-Tab\" dialog  ![](NewFocusDialog.png \"NewFocusDialog.png\") Openbox 3.4 sports a brand new dialog for cycling between windows. This new dialog shows icons for all windows you can switch to instead of just showing the icon for the current target. You can see the new dialog in action to the right.  The dialog shows when you press the Alt-Tab or Alt-Shift-Tab keys in the default configuration.  ### Faster than ever  Openbox has always been fast, but version 3.4 is faster than any before it. A large number of improvements were made throughout the code that impact directly on how fast Openbox can do what it does. A couple examples would be the window stacking code (how Openbox determines which windows to put on top of which) and our use of lists.  ### More reliable  It's starting to sound like a Microsoft Windows ad, but in Openbox 3.4 we cleaned up a huge number of bug reports which had been sent in since the last release. We also changed and rewrote a number of sections to improve their reliability, such as the focus handling and session manager interaction.  ### Language support  Openbox now uses Pango exclusively for its font rendering, which means better support for displaying text from all languages.  This change allowed us to clean up the font rendering code a lot, and we've sped up the drawing routines significantly from previous Openbox versions.  ### Transparent windows  ![](TrueTransparentWindows.png \"TrueTransparentWindows.png\") Windows that use the new 32-bit true transparency provided by x.org servers are now supported by Openbox. You can see an example of urxvt running with true transparency in the picture to the right.  True 32-bit transparency is made possible through the Composite extension. So, in order to use this feature you need to run a composite manager, such as this (run it without any arguments if you don't want the extras like drop shadows): <code>      xcompmgr -c -t-5 -l-5 -r4.2 -o.55 &amp;  </code>  Openbox itself is not a composite manager, though it may be some day.  ### Keeping windows on screen  When windows adjust their dimensions, Openbox now takes care to make sure they don't end up off of the screen, unless the application explicitly requests it. This keeps your desktop more usable, meaning you don't have to move windows around to use them so much, without interfering with letting you move windows outside the screen if you want to, like some other window managers do.  ### Improved startup notification  ![](KickerStartupNotification.png \"KickerStartupNotification.png\") Openbox can now use startup notification when launching programs. This means that when the application's window appears, Openbox will know when you began launching the program, and what desktop you were launching it on. It also means that other programs, such as taskbars, can show feedback that an application is starting.  The [menu section](#Startup_notification) talks about how to use startup notification in your menus and key bindings.  Using startup notification for your menu entries also helps with focus stealing prevention. If you use it, then Openbox can keep the launching application's new window from stealing focus in the middle of your typing (and sending your password off to IRC for example).  ![](NewBusyCursor.png \"NewBusyCursor.png\") Openbox used to use the \"watch\" icon from the core X cursors when a program was starting up, which is a very hard to use. This has been changed in 3.4 so that the startup notification stays out of your way. If you use an Xcursors theme, Openbox will use the busy cursor with an arrow, an example of which can be seen to the left. And if you don't use an Xcursor theme, it won't change your cursor at all.  ### Running applications remotely  ![](HostnameInTitlebar.png \"HostnameInTitlebar.png\") If you run applications from another machine in your X session, Openbox will now display their host machine in the window's titlebar, as you can see in the image to the right.    ### Improved support for multiple screens  If you have a multi-monitor setup, either with Xinerama (a.k.a. Twin View) or with independent screens, Openbox 3.4 has improved support for your setup.  Input focus handling has been made more robust all around in version 3.4, but especially with multiple screens in mind. Openbox will no longer steal focus from other screens and you can click on the root window to give focus to a particular screen, with a mouse binding. The default configuration lets you focus a screen by clicking on the desktop with your Left mouse button.  Window placement between Xinerama (a.k.a. Twin View) monitors has also been improved. New windows will appear on the same monitor as other windows they are related to. If they don't have related windows then they are placed where the input focus is, or where the mouse pointer is.    ### Complete support for latest EWMH  Openbox 3.4 sports complete support for the latest freedesktop.org EWMH specification (version 1.4-draft2), as well as even some hints which will be in a future release!  This means that the latest features from applications will have full support from Openbox.  ### 8-bit TrueColor support  Environments such as VNC are often used in 8-bit display mode to reduce the network bandwidth they require. VNC uses an 8-bit display mode called \"TrueColor\", which previous versions of Openbox did not support. As of version 3.4 you can use Openbox in these 8-bit TrueColor environments, rather than forcing you to use the old \"pseudocolor\" paradigm. This means that 8-bit VNC will work out of the box now.  ### Legacy fullscreen applications  Openbox can now detect when applications are trying to be fullscreen, even when they don't use the EWMH fullscreen hints. This means that applications, such as VLC (Video LAN Client) in fullscreen mode won't be covered by panels or other windows.  ### Omnipresent windows  Omnipresent windows, or windows which are present across all desktops, have had their behavior improved in Openbox 3.4. When changing desktops, these windows will no longer \"steal\" focus and hold onto it.  ### Maximized terminal windows  Applications which resize in increments, such as x terminals have been made to full the screen properly when they are maximized. This means that when the window is maximized, you will no longer have a little margin at the edge of the screen, where you can click and miss the window. Some older terminal clients may not know what to do when they are resized outside of their increments, but most will already work fine, such as xterm, rxvt-unicode, and gnome-terminal.  ### Focus cycling to panels and desktop windows  ![](FocusCyclingToPanel.png \"FocusCyclingToPanel.png\") New options have been added to the focus cycling actions to allow you to cycle between panels and desktop windows. You can use Control-Alt-Tab to access this feature in the default configuration. You can use these options with the traditional focus cycling behavior or with the directional focus cycling.  See the [configuration section](#NextWindow_and_DirectionalFocus_for_panels_and_desktop_windows) for details on how to set this up in your own key bindings.  ### Session saving and restoring  Session saving and restoring has been revamped and improved in version 3.4.  Clients which do not use the session management protocol can now be saved and restored. This applies to programs like rxvt-unicode, Firefox, and probably most applications which are not GNOME or KDE based.  Ksmserver (KDE's session manager) allows the window manager to be more precise in saving the session state. Openbox 3.4 takes advantage of this feature to improve session saving within KDE.  ### Cycling across all desktops  ![](FocusCyclingForAllDesktops.png \"FocusCyclingForAllDesktops.png\") An option has been added to allow you to focus cycle between windows on all of your desktops. This is not enabled in the default configuration, but you can easily add the  option to your NextWindow and PreviousWindow actions to enable this behavior. For example, to get this behavior in the default configuration you would change the Alt-Tab and Alt-Shift-Tab key bindings to this: <code> yes yes </code>  When you use this, the desktop which the window is on is appended to the window's title in the cycling dialog, as you can see in the image to the right.  This is also mentioned in the [configuration section](#NextWindow_for_all_desktops).  ### Desktop cycling dialog  In 3.4.4, the desktop cycling dialog's behavior has been changed again. It will be shown for a fixed time whenever the desktop is changed, instead of going away when the keys are released. This may or may not be something which you like, but it is necessary at the moment for many applications, such as Firefox. You can see the nitty gritty details as to why [here](http://mail.gnome.org/archives/wm-spec-list/2007-May/msg00000.html). But this change, along with some others, means that applications will know when they do and don't have focus at all times, which will make them work properly, which we think is a good thing.  If you don't want the dialog, or want to change the timeout, edit the  setting in the  setting, or use ObConf 2.0.3. Set it to 0 to disable it completely: <code>        ... other settings ...       400 </code>  Click here for information on \\[/?title=Help:Upgrading_to_3.4&amp;oldid=1209#Desktop_cycling_dialog versions 3.4.0 through 3.4.3\\]  ### Animated iconify and restore  A simple animation has been added for when windows are iconified or restored to visually display where the window has been iconified.  You can watch this ![Image:Video.png](Video.png \"Image:Video.png\") [video showing the animation](Media:IconifyAnimation.ogg) (in ogg format), to have an idea of what it looks like. The animation is very fast, so the video can only capture so much.  The animation is quick and not resource intensive. But if you prefer to have your windows instantly appear and disappear, rather than animate, you can use the `no` option in the  section of your configuration file.  ### Focus aware applications  Some applications like to track when they are focused or not, or which of their windows is focused. Instant Messengers often do this, so that it can alert you when a message comes and the window is not focused. Firefox also uses these same mechanisms to tell which window the user is working with.  Openbox 3.4 takes special care to make sure that applications always know when their windows gain and lose focus. We mentioned one way that we go about this in the [usability](#Desktop_cycling_dialog) section.  Right now the standards and coordination for this between window managers and applications is non-existent, so Openbox takes every precaution it can to make sure that every application will work right.  ### Resizing on the window's edges  Resizing grips have been added to all edges of your windows. These are especially noticeable along the top edge of the titlebar, and in the top-left and top-right corners. This makes resizing windows easier and faster with just the mouse.  You can also resize along the bottom and side edges of the window, though in most themes the sides are only a 1 pixel border, which can be hard to click on.  If you undecorate a window (an option in the client menu), by default the windows are given just a border. This border can now also be used to resize the window.  In order to take advantage of these new resizing areas, however, you need to have bindings for them in your configuration file. They are all used in the default configuration. See the [configuration section](#New_contexts) for what to add to your own configuration to get these to work for you.  Resizing any edge can also be accomplished with the Alt-Right mouse button binding (in the default configuration).  ### Windows without icons  ![](IconlessWindows.png \"IconlessWindows.png\") Some applications don't set an icon on their window. Generally, every application which would show the window's icon will choose some icon of its own in this case. So Openbox would show one thing, your task bar a different icon, and maybe your pager would show a third icon, all for the same window.  Starting in Openbox 3.4, when a window does not provide any icon of its own, Openbox will set its icon to a default \"window\" icon, so that applications can agree on what to display for the window.  ### Synchronized window resizing  If your application supports it, Openbox 3.4 will synchronize its resizing with the application to avoid excessive flicker.  You can, as always, also choose to have the application window not resized until you have finished resizing the frame with the `no` in the  section of your configuration file.  ### Improved \"Show Desktop\"  Many panels provide a button to \"show your desktop\". Openbox also provides this functionality through the Windows-D <sup>1</sup> key binding in the default configuration.  Show Desktop mode has been improved in Openbox 3.4. When you go in and out of \"Show Desktop\" mode, Openbox will hide and show all your windows, the same as it always has. But when you use \"Show Desktop\" mode to hide all your windows and then open a new window, the other windows will be iconified rather than unhidden. This makes \"Show Desktop\" a quick way to unclutter your screen.   <sup>1</sup> The default bindings for the \"Windows\" key may not work with your \"Windows\" key (if you have one), depending on your setup. The \"W\" in modifier in key bindings is actually a shortcut for the \"Super\" modifier key. Most distributions bind the \"Super\" modifier key to the \"Windows\" key on 104-key PC keyboards, so this should just work for most people.  Also see [the configuration section](#Windows_key_in_key_bindings).   ### Key chain dialog  ![](KeychainDialog.png \"KeychainDialog.png\") Openbox has supported emacs-style key chains for a long time. However, new in 3.4 is a small popup dialog that visually shows you where you are in your key chain's sequence.  The dialog is small and shows up in the top left corner of your screen after a small delay. So if you go through your key chains without too much waiting, you might never see it.    ### Chroot key chains and key quoting  Openbox 3.4 introduces the ability to \"chroot\" your keychains. This means that when you enter a chroot section of your key chain, Openbox will not leave the keychain automatically, and when you use keys further along the chain, it will stay within the chroot.  There are a number of examples of how this could be used, so you can get a better idea. You could use this to use the arrow keys to change desktops, for instance. A key chain setup such as: <code> no no no no </code>  This key chain would mean that when you pressed and released Control-Alt-D, you would enter a chroot. From then on, other key bindings would not function, but the Arrow keys by themselves would move your around your desktops. Pressing Escape or Control-G (in the default configuration) would take you back out of the chroot and return your key bindings to normal.  Another use for chroots is \"key quoting\". This is used when you run an Openbox session in a window, such as a VNC client. In order to use key bindings inside the VNC, generally, you have to make sure that they are different from the ones in your main Openbox session.  With key quoting, you can use the same key bindings in both. Here's an example: <code> </code>  With this example, when you pressed Control-Alt-Q, Openbox would enter the chroot. Then your normal Openbox key bindings would stop working and would instead be passed through to the VNC session (assuming you have it focused). When you were done, you could press Control-Alt-Q again, and your normal key bindings would be restored in you main Openbox session.  The BreakChroot action is also new, and is just for breaking out of a chroot. The global  (Control-G in the default configuration) can also be used for this. However, the BreakChroot action is special in that it will only break out of *one* chroot. So, if you have nested chroots, you can break out of only as many as you want, by placing 1 or more BreakChroot actions in a key binding.  The chroot changes are also talked about in the [configuration section](#Chrooted_key_chains_and_BreakChroot_action).    ### Auto-hiding decorations  ![](HiddenTitlebarButtons.png \"HiddenTitlebarButtons.png\") In Openbox 3.4 titlebar buttons can hide automatically. This is done in such a way that they only hide if hiding won't move other buttons around. This way you always know where to click to do the same thing, but when possible, the buttons can be hidden to reduce clutter.  We've removed the  option from the  section of the configuration file in favour of this auto-hiding. This is also mentioned in the [configuration section](#hideDisabled_removed).  The bottom handle is also hidden automatically now for windows that can't be resized, making their decorations cleaner and simpler.    ### MoveFromEdge actions  ![](MoveFromEdge.png \"MoveFromEdge.png\") We added MoveFromEdge\\* actions corresponding to MoveToEdge\\* actions. MoveToEdge actions let you move a window up against another window's edge (or the edge of the screen). The new MoveFromEdge actions let you move a window that is overlapping another off to its side. See the image to the right for a graphical desciption of what these actions do.  **Note:** these have been rolled into the MoveToEdge actions in Openbox 3.4.3.    ### Moving maximized windows  If you have a multi-monitor system using Xinerama (a.k.a. TwinView), you can now move maximized windows between your monitors without unmaximizing them first. With the default configuration, just grab the titlebar and drag to the other monitor, and the window will move there.  ### Root context for mouse bindings  A new \"Root\" context has been added for mouse bindings. This context is for bindings on your desktop which you want to only function when you aren't using some program to display icons on your desktop.  Generally this context is only used for showing root window menus. This way, in the default configuration, when you have a desktop window in place with icons (such as in GNOME or KDE), right clicking will bring up the context menu for the desktop. And when you don't, right clicking will bring up the Openbox root menu.  You can move the menu bindings from the \"Root\" context to the \"Desktop\" context in your configuration file to have them work for both cases, if you want to override the menus provided by the desktop icons.  This is also mentioned in the [configuration section](#New_Root_context).  ### Helper windows  Openbox 3.4 improves how helper windows for applications behave. Helper windows are those such as tear off toolbars and menus, and utility windows like tool boxes.  If you are using an application across multiple desktops, when you focus a main window, the helper windows will automatically come to that desktop, so you don't need to move them all back and forth by hand. Previously, it was so much effort as to be almost impossible to work across desktops like this, such as having a gimp image open on different desktops. But now, it's a snap.  Helper windows are also kept above the main window so that they are always there when you need them. Toolbars and menus are also not given focus when you click in them, so that you can keep on working in the main window without having to click back to it.  When focus cycling, such as with Alt-Tab in the default configuration, helper windows do not show up in the list when the main window is already there. This reduces the clutter of focus cycling, letting you choose the application itself easier. Once the application is focused, however, you can use Alt-Tab to get to any of its helper windows.  ### Mangling desktop configuration  Changes to your desktop names or number in the Openbox configuration will no longer be applied until the next time you run Openbox. Restarting won't be enough to change them, you will have to log out of your X session, and back in. The desktop names/number configuration options are default values to be used when they are not already set by other applications, or saved in your session.  This change was made so that if you change your desktop configuration through a pager, Openbox will not clobber those settings when you reconfigure it (to change your theme, for example). Also, since the window manager is usually run before other applications on startup, they can permanently manage your desktop configuration without Openbox getting in the way.  [ObConf 1.6.2](ObConf:About) will let you change these settings in your config file, and will immediately update your current session too, like a pager would, so that you don't need to log out and in to see the changes.  ### --reconfigure option  Use the `openbox --reconfigure` command to tell the currently running Openbox to reload its configuration. This will apply any changes to the configuration file such as the theme or key bindings.  ### --restart option  Use the `openbox --restart` command to restart the current running Openbox instance. This can be used to upgrade to a new version without logging out of your session.     ## Menus  ### Combined client list menu  ![](NewCombinedClientListMenu.png \"NewCombinedClientListMenu.png\") We've added a new client list menu. Instead of having a submenu for each desktop, it combines all your desktops into one menu. This menu is used by middle click on the desktop in the default configuration.  To show this menu, put the following into a keyboard or mouse binding: <code> client-list-combined-menu </code>  For example, from the default configuration: <code> client-list-combined-menu </code>  ### Iconified windows in the client list menus  Iconified windows in the client list menus used to be shown below a separator. In Openbox 3.4 we have gotten rid of the visual clutter created by that separator.  Instead, iconified windows will always appear at the bottom of the list and will be surround with brackets. You can see, for example, that Kaffeine Player is iconified in the picture of the [combined client list menu](#Combined_client_list_menu).  ### Keyboard accelerators (using letters instead of arrows)  Wouldn't it be nice if you could just hit a letter to instantly choose the item you wanted in your menus? Now you can!  In the [new client menu](#New_client_menu), the shortcuts are highlighted with an underline. In other menus, underlines are not used, instead you can just press the first letter of a menu item to jump to it. If there are multiple entries with the same letter, press it again to go to the second one.  If the first letter of a menu entry is not an ASCII alpha-numeric character, then the first such character will be used as the shortcut for that entry, and it will be underlined.  Now you can navigate your menus at light speed.  ### No more menu titles  We've had a large number of requests from users who wanted to get rid of the titles at the top of their menus. So instead of just letting you turn them on and off, we decided to give you a whole range of flexibility.  Menus no longer have titles. So if you don't want a title, you don't need one. But in their place you can now put headers (which look like the old titles) anywhere you want in your menu. In the picture of the [combined client list menu](#Combined_client_list_menu) above, there is a header for each desktop. You can do the same to separate sections of your own menus.  The default menu that comes with Openbox puts a header at the top of the menu, so it looks like the old menu title used to. Just remove the separator item from the menu and it will no longer have a title.  You put these headers in your menu by using separators, but with a label attribute, such as: <code> </code>  ### Startup notification  ![](KickerStartupNotification.png \"KickerStartupNotification.png\") Now when you run things from Openbox menus, you can enable startup notification. This means that if you have a tasklist or some other program that visually displays when applications are starting, it can work from Openbox menus too.  It is, however, disabled by default because it shouldn't be used with just anything. If you use it with an older terminal program, anything you launch from the terminal will be given an old timestamp. One way to fix that is to run `unset DESKTOP_STARTUP_ID` in your shell startup. You also should not use it for commands that don't create a window on screen, because without a window being created, nothing will know when the command finished running.  To make use startup notification when launching a program use something like the following in your menu: <code> yes Calculator gnome-calc2 gnome-calculator </code>  If you don't specify a  or  field, they are derived from the command that is being executed.  If the application starts, and the notification doesn't go away, that means you shouldn't use it for that application. Any GNOME or KDE application will support startup notification by default.  You can also use this startup notification when launching applications with key bindings, in the same way.  The new startup notification feature is also mentioned in the [usability section](#Improved_startup_notification).  ### New client menu  ![](NewClientMenu.png \"NewClientMenu.png\") The client menu is the menu you get when you right click on an application's title bar or click its icon (in the default configuration).  The client menu has been restructured, revamped, and improved for Openbox 3.4. You can see in the picture to the right, the new structure of the menu. It's cleaner and easier to get to the item you want.  In addition, you can now use [keyboard accelerators](#Keyboard_accelerators_.28using_letters_instead_of_arrows.29) to navigate the menu.  As well, when you use a keyboard shortcut (Alt-space in the default configuration) to bring up the menu, it will now pop up at the top left corner of the window, rather than wherever your mouse pointer happens to be at the time. You can see that happening in the picture also.  We've tried our best to make meaningful, unique keyboard shortcuts for all the current translations of Openbox also, but any improvements would be appreciated.  ### Selecting disabled menu items  Disabled menu entries in the client menu can now be selected with the mouse or the keyboard. Visually, this is a lot nicer feeling, when you move the mouse around and the selected entry doesn't just disappear.  This also has the added bonus that no matter what entries in the menu are enabled or disabled, the same number of arrow keys or letter keys will always take you to the same entry. Yay for consistent behavior.  ### Menu placement  When you opened a menu close to the edge of the screen, opening sub-menus used to push the whole menu back from the edge of the screen, which could be jarring and make navigation difficult.  In Openbox 3.4, menus are always placed on screen such that they won't have to move afterward. Sub-menus are opened cleverly to the side with room available, so that the menus behave in a more predictable manner.  ### Large menus  ![](NewMoreMenu.png \"NewMoreMenu.png\") Menus that are bigger than your screen is tall are no longer a problem for Openbox. When a menu grows too large, it will be split off into a sub-menu at the bottom titled \"More...\". You can see an example in the figure to the right.     ## Themes  ### New default theme  ![](NewClearlooksTheme.png \"NewClearlooksTheme.png\") The Clearlooks and Clearlooks-Olive themes by John McKnight have been added to the Openbox distribution. These themes were designed to go well with the Clearlooks GTK theme (and Klearlooks KDE theme). Clearlooks has been made the default theme for Openbox 3.4.  ### User specified fonts  Fonts are no longer loaded based on the theme. You specify your fonts through the configuration file instead. However, font shadows are still read from the theme, from the font string, the same way as before. For new themes you can just include the shadow information in the font line, such as: <code>      window.active.label.text.font: shadow=y:shadowtint=70:shadowoffset=1  </code>  The default configuration has fonts set up in it, which you can modify. If you'd like to use your old configuration, the new version of [ObConf](ObConf:About) can set these for you or you can edit your configuration file by hand.  There are 5 different fonts used by Openbox: ActiveWindow, InactiveWindow, MenuHeader (for [the new menu headers](#No_more_menu_titles)), MenuItem, and OnScreenDisplay (for the various dialogs Openbox displays such as window cycling).  An example to set a font is: <code> sans 8 bold normal </code>  You need one section like this for each of the above listed fonts, with the `place` field changed appropriately. See the [configuration section](#New_fonts) for the details of these configuration options.  ### Distributed themes renamed  The themes distributed with Openbox have been renamed to begin with a capital letter. For example, the \"syscrash\" was renamed to \"Syscrash\" and the \"bear2\" theme was renamed to \"Bear2\". If you use one of the default themes and your configuration is not finding it after upgrading, this would be why. This change makes the themes more consistant with other themes both in the Openbox world and without.  ### New tricks for \"ParentRelative\" textures  ![](NewParentrelativeTextures.png \"NewParentrelativeTextures.png\") In previous versions of Openbox, parentrelative textures could not add any decorations of their own, they had to only show through what was below them.  In Openbox 3.4 you can give parentrelative textures a border, bevel or interlacing, just like any gradient or solid texture.    ### New theme elements for on-screen-displays  On-screen-displays such as the focus cycling (Alt-Tab) dialog, the coordinates dialog, or the key chains dialog, can now be themed independently. Previously, they just used the window title styles, however, now you can set them however you wish. (They fall back to using the window title styles as before.)  The new theme elements for on-screen-displays are:  - osd.border.width - The border width given to dialogs - osd.border.color - The color of the border around dialogs - osd.bg - The background for dialogs - osd.label.bg - The background for text in dialogs - osd.label.text.color - The text color for dialogs - osd.label.text.font - The text shadow for dialogs - osd.hilight.bg - The texture for the selected desktop in the desktop   cycling dialog - osd.unhilight.bg - The texture for non-selected desktops in the   desktop cycling dialog  These are also all listed in the [theme specification](Help:Themes).  ### New theme elements for toggled buttons  The toggled button theme elements have been split up into 3 elements for each, so that each toggled state can be themed independently. You can still use the old elements, and things will work the same as they did previously, but you now have the option to theme toggled buttons with much more attention to detail.  - window.active.button.toggled.image.color has been split into:   - window.active.button.toggled.unpressed.image.color   - window.active.button.toggled.pressed.image.color   - window.active.button.toggled.hover.image.color - window.inactive.button.toggled.image.color has been split into:   - window.inactive.button.toggled.unpressed.image.color   - window.inactive.button.toggled.pressed.image.color   - window.inactive.button.toggled.hover.image.color - window.active.button.toggled.bg has been split into:   - window.active.button.toggled.unpressed.bg   - window.active.button.toggled.pressed.bg   - window.active.button.toggled.hover.bg - window.inactive.button.toggled.bg has been split into:   - window.inactive.button.toggled.unpressed.bg   - window.inactive.button.toggled.pressed.bg   - window.inactive.button.toggled.hover.bg  The Onyx themes, added to the distribution in Openbox 3.4.1 demonstrate the uses of these new theme elements.  ### menu.border.color  The `menu.border.color` property has been added to the theme format. This allows you to set the border color for Openbox menus independently from that used for windows.  border.color has been obsoleted in 3.4, but is still used as a fallback if the new border colors are not specified.    ### window.active.border.color  The `window.active.border.color` property has been added to the theme format. This allows you to set the border color for the active (currently focused) window. This color can be set independently for the active and inactive windows now. See [window.inactive.border.color](#window.inactive.border.color).  Note that setting colors through globs such as window.active.\\*.color may set this property for you when you didn't mean to. Themes which use globbing like this may display differently in Openbox 3.4 than previous versions.  border.color has been obsoleted in 3.4, but is still used as a fallback if the new border colors are not specified.  ### window.active.title.separator.color  ![float](NewTitleSeparatorColors.png \"float\") The `window.active.title.separator.color` property has been added to the theme format. This allows you to set the color for the titlebar border (but only the section between the titlebar and the client) independently from the rest of the borders. You can set this for both active an inactive windows. See [window.inactive.title.separator.color](#window.inactive.title.separator.color).  Note that setting colors through globs such as window.active.\\*.color may set this property for you when you didn't mean to. Themes which use globbing like this may display differently in Openbox 3.4 than previous versions.    ### window.inactive.border.color  The `window.inactive.border.color` property has been added to the theme format. This allows you to set the border color for all inactive (not currently focused) windows. This color can be set independently for the active and inactive windows now. See [window.active.border.color](#window.active.border.color).  Note that setting colors through globs such as window.inactive.\\*.color may set this property for you when you didn't mean to. Themes which use globbing like this may display differently in Openbox 3.4 than previous versions.  border.color has been obsoleted in 3.4, but is still used as a fallback if the new border colors are not specified.    ### window.inactive.title.separator.color  ![float](NewTitleSeparatorColors.png \"float\") The `window.inactive.title.separator.color` property has been added to the theme format. This allows you to set the color for the titlebar border (but only the section between the titlebar and the client) independently from the rest of the borders. You can set this for both active an inactive windows. See [window.active.title.separator.color](#window.active.title.separator.color).  Note that setting colors through globs such as window.inactive.\\*.color may set this property for you when you didn't mean to. Themes which use globbing like this may display differently in Openbox 3.4 than previous versions.    ### menu.border.width  The `menu.border.width` property has been added to the theme format. This allows you to set the border width used for Openbox menus independantly from the border width used for windows.    ### menu.items.active.disabled.text.color  ![](ActiveDisabledMenuEntry.png \"ActiveDisabledMenuEntry.png\") The `menu.items.active.disabled.text.color` property has been added to the theme format. As of Openbox 3.4, disabled menu entries can still be hilighted by the mouse or keyboard. This property lets you set the color of the text for disabled entries when they are hilighted. Many themes disabled text and selected colors are quite similar, so this can be used to make the entries more readable. See the image on the right for an example of a hilighted, but disabled, menu entry.  ### Even sized titlebar buttons  Previously titlebar buttons would be an arbitrary size based on the font size you were using in the titlebar. In Openbox 3.4 the titlebar button size has been standardized such that they will always be an even size. This way, if you make even sized images for the buttons, you can know that it will always be centered.    ### New default titlebar button images  ![](NewDefaultTitlebarButtons.png \"NewDefaultTitlebarButtons.png\") The default images for the titlebar have been changed. They are probably familiar since they appeared in many themes. Now they will be used for any theme that doesn't provide its own images.  If you'd like to modify these images for your own themes, xbm copies of the images are installed to `/usr/share/doc/openbox/xbm/`.    ### Improvements in the distributed themes  The distributed themes have been fixed up to work with all the latest features, such as the [menu.items.active.disabled.text.color](#menu.items.active.disabled.text.color), and the change in the border colors. None of them really take advantage of these new features yet though, that's where you themers come in."},{"location":"Help/UpgradingTo3.4/#configuration","title":"Configuration","text":"<p>The following talks about changes to the Openbox configuration file. This file is found in <code>~/.config/openbox/rc.xml</code> for users, and the system-wide defaults are installed to <code>/etc/xdg/openbox/rc.xml</code>.</p>"},{"location":"Help/UpgradingTo3.4/#new-contexts","title":"New contexts","text":"<p>There are five new contexts for mouse bindings, and if you don't include them in your configuration file, they will not be used for anything.</p> <p>The new contexts are: Left, Right, TLCorner, TRCorner, and Top. These refer to the edges of windows, and the default configuration uses them for resizing the window. Theese contexts can be used in the  section of your configuration file. Here's what the default configuration has: <code> <pre><code>&lt;mouse&gt;\n  ...\n\n  &lt;context name=\"Left\"&gt;\n    &lt;mousebind button=\"Left\" action=\"Press\"&gt;\n      &lt;action name=\"Activate\"/&gt;\n    &lt;/mousebind&gt;\n    &lt;mousebind button=\"Left\" action=\"Drag\"&gt;\n      &lt;action name=\"Resize\"&gt;&lt;edge&gt;left&lt;/edge&gt;&lt;/action&gt;\n    &lt;/mousebind&gt;\n  &lt;/context&gt;\n\n  &lt;context name=\"Right\"&gt;\n    &lt;mousebind button=\"Left\" action=\"Press\"&gt;\n      &lt;action name=\"Activate\"/&gt;\n    &lt;/mousebind&gt;\n    &lt;mousebind button=\"Left\" action=\"Drag\"&gt;\n      &lt;action name=\"Resize\"&gt;&lt;edge&gt;right&lt;/edge&gt;&lt;/action&gt;\n    &lt;/mousebind&gt;\n  &lt;/context&gt;\n\n  &lt;context name=\"TLCorner\"&gt;\n    &lt;mousebind button=\"Left\" action=\"Press\"&gt;\n      &lt;action name=\"Activate\"/&gt;\n    &lt;/mousebind&gt;\n    &lt;mousebind button=\"Left\" action=\"Drag\"&gt;\n      &lt;action name=\"Resize\"/&gt;\n    &lt;/mousebind&gt;\n  &lt;/context&gt;\n\n  &lt;context name=\"TRCorner\"&gt;\n    &lt;mousebind button=\"Left\" action=\"Press\"&gt;\n      &lt;action name=\"Activate\"/&gt;\n    &lt;/mousebind&gt;\n    &lt;mousebind button=\"Left\" action=\"Drag\"&gt;\n      &lt;action name=\"Resize\"/&gt;\n    &lt;/mousebind&gt;\n  &lt;/context&gt;\n\n  &lt;context name=\"Top\"&gt;\n    &lt;mousebind button=\"Left\" action=\"Press\"&gt;\n      &lt;action name=\"Activate\"/&gt;\n    &lt;/mousebind&gt;\n    &lt;mousebind button=\"Left\" action=\"Drag\"&gt;\n      &lt;action name=\"Resize\"&gt;&lt;edge&gt;top&lt;/edge&gt;&lt;/action&gt;\n    &lt;/mousebind&gt;\n  &lt;/context&gt;\n\n  ...\n&lt;/mouse&gt;\n</code></pre> <p></p> <p>A new Bottom context has also been added, but in 3.4 it is just a synonym for the Handle context. In future versions, the Handle context will be completely replaced by the new Bottom context.</p> <p>How these new contexts can be used and what they can do for you is talked about more in the usability section.</p>"},{"location":"Help/UpgradingTo3.4/#new-fonts","title":"New fonts","text":"<p>Fonts are now specified from your configuration file instead of by your themes. The default configuration has fonts set up in it that you can modify.</p> <p>There are 5 different fonts used throughout Openbox: ActiveWindow, InactiveWindow, MenuHeader, MenuItem, and OnScreenDisplay.</p> <p>ActiveWindow and InactiveWindow are used for window titlebars. MenuHeader is used for the new menu headers. MenuItem is used for the items in all Openbox menus. OnScreenDisplay is used for popup dialogs such as the window cycling dialog shown by the Alt-Tab keys in the default configuration.</p> <p>The fonts are set in the  section of your configuration file. The default configuration has the following: <code> <pre><code>&lt;theme&gt;\n ...\n\n  &lt;font place=\"ActiveWindow\"&gt;\n    &lt;name&gt;sans&lt;/name&gt;\n    &lt;size&gt;8&lt;/size&gt;\n    &lt;!-- font size in points --&gt;\n    &lt;weight&gt;bold&lt;/weight&gt;\n    &lt;!-- 'bold' or 'normal' --&gt;\n    &lt;slant&gt;normal&lt;/slant&gt;\n    &lt;!-- 'italic' or 'normal' --&gt;\n  &lt;/font&gt;\n  &lt;font place=\"InactiveWindow\"&gt;\n    &lt;name&gt;sans&lt;/name&gt;\n    &lt;size&gt;8&lt;/size&gt;\n    &lt;!-- font size in points --&gt;\n    &lt;weight&gt;bold&lt;/weight&gt;\n    &lt;!-- 'bold' or 'normal' --&gt;\n    &lt;slant&gt;normal&lt;/slant&gt;\n    &lt;!-- 'italic' or 'normal' --&gt;\n  &lt;/font&gt;\n  &lt;font place=\"MenuHeader\"&gt;\n    &lt;name&gt;sans&lt;/name&gt;\n    &lt;size&gt;9&lt;/size&gt;\n    &lt;!-- font size in points --&gt;\n    &lt;weight&gt;normal&lt;/weight&gt;\n    &lt;!-- 'bold' or 'normal' --&gt;\n    &lt;slant&gt;normal&lt;/slant&gt;\n    &lt;!-- 'italic' or 'normal' --&gt;\n  &lt;/font&gt;\n  &lt;font place=\"MenuItem\"&gt;\n    &lt;name&gt;sans&lt;/name&gt;\n    &lt;size&gt;9&lt;/size&gt;\n    &lt;!-- font size in points --&gt;\n    &lt;weight&gt;normal&lt;/weight&gt;\n    &lt;!-- 'bold' or 'normal' --&gt;\n    &lt;slant&gt;normal&lt;/slant&gt;\n    &lt;!-- 'italic' or 'normal' --&gt;\n  &lt;/font&gt;\n  &lt;font place=\"OnScreenDisplay\"&gt;\n    &lt;name&gt;sans&lt;/name&gt;\n    &lt;size&gt;9&lt;/size&gt;\n    &lt;!-- font size in points --&gt;\n    &lt;weight&gt;bold&lt;/weight&gt;\n    &lt;!-- 'bold' or 'normal' --&gt;\n    &lt;slant&gt;normal&lt;/slant&gt;\n    &lt;!-- 'italic' or 'normal' --&gt;\n  &lt;/font&gt;\n&lt;/theme&gt;\n</code></pre> <p></p> <p>This new font selection is also mentioned in the usability section.</p>"},{"location":"Help/UpgradingTo3.4/#nextwindow-for-all-desktops","title":"NextWindow for all desktops","text":"<p>The NextWindow and PreviousWindow actions have had the  option added to them. The  option is a boolean value (on/off/yes/no) which defaults to off. When you enable it, the action will allow you to cycle through windows on all of your desktops. <p>Here is an example of using it: <code> <pre><code>  &lt;keybind key=\"A-Tab\"&gt;\n    &lt;action name=\"NextWindow\"&gt;&lt;allDesktops&gt;yes&lt;/allDesktops&gt;&lt;/action&gt;\n  &lt;/keybind&gt;\n  &lt;keybind key=\"A-S-Tab\"&gt;\n    &lt;action name=\"PreviousWindow\"&gt;&lt;allDesktops&gt;yes&lt;/allDesktops&gt;&lt;/action&gt;\n  &lt;/keybind&gt;\n</code></pre> <p></p> <p>The usability section talks more about this new feature and shows it in use.</p>"},{"location":"Help/UpgradingTo3.4/#nextwindow-and-directionalfocus-for-panels-and-desktop-windows","title":"NextWindow and DirectionalFocus for panels and desktop windows","text":"<p>The NextWindow, PreviousWindow, DirectionalFocusNorth, DirectionalFocusSouth, DirectionalFocusEast, and DirectionalFocusWest actions have had added to them the  and  options. These take boolean values (on/off/yes/no) and they both default to off. <p>When  is enabled, the action will allow you to move focus to any panel windows on screen. When  is enabled, the action will allow you to move focus to your desktop window, if you have one. The options can be combined to let you use one action to cycle through both, as is done in Metacity. When either one is enabled, the action will no longer go to regular windows. <p>In the default configuration, Control-Alt-Tab is bound to NextWindow with both of these options enabled, which is similar to the default bindings in Metacity. The default configuration has this: <code> <pre><code>&lt;keyboard&gt;\n  ...\n\n  &lt;keybind key=\"C-A-Tab\"&gt;\n    &lt;action name=\"NextWindow\"&gt;\n      &lt;panels&gt;yes&lt;/panels&gt;&lt;desktop&gt;yes&lt;/desktop&gt;\n    &lt;/action&gt;\n  &lt;/keybind&gt;\n\n  ...\n&lt;/keyboard&gt;\n</code></pre> <p></p> <p>The usability section talks about these new options.</p>"},{"location":"Help/UpgradingTo3.4/#chrooted-key-chains-and-breakchroot-action","title":"Chrooted key chains and BreakChroot action","text":"<p>A new attribute called \"chroot\" has been added to the  element. The chroot attribute is a boolean value (on/off/yes/no) which defaults off. When it is enabled, the keybind is turned into a chroot. <p>Chrooting, what it means, and how to use it, is described in the usability section.</p> <p>Any keybind can be made a chroot, even if there are no key bindings chained within it. In that case the global  (Control-G by default) will need to be used to exit the chroot. Chroots can also be nested within other chroots for pretty much unlimited complexity if that's what you are after. <p>A new action BreakChroot has also been added which is only useful inside of a chrooted key binding. This action breaks out of one level of chroot. You can chain multiple BreakChroots together to break out of multiple levels of chroots if you are nesting them.</p> <p>Here's an example of a chroot key binding: <code> <pre><code>  &lt;keybind key=\"C-A-d\" chroot=\"true\"&gt;\n    &lt;keybind key=\"Up\"&gt;&lt;action name=\"DesktopUp\"&gt;&lt;dialog&gt;no&lt;/dialog&gt;&lt;/action&gt;&lt;/keybind&gt;\n    &lt;keybind key=\"Down\"&gt;&lt;action name=\"DesktopDown\"&gt;&lt;dialog&gt;no&lt;/dialog&gt;&lt;/action&gt;&lt;/keybind&gt;\n    &lt;keybind key=\"Left\"&gt;&lt;action name=\"DesktopLeft\"&gt;&lt;dialog&gt;no&lt;/dialog&gt;&lt;/action&gt;&lt;/keybind&gt;\n    &lt;keybind key=\"Right\"&gt;&lt;action name=\"DesktopRight\"&gt;&lt;dialog&gt;no&lt;/dialog&gt;&lt;/action&gt;&lt;/keybind&gt;\n    &lt;keybind key=\"Escape\"&gt;&lt;action name=\"BreakChroot\"/&gt;&lt;/keybind&gt;\n  &lt;/keybind&gt;\n</code></pre> <p></p>"},{"location":"Help/UpgradingTo3.4/#new-root-context","title":"New Root context","text":"<p>Another new context, above the Top, Left, Right, and so on, has been added to Openbox 3.4. We've added a \"Root\" context which serves as a context only for the root window. This means the mouse bindings in the root context will only work if you're not using a desktop program for icons, such as in GNOME and KDE. This allows us to put root menu bindings in the default configuration without overriding the menus provided by these desktop environments' desktops.</p> <p>This new context is talked about and its uses decribed in the usability section.</p>"},{"location":"Help/UpgradingTo3.4/#windows-key-in-key-bindings","title":"Windows key in key bindings","text":"<p>Key bindings that use W as a modifier key have changed. W used to be hard-coded to be Mod4Mask. Now it has been changed to whatever mask you have the Super mod key bound to.</p> <p>You can use <code>xmodmap</code> to see your current bindings. Most modern distributions bind the windows key to Super_L, and bind Super_L to Mod4Mask. So this should probably not affect you unless you have a highly customized system, or have customized your xmodmap.</p>"},{"location":"Help/UpgradingTo3.4/#hidedisabled-removed","title":"hideDisabled removed","text":"<p>The  option has been removed from the configuration file, in favour of auto-hiding decorations."},{"location":"Help/UpgradingTo3.4/#edges_hit_layers_below-removed","title":"edges_hit_layers_below removed","text":"<p>The  option has been removed from the configuration file, in an effort to simplify and clarify our configuration."},{"location":"Help/UpgradingTo3.4/#settings-for-specific-windows-per-application-settings","title":"Settings for specific windows (Per-application settings)","text":""},{"location":"Help/UpgradingTo3.4/#matching-windows-with-wildcards","title":"Matching windows with wildcards","text":"<p>The per-application settings have been revamped for Openbox 3.4. When specifying the name, class, or role for a rule, you can use simple wildcard matching with the \"*\" and \"?\" characters. A \"*\" matches any number of characters and a \"?\" matches any single character.</p> <p>This means that the role has changed how it is matched. It used to just match the first 'n' characters, 'n' was the length of the string you provided. Now to get the same result, just append a \"*\" to the end of the role.</p>"},{"location":"Help/UpgradingTo3.4/#matching-against-multiple-rules","title":"Matching against multiple rules","text":"<p>As well, multiple rules can be applied to the same window. This lets you do more with less writing. For instance you could write one rule to match against all windows and then later rules could further change things for more specific windows. The rules are matched in the order they appear in your configuration file, so later rules will override previous rules if they both specify the same setting for a window.</p>"},{"location":"Help/UpgradingTo3.4/#per-monitor-positioning-changed","title":"Per-monitor positioning changed","text":"<p>The</p> <p> <p>parameter for positioning windows has been renamed to ."},{"location":"Help/UpgradingTo3.4/#the-default-value","title":"The \"default\" value","text":"<p>You can now use \"default\" as the content for any option in a rule. This is the same as the option not being present at all.</p>"},{"location":"Help/UsingGit/","title":"Using Git","text":""},{"location":"Help/UsingGit/#quick-instructions","title":"Quick instructions","text":"<p>The following command will create a directory called \"<code>openbox</code>\" and download the source code into it (i. e., will create the local copy of external repository):</p> <pre><code>git\u00a0clone https://github.com/danakj/openbox.git\n</code></pre> <p>The following command will get the latest changes from external repository and store them to the downloaded local repository:</p> <pre><code>git\u00a0pull\n</code></pre> <p>Note however that this only does what you expect, if you haven't made any changes. If you have, it will attempt to merge your changes, which may or may not be what you want; see \"Local changes\" below.</p>"},{"location":"Help/UsingGit/#branches","title":"Branches","text":"<p>There are two main branches in the Openbox git repositories: \"work\" and \"master\". The difference is that our \"work\" branches can have testing stuff and be rebased (which means, git will get confused, if you try to pull from them). Once we are pretty sure something will at least not blow up, it will be put on the \"master\" branch and we try not to rebase that unless really needed.</p> <p>By default you will get the \"master\" branch, hence the name. If you want the \"work\" branch, the first time you will need to run:</p> <pre><code>git\u00a0checkout\u00a0--track\u00a0-b\u00a0work\u00a0origin/work\n</code></pre> <p>or if you have a recent git (somewhere in 1.6.x), you can just do:</p> <pre><code>git\u00a0checkout\u00a0-t\u00a0origin/work\n</code></pre> <p>You can now switch between branches with <code>git checkout master</code> and <code>git checkout work</code>.</p> <p>If you want the very latest changes, first decide, if you want \"master\" or \"work\". For \"master\" you can usually just run <code>git pull</code>, but if you're on \"work\", you probably want to run something like:</p> <pre><code>git\u00a0fetch\u00a0;\u00a0git\u00a0reset\u00a0--hard\u00a0origin/work\n</code></pre> <p>Note though that this will delete all local changes to checked out files and also any commits you've made on the current branch. If you do have commits, you can try <code>git pull --rebase</code>, but no guarantees. If something goes wrong, anything you've committed is actually still available, read the <code>git-reflog</code> man page for details. Uncommitted changes will be gone after a reset <code>--hard</code> though.</p>"},{"location":"Help/UsingGit/#local-changes","title":"Local changes","text":"<p>Unlike CVS and Subversion, git lets you have local changes while still tracking upstream development. In a nut shell, make your changes and run:</p> <pre><code>git\u00a0commit\u00a0-a\u00a0-m\u00a0\"informative\u00a0message\"\n</code></pre> <p>It's usually a good idea to keep your changes in a separate branch. You can do this in a couple of ways. The easiest way is to run:</p> <pre><code>git\u00a0checkout\u00a0-b\u00a0my-branch\u00a0master\n</code></pre> <p>and then commit all your changes to that branch.</p>"},{"location":"Help/UsingGit/#conflicting-changes","title":"Conflicting changes","text":"<p>If you hang on to your changes for a long time, it's likely that we will make commits, that conflict with yours. There are two ways to deal with this. You can either <code>git-merge</code> our branch and resolve the differences, but the better way is to use <code>git-rebase</code>. Last command will take your commits and apply them to the tip (the latest version) of the specified branch, pausing after each commit that conflicts. This usually makes it easier to resolve the conflicts and also gives a nicer history. Using <code>git-rebase</code> is a bit complicated, so read the man page.</p> <p>If you just want to test that your changes work with the latest version of Openbox, you can merge \"master\" branch and then later use <code>git reset --hard HEAD^</code> to revert the merge. However, I recommend first doing a <code>git checkout -b my-temp</code>, since running <code>git reset</code> twice will continue reverting real commits, so it's easy to mess up. If you're doing all the temp merging on a separate branch you don't have to worry about that.</p>"},{"location":"Help/UsingGit/#contributing-code","title":"Contributing code","text":""},{"location":"Help/UsingGit/#github-workflow","title":"GitHub workflow","text":"<p>If you'd like to use the GitHub workflow, then make a fork of the Openbox git repo above via GitHub, and send pull requests from your branch with your code changes. GitHub has documentation, describing this process.</p>"},{"location":"Help/UsingGit/#bugzilla-workflow","title":"BugZilla workflow","text":"<p>You've coded an exciting feature and want to send a diff? How to do it? <code>git diff</code> you might guess, and while that will produce a diff you can send. <code>git format-patch</code> is a bit nicer as it will automatically give you a patch file per commit that you want to send, with the commit message in each file.</p> <p>In the simple case, where you just want to send off the top commit from your repo, do:</p> <pre><code>git\u00a0format-patch\u00a0-1\n</code></pre> <p>If you have a bunch of patches and you have git 1.7 you can do:</p> <pre><code>git\u00a0format-patch\u00a0@{u}\n</code></pre> <p>and it will figure out the correct branch to consider \"upstream\" and spit out a bunch of patch files. If you don't, you have to give the range manually, but it will almost always be:</p> <pre><code>git\u00a0format-patch\u00a0origin/master\n</code></pre> <p>Once you have your patch(es), open a bug in the bugzilla as instructed here.</p> <p>Another option is to set up your own public repo and simply tell us where to pull your changes from. Look at the <code>git-daemon</code> man page for details. This is not really preferred usually though, and you'll probably need to be patient and hang around in the IRC channel for a while.</p>"},{"location":"Help/UsingGit/#low-bandwidth-option","title":"Low bandwidth option","text":"<p>If your internet connection is very slow (the full git repo is currently around 8.5\u00a0MB) and you just want the very latest version without any history, you can run:</p> <pre><code>git\u00a0clone\u00a0--depth\u00a01\u00a0https://github.com/danakj/openbox.git\n</code></pre> <p>This will give you only the current and preceding commit from each branch, but you can't do much more with your repo than compile the code. Merging as described above will only work, if you use a depth high enough to include the point, where the \"backport\" branch separated from \"master\" branch. See the <code>git-clone</code> and <code>git-fetch</code> man pages for further details.</p> <p>You can also download a tarball of any revision via gitweb. Click \"tree\" next to a branch name at the bottom, then click \"snapshot\" at the top of the new page.</p>"},{"location":"Help/UsingGit/#alternate-repos","title":"Alternate repos","text":"<p>Due to the distributed nature of git, you can choose to pull from various upstream locations (see the <code>git-remote</code> man page for details on how to use several remotes):</p> <p>git://git.openbox.org/dana/openbox git://git.openbox.org/mikachu/openbox git://git.mika.l3ib.org/openbox.git git://repo.or.cz/openbox.git git://github.com/Mikachu/openbox git://github.com/danakj/openbox</p> <p>The astute git user will notice, that there are some variations in branches offered among these, for example dana has a \"libs\" branch that separates out some common wm code in a library, and mikachu has a \"mikabox\" branch which is just some crazy stuff.</p>"},{"location":"Help/UsingGit/#further-reading","title":"Further reading","text":"<p>On the git home page there are many great tutorials and all the man pages are available for browsing as well.</p>"},{"location":"Help/UsingOpenboxInGNOME/","title":"Using Openbox in GNOME","text":""},{"location":"Help/UsingOpenboxInGNOME/#starting-openbox-with-gnome","title":"Starting Openbox with GNOME","text":"<p> The instructions below don't work with current versions of GNOME and Openbox versions before 3.4.8. As a workaround, you can run the command <code>openbox --replace</code> after logging into a standard GNOME session, and cross your fingers.</p> <p>To log into the GNOME desktop environment with Openbox as your window manager, select the \"GNOME/Openbox\" option when logging in through GDM, which you can see in Figure 1.</p> <p>If you don't use a graphical log in, you can use the <code>openbox-gnome-session</code> command to start a GNOME session with Openbox as your window manager.</p> <p>See the getting started guide for more details.</p>   ## Accessing gnome-panel with key bindings  ![](GnomeMenuInOpenbox.png \"GnomeMenuInOpenbox.png\") If you are using gnome-panel in Openbox and want to access it with key bindings, you can use the `gnome-panel-control` program (which is a part of Openbox) to do so.  Here is an example of two bindings to pop up the gnome-panel's main menu, and to pop up the \"Run\" dialog:   <code> gnome-panel-control --main-menu gnome-panel-control --run-dialog </code>   Just add that to the  section of your `rc.xml` [configuration file](Help:Configuration), and change the keys to match your preferences. The keys shown are the defaults used by Metacity, the default window manager for GNOME."},{"location":"Help/UsingOpenboxInGNOME/#logging-out","title":"Logging out","text":"<p> In order to log out of GNOME without going through the gnome-panel, you can use the command <code>gnome-session-save --kill --gui</code>.</p> <p>Here is an example of a \"Log out\" option for a menu:</p> <code>        ...        gnome-session-save --kill --gui </code> <p>You can also use the same command in a key binding to log out by pressing a key combination.</p> <p>The session state may not be preserved when you log out with Openbox running. You can fix this by restarting Metacity first, for example with the following shell script.</p> <p><code> <pre><code>killall openbox\ncoproc metacity\ngnome-session-save --logout-dialog\n</code></pre> <p></p> <p>And to shut down</p> <p><code> <pre><code>killall openbox\ncoproc metacity\ngnome-session-save --shutdown-dialog\n</code></pre> <p></p>"},{"location":"Help/UsingOpenboxInGNOME/#nautilus-and-openbox","title":"Nautilus and Openbox","text":"<p>If you don't want Nautilus to draw icons on your desktop, you can disable it with the <code>gconf-editor</code> program. Run <code>gconf-editor</code> and browse to \"/apps/nautilus/preferences\" and turn off the show desktop option. Another simpler way to get that is to call nautilus with the --no-desktop switch.</p> <p>If you do want icons from Nautilus on your desktop, you should disable the menu Openbox shows when you right-click on the desktop. Other desktop programs don't have this problem, but with Nautilus you won't be able to access its right-click menu unless you disable Openbox's (or use Shift-Right Click to access the Nautilus menu). In the default configuration <code>rc.xml</code> file, remove the following section (in the \"Root\" mouse-binding context): <code> <pre><code>    &lt;mousebind button=\"Right\" action=\"Press\"&gt;\n      &lt;action name=\"ShowMenu\"&gt;&lt;menu&gt;root-menu&lt;/menu&gt;&lt;/action&gt;\n    &lt;/mousebind&gt;\n</code></pre> <p> Also, file a bug report for Nautilus so you won't have to do this in the future.</p>"},{"location":"Help/UsingOpenboxInKDE/","title":"Using Openbox in KDE","text":""},{"location":"Help/UsingOpenboxInKDE/#starting-openbox-with-kde","title":"Starting Openbox with KDE","text":"<p> To log into the K Desktop Environment with Openbox as your window manager, select the \"KDE/Openbox\" option when logging in through KDM, which you can see in Figure 1.</p> <p>If you don't use a graphical log in, you can use the <code>openbox-kde-session</code> command to start a KDE session with Openbox as your window manager.</p> <p>See the getting started guide for more details.</p> KDE-Openbox.png"},{"location":"Help/XFCE/Openbox/","title":"Openbox","text":""},{"location":"Help/XFCE/Openbox/#using-openbox-in-xfce-4","title":"Using Openbox in XFCE 4","text":"<p>NOTE: You must have Openbox (and possibly ObConf) already installed to use this guide.</p> <p>To use Openbox with XFCE, log into your normal XFCE session. Then, run this command in a terminal:</p> <p><code> <pre><code>openbox --replace &amp; exit\n</code></pre> <p></p> <p>This command terminates the currently running window manager, runs Openbox, and closes the terminal. Now you must log out and log back in. When you go to log out, make sure you check the box that says \"Save session for future login\" or something like that. When you log back in, XFCE will use Openbox.</p> <p>Note, if you don't use Xfwm4, this command could fail, depending on the abilities of the window manager. For example, Fluxbox doesn't accept to be replaced this way. In this case, you have to run the following command:</p> <p><code> <pre><code>killall fluxbox ; openbox &amp; exit\n</code></pre> <p></p> <p>To be able to exit the session using xfce4-session, open your file ~/.config/openbox/menu.xml (if it isn't there, copy it from /etc/xdg/openbox/menu.xml). Look for the entry</p> <p><code> <pre><code>&lt;item label=\"Exit\"&gt;\n    &lt;action name=\"Exit\"/&gt;\n&lt;/item&gt;\n</code></pre> <p></p> <p>and change it for the following</p> <p><code> <pre><code>&lt;item label=\"Exit\"&gt;\n  &lt;action name=\"Execute\"&gt;\n    &lt;command&gt;xfce4-session-logout&lt;/command&gt;\n  &lt;/action&gt;\n&lt;/item&gt;\n</code></pre> <p></p> <p>Otherwise, using the \"Exit\" entry of the root-menu will cause Openbox to terminate its execution.</p> <p>Also, if you notice scrolling the wheel to change between virtual desktops skips one or another virtual desktop (and this bothers you and would like to fix it just for mental sake), open your ~/.config/openbox/rc.xml file and move the mouse binds with actions \"DesktopPrevious\" and \"DesktopNext\" from the context \"Desktop\" to the context \"Root\" (you may need to define the Root context).</p> <p>If you want to use the Openbox root-menu instead of Xfce's, (right click over the desktop) you could terminate Xfdesktop by running the following command in a terminal:</p> <pre><code>xfdesktop --quit\n</code></pre> <p>The bad news is that Xfdesktop manages the wallpaper and desktop icons, so you should use other tools for that purpose (check the FAQ for some ideas). By terminating Xfdesktop, the former issue with the virtual desktops is no longer a problem.</p>"},{"location":"ObConf/About/","title":"About","text":"<p>This page is about the Openbox configuration tool, ObConf 2.0.</p>"},{"location":"ObConf/About/#installing-and-distributing-openbox-themes","title":"Installing and distributing Openbox themes","text":"<p>ObConf now easily installs new themes which use the <code>.obt</code> Openbox theme archive format for distribution. Just open any <code>.obt</code> theme archive in your file browser, or use the interface provided inside ObConf.</p> <p>You can also use ObConf to create <code>.obt</code> Openbox theme archives for distributing your own themes.</p>"},{"location":"ObConf/About/#screenshots","title":"Screenshots","text":""},{"location":"ObConf/About/#download","title":"Download","text":"<p>ObConf is available for download here. The current changelog is found here.</p>"},{"location":"ObConf/About/#installing-obconf","title":"Installing ObConf","text":"<p>ObConf should be installed to the <code>/usr</code> prefix to have file associations function correctly.</p> <p>When ObConf is installed, upgraded or uninstalled, you need to run these commands to update the <code>.obt</code> file associations for GNOME:</p> <pre><code>update-mime-database /usr/share/mime\nupdate-desktop-database /usr/share/applications\n</code></pre> <p>These programs are a part of the <code>shared-mime-info</code> and <code>desktop-file-utils</code> packages. They should be installed if GNOME is installed.</p>"},{"location":"ObConf/About/#dependencies","title":"Dependencies","text":"<p>Compiling ObConf requires the following packages:</p> <ul> <li>GTK+ 2.x library and headers (development package)</li> <li>Glade 2.x library and headers (development package)</li> <li>Openbox 3.4 or above (the libraries development package if it is separate)</li> </ul>"},{"location":"ObConf/About/#building-obconf","title":"Building ObConf","text":"<p>If you have installed Openbox into the <code>/usr/local</code> prefix, you will need to tell the ObConf configure script where to find the Openbox libraries:</p> <pre><code>PKG_CONFIG_PATH=/usr/local/lib/pkgconfig ./configure --prefix=/usr\n</code></pre>"},{"location":"ObConf/Changelog/","title":"Changelog","text":""},{"location":"ObConf/Changelog/#204","title":"2.0.4","text":"<ul> <li>New translations: Danish, Coatian, Finnish, Latvian, Japanese,   Estonian, Serbian, Arabic, Dutch, Greek, Hungarian, Romanian, Polish,   Simplified Chinese, German, and Russian translations.</li> <li>Updates to other translations.</li> <li>Fix menu theme preview rendering (including crash on some themes).</li> <li>Add new --tab command line option.</li> <li>Allow larger margins.</li> <li>Updates to Openbox 3.5.2 libraries.</li> </ul>"},{"location":"ObConf/Changelog/#203","title":"2.0.3","text":"<ul> <li>Added Norwegian translation</li> <li>Added Turkish translation</li> <li>Updated Traditional Czech, Chinese, Italian, and Swedish translations</li> <li>Add support for the desktop warping option</li> <li>Add support for showing the popup notification when changing desktops</li> <li>Better build support for Max OSX platform (no --export-dynamic)</li> <li>Major layout changes</li> <li>Add support for putting the move/resize popup in a fixed position on   screen</li> <li>Add support for the <code>&lt;monitor&gt;</code> window placement option</li> <li>New icon by Myles Green</li> <li>Show an error when the configuration file is not valid, so it doesn't   get destroyed by ObConf</li> <li>Add a --config-file option to specify an alternate configuration file.</li> <li>Auto-load the same configuration as Openbox is using, if Openbox was   run with --config-file</li> </ul>"},{"location":"ObConf/Changelog/#202","title":"2.0.2","text":"<ul> <li>Add Traditional Chinese translation</li> <li>Add Italian translation</li> <li>Add Czech translation</li> <li>Add Spanish translation</li> <li>Add French translation</li> <li>Updated Swedish translation</li> <li>Add new Margins option (Margins tab)</li> <li>Add new option for centering windows when placing them</li> <li>Don't include the debian/ dir in releases</li> <li>Fix the missing TopRight option for the dock</li> <li>Fix the dock stacking option to match changes made in Openbox (it's   Above/Below not Top/Bottom)</li> <li>Give the theme previews white client areas to more closely resemble a   real window</li> <li>Update to Openbox 3.4.3 libraries</li> </ul>"},{"location":"ObConf/Changelog/#201","title":"2.0.1","text":"<ul> <li>Make ObConf work when the .obt file has been renamed (e.g. by   box-look.org)</li> <li>Update Swedish translation</li> <li>Update to Openbox 3.4.2 libraries</li> </ul>"},{"location":"ObConf/Changelog/#200","title":"2.0.0","text":"<ul> <li>Add the ability to install .obt theme archives</li> <li>Add the ability to create .obt theme archives</li> <li>Double clicking a .obt file will launch it with ObConf, install the   theme, and select it for both KDE and GNOME desktops</li> <li>Fix for writing invalid font entries when none existed in the config   file already</li> <li>Add new dock options showDelay and noStrut</li> <li>Add mouse option for double click time and drag threshold</li> <li>Add option for animate iconify/restore</li> <li>Make Openbox reconfigure with communication through the X server   rather than by PID</li> </ul>"},{"location":"ObConf/Changelog/#163","title":"1.6.3","text":"<ul> <li>Add the ability to change your fonts</li> <li>Add the <code>&lt;focusLast&gt;</code> config option</li> <li>When changing the number of desktops, or their names, ObConf will set   them in the current session as well as saving them to the Openbox   config file.</li> <li>Improve how ObConf sets the desktop names. You can leave them empty   and it will use the default translated names from Openbox.</li> </ul>"},{"location":"ObConf/Changelog/#161","title":"1.6.1","text":"<ul> <li>Update to the Openbox 3.4 series libraries.</li> </ul>"},{"location":"User/DanaJansens/","title":"Dana Jansens","text":"<p>Hi, I'm the primary author of Openbox. My main coauthor is Mikachu.</p> <p>This page was very out of date, but I'm over here: http://cg.scs.carleton.ca/~dana/</p>"},{"location":"User/Mikachu/","title":"Mikachu","text":"<p>Hi.</p>"},{"location":"User/Rcbarnes/","title":"Rcbarnes","text":"<p>Clay is a user interface architect, who has worked for GE Energy's software innovation team, and as the human interface theorist with Intrigo Media. He holds a Masters degree in Human-Computer Interaction from Rensselaer Polytechnic Institute, with Bachelors degrees from the University of Arizona in Computer Science (B.S.) and a Linguistics (B.A.). He is the author of the New Interface Advocate.</p>"}]}